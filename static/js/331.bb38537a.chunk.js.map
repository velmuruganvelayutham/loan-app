{"version":3,"file":"static/js/331.bb38537a.chunk.js","mappings":"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","sources":["components/ListLineMan.js","AddLineMan.js"],"sourcesContent":["import React,{Fragment,useState} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Table,Pagination } from \"react-bootstrap\";\nimport {BiEditAlt} from \"react-icons/bi\"\nimport {BsTrash} from \"react-icons/bs\"\nimport axios from 'axios'\nimport {baseURL} from \"../utils/constant\";\n\nconst ListLineMan=({linemannames,setUpdateUI})=>{\nconst[currentPage,setCurrentPage]=useState(1);\nconst recordsPerPage=5;\nconst lastIndex=currentPage*recordsPerPage;\nconst firstIndex=lastIndex-recordsPerPage;\nconst records=linemannames.slice(firstIndex,lastIndex);\nconst nPage=Math.ceil(Object.keys(linemannames).length/recordsPerPage);\nconst numbers=[...Array(nPage+1).keys()].slice(1);\nvar serialno=0;\n\nserialno=(currentPage-1) * recordsPerPage;\nconst removeLineMan=(id)=>{\n    axios.delete(`${baseURL}/linemancreate/delete/${id}`).then((res)=>{\n        setUpdateUI((preveState)=>!preveState)\n      })\n}\nfunction prevPage(){\n    if(currentPage!==firstIndex)\n    {\n      setCurrentPage(currentPage-1)\n    }\n    \n  }\n  function nextPage(){\n    if(currentPage!==lastIndex){\n        serialno=lastIndex;\n      setCurrentPage(currentPage+1);\n    }\n\n  }\n  function changeCPage(id){\n    setCurrentPage(id)\n  }\n  return(\n    <Fragment>\n      <div style={{margin:\"5rem\"}}>\n        <Table striped bordered hover size=\"sm\"  >\n          <thead>\n            <tr>\n              <th>\n                No\n              </th>\n              <th>\n                Name\n              </th>\n              <th>\n                Mobile No\n              </th>\n              <th>\n                Action\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              records && records.length>0\n              ?\n              (records.map((linemanname)=>{\n                serialno=serialno+1;\n                return(\n                  <tr>\n                    <td>{serialno}</td>\n                    <td>{linemanname.linemanname}</td>\n                    <td>{linemanname.mobileno}</td>\n                    <td>\n                    {/*<BiEditAlt  className='icons' onClick={()=>updateMode(cityname._id,cityname.cityname,cityname.citylineno)} />*/}\n                    <BsTrash className='icons' onClick={()=>removeLineMan(linemanname._id)} />\n                    </td>\n                  </tr>\n                  \n                )\n              })\n              )\n              :\n              \"No Data Available\"\n            }\n          </tbody>\n        </Table>\n        <nav>\n        \n          <Pagination>\n            <Pagination.Prev >\n            <a href=\"#\" className='page-link' onClick={prevPage}>Prev</a>\n            </Pagination.Prev>\n            {\n            numbers.map((n,i)=>(\n              <Pagination.Item>\n                <a href=\"#\" className='page-link'\n            onClick={()=>changeCPage(n)}>{n}</a>\n              </Pagination.Item>\n            ))\n          }\n            <Pagination.Next>\n            <a href=\"#\" className='page-link' onClick={nextPage}>Next</a>\n            </Pagination.Next>\n          </Pagination>\n        </nav>\n\n      </div>\n    </Fragment>\n  )\n\n}\nexport default ListLineMan;\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap';\nimport ListLineMan from \"./components/ListLineMan\"\nimport axios from \"axios\"\nimport { baseURL } from \"./utils/constant\";\nimport PlaceHolder from \"./components/spinner/placeholder\";\nimport { useTranslation } from \"react-i18next\";\nvar maxCitycode = 0;\nfunction AddLineMan() {\n  const [input, setInput] = useState(\"\");\n  const [inputmobileno, setInputMobileno] = useState(\"\")\n  const [lineMans, setLineMans] = useState([]);\n  const [updateUI, setUpdateUI] = useState(false);\n  const [updateId, setUpdateId] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const { t, i18n } = useTranslation();\n  useEffect(() => {\n    setIsLoading(true);\n    axios.get(`${baseURL}/linemancreate/get`).then((res) => {\n      setLineMans(res.data)\n      setIsLoading(false)\n    })\n      .catch(error => {\n        console.log(\"error=\", error);\n        setErrorMessage(\"Unable to fetch linenam list\");\n        setIsLoading(false);\n      })\n  }, [updateUI]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    axios.get(`${baseURL}/linemancreate/get/max`).then((res) => {\n      const checkstring = (res.data);\n      setIsLoading(false)\n      if (((res.data).length) > 0) {\n        maxCitycode = checkstring[0].maxCode + 1;\n      }\n      else {\n        maxCitycode = 1;\n      }\n    })\n      .catch(error => {\n        setErrorMessage(\"Unable to fetch lineman list\");\n        setIsLoading(false);\n        console.log(\"error=\", error);\n      })\n  }, []);\n\n  const addLineMan = () => {\n    setIsLoading(true);\n    axios.post(`${baseURL}/linemancreate/save`, { linemancode: maxCitycode, linemanname: input, mobileno: inputmobileno }).then((res) => {\n      //console.log(res.data)\n      setIsLoading(false)\n      setInput(\"\")\n      setInputMobileno(\"\");\n      setUpdateUI((prevState) => !prevState)\n    })\n      .catch(error => {\n        setErrorMessage(\"Unable to ADD lineman to the list\");\n        setIsLoading(false);\n        console.log(\"error=\", error);\n      })\n  }\n\n  const updateMode = (id, text, mobilenum) => {\n    setInput(text);\n    setInputMobileno(mobilenum);\n    setUpdateId(id);\n  }\n\n  const updateLineMan = () => {\n    setIsLoading(true);\n    axios.put(`${baseURL}/linemancreate/update/${updateId}`, { linemanname: input, mobileno: inputmobileno }).then((res) => {\n      setIsLoading(false)\n      setUpdateUI((prevState) => !prevState)\n      setInput(\"\");\n      setInputMobileno(\"\");\n      setUpdateId(null);\n\n    })\n      .catch(error => {\n        setErrorMessage(\"Unable to update LineMan to the list\");\n        setIsLoading(false);\n        console.log(\"error=\", error);\n      })\n  }\n\n  const renderLineManList = (\n    <div className=\"text-center\">\n      <ListLineMan linemannames={lineMans} setUpdateUI={setUpdateUI} />\n    </div>);\n\n  return (\n\n    <Container style={{ display: 'flex' }}>\n      <h2 className=\"text-center\">LINEMAN MASTER</h2>\n      <Row className=\"justify-content-md-center mt-5 \">\n        <Form >\n          <Row className=\"rounded bg-white\">\n            <Col xs={12} md={12} >\n              <Form.Group className=\"mb-3\" name=\"linemanname\" border=\"primary\" >\n                <Form.Label>LineMan Name</Form.Label>\n                <Form.Control type=\"text\" placeholder={t('placeholder')} required value={input} onChange={(e) => setInput(e.target.value)} />\n              </Form.Group>\n            </Col>\n\n          </Row>\n          <Row className=\"rounded bg-white\">\n            <Col xs={12} md={12} >\n              <Form.Group className=\"mb-3\" name=\"mobilenumber\" border=\"primary\" >\n                <Form.Label>Mobile No</Form.Label>\n                <Form.Control type=\"number\" placeholder=\"Enter Mobile No\" required value={inputmobileno} onChange={(e) => setInputMobileno(e.target.value)} />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row className=\"rounded bg-white\">\n            <div className=\"text-center mb-2 \" >\n              <Button variant=\"primary\" size=\"lg\" type=\"submit\" className=\"text-center\" onClick={updateId ? updateLineMan : addLineMan}>\n                Submit\n              </Button>\n            </div>\n            {isLoading ? <PlaceHolder /> : renderLineManList}\n            {errorMessage && <div className=\"error\">{errorMessage}</div>}\n\n          </Row>\n        </Form>\n      </Row>\n    </Container>\n\n  )\n}\nexport default AddLineMan;"],"names":["_ref","linemannames","setUpdateUI","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","lastIndex","firstIndex","records","slice","nPage","Math","ceil","Object","keys","length","numbers","_toConsumableArray","Array","serialno","_jsx","Fragment","children","_jsxs","style","margin","Table","striped","bordered","hover","size","map","linemanname","mobileno","BsTrash","className","onClick","id","_id","axios","delete","concat","baseURL","then","res","preveState","Pagination","Prev","href","n","i","Item","Next","maxCitycode","input","setInput","_useState3","_useState4","inputmobileno","setInputMobileno","_useState5","_useState6","lineMans","setLineMans","_useState7","_useState8","updateUI","_useState9","_useState10","updateId","setUpdateId","_useState11","_useState12","isLoading","setIsLoading","_useState13","_useState14","errorMessage","setErrorMessage","_useTranslation","useTranslation","t","i18n","useEffect","get","data","catch","error","console","log","checkstring","maxCode","renderLineManList","ListLineMan","Container","display","Row","Form","Col","xs","md","Group","name","border","Label","Control","type","placeholder","required","value","onChange","e","target","Button","variant","put","prevState","post","linemancode","PlaceHolder"],"sourceRoot":""}