{"version":3,"file":"static/js/999.dc0e41d8.chunk.js","mappings":"kVA2NA,EApNwB,SAAHA,GAAyE,IAAnEC,EAAWD,EAAXC,YAAaC,EAAQF,EAARE,SAAUC,EAAMH,EAANG,OAAQC,EAAcJ,EAAdI,eAAgBC,EAAYL,EAAZK,aACxEC,GAAoBC,EAAAA,EAAAA,MAAZC,EAACF,EAADE,EACRC,GADeH,EAAJI,MAC2BC,EAAAA,EAAAA,UAAS,IAAEC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA1CK,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAE5BI,EADiB,GACLF,EACZG,EAAaD,EAFI,GAGjBE,EAAUjB,EAAYkB,MAAMF,EAAYD,GACxCI,EAAQC,KAAKC,KAAKC,OAAOC,KAAKvB,GAAawB,OAJ1B,IAKjBC,GAAUC,EAAAA,EAAAA,GAAIC,MAAMR,EAAQ,GAAGI,QAAQL,MAAM,GAC/CU,EAAW,EACXC,EAAc,EACdC,EAAc,EACdC,EAAgB,EAChBC,EAAe,EACfC,EAAe,EACfC,EAAiB,EACjBC,EAAkB,EAClBC,EAAS,EACTC,EAAM,EACNC,EAAc,EACdC,EAAc,EACdC,EAAkB,EAClBC,EAAoB,EACpBC,EAAuB,EACvBC,EAAyB,EACzBC,EAAoB,EACpBC,EAAsB,EACtBC,EAAa,EAqBjB,OAlBQ7B,EAAQO,OAAS,EAAIxB,EAAY,GAAK,GAC9C4B,EA5BuB,IA4BXf,EAAc,IAkBxBkC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,oBAAmBD,SAAA,EAAEE,EAAAA,EAAAA,IAAmBlD,GAAU,qBAA0BkD,EAAAA,EAAAA,IAAmBjD,GAAQ,2BAC/EK,EAAE,uBACzCwC,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEF,EAAAA,EAAAA,MAACK,EAAAA,EAAK,CAACF,UAAU,sDAAqDD,SAAA,EACpEI,EAAAA,EAAAA,KAAA,SAAAJ,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACmB,GAAhB7C,GAAoBiD,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,UAAgB,KACxD,GAAhBH,GAAoBiD,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAClD1C,EAAE,cACG,KACS,GAAhBH,GAAoBiD,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,OAAOC,MAAM,OAAOP,SAAE1C,EAAE,UAAgB,MACpFwC,EAAAA,EAAAA,MAAA,MAAIU,QAAS,EAAGH,MAAO,CAAEC,SAAU,QAASN,SAAA,EAC1CI,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,iBACrC8C,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,SAAU,QAASN,UAAEE,EAAAA,EAAAA,IAAmBlD,SAExD8C,EAAAA,EAAAA,MAAA,MAAIU,QAAS,EAAGH,MAAO,CAAEC,SAAU,QAASN,SAAA,EAC1CI,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,kBACrC8C,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,SAAU,QAASN,UAAEE,EAAAA,EAAAA,IAAmBjD,SAExDmD,EAAAA,EAAAA,KAAA,MAAII,QAAS,EAAGH,MAAO,CAAEC,SAAU,QAASN,SACzC1C,EAAE,wBAEL8C,EAAAA,EAAAA,KAAA,MAAII,QAAS,EAAGH,MAAO,CAAEC,SAAU,QAASN,SACzC1C,EAAE,cAELwC,EAAAA,EAAAA,MAAA,MAAIU,QAAS,EAAGH,MAAO,CAAEC,SAAU,QAASN,SAAA,EAC1CI,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,iBACrC8C,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,SAAU,QAASN,UAAEE,EAAAA,EAAAA,IAAmBhD,SAGxDkD,EAAAA,EAAAA,KAAA,MAAII,QAAS,EAAGH,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,iBAChD8C,EAAAA,EAAAA,KAAA,MAAII,QAAS,EAAGH,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,mBAGpD8C,EAAAA,EAAAA,KAAA,SAAAJ,UACEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACmB,GAAhB7C,GAAoBiD,EAAAA,EAAAA,KAAA,SAAY,KAChB,GAAhBjD,GAAoBiD,EAAAA,EAAAA,KAAA,SAAY,KAChB,GAAhBjD,GAAoBiD,EAAAA,EAAAA,KAAA,SAAY,MACjCA,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,sBACpC8C,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,wBACpC8C,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,0BACpC8C,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,uBACpC8C,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,yBACpC8C,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,2BACpC8C,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,iBACpC8C,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,cACpC8C,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,WACpC8C,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,WACpC8C,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,sBACpC8C,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,wBACpC8C,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,WACpC8C,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,WACvBF,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAE1C,EAAE,WACpC8C,EAAAA,EAAAA,KAAA,eAGJN,EAAAA,EAAAA,MAAA,SAAAE,SAAA,CAEIhC,GAAWA,EAAQO,OAAS,EAEzBP,EAAQyC,KAAI,SAACC,EAAUC,GAuBtB,OAtBAhC,GAAsB,EACtBC,GAA6BgC,OAAOF,EAAS9B,aAC7CG,GAA8B2B,EAASG,WACvChC,GAA4B6B,EAASI,kBACrC9B,GAA8B0B,EAASK,WACvCjC,GAAgC4B,EAAS5B,cACzCG,GAAkCyB,EAASM,aAC3C9B,GAAoCwB,EAASO,iBAC7C9B,GAAWuB,EAASO,iBAAmBP,EAASK,WAAc,KAAKG,QAAQ,GAC3E9B,GAAYwB,OAAOzB,GACnBE,GAA4BqB,EAASS,cACrC7B,GAA4BoB,EAASU,cACrC7B,GAAoCmB,EAASW,oBAC7C7B,GAAwCkB,EAASY,sBACjD7B,GAA8CiB,EAASjB,qBACvDC,GAAkDgB,EAASa,2BAC3D5B,GAAwCe,EAASf,kBACjDC,GAA4Cc,EAASc,wBACrD3B,EAAaA,EAAaa,EAASG,WAAaH,EAASe,cACff,EAASe,cACf5B,GAGlCC,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAEmB,GAAhB7C,GAAoBiD,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAQN,SAAEU,EAASgB,WAAiB,KAC/D,GAAhBvE,GAAoBiD,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAQN,SAAEU,EAASiB,cAAoB,KAClE,GAAhBxE,GAAoBiD,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAQN,SAAGU,EAASkB,WAAiB,MACjFxB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAGY,OAAOF,EAAS9B,gBACnDwB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAEU,EAASI,qBAC3CV,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAEU,EAAS5B,iBAC3CsB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAEU,EAASG,cAC3CT,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAEU,EAASK,cAC3CX,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAEU,EAASM,gBAC3CZ,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAEU,EAASO,oBAC3Cb,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,UAAIU,EAASO,iBAAmBP,EAASK,WAAc,KAAKG,QAAQ,MACpGd,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAEU,EAASU,iBAC3ChB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAEU,EAASS,iBAC3Cf,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAEU,EAASW,uBAC3CjB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAEU,EAASY,yBAC3ClB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAEU,EAASjB,wBAC3CW,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAEU,EAASa,8BAC3CnB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAEU,EAASf,qBAC3CS,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAASN,SAAEU,EAASc,4BAIjD,IAGAlE,EAAE,cAENwC,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CACmB,GAAhB7C,GAAoBiD,EAAAA,EAAAA,KAAA,SAAY,KAChB,GAAhBjD,GAAoBiD,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAE1C,EAAE,WAAiB,KAC7E,GAAhBH,GAAoBiD,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAQN,SAAG1C,EAAE,WAAiB,MAC1E8C,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAEpB,KACtDwB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAEnB,KACtDuB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAElB,KACtDsB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAEjB,KACtDqB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAEhB,KACtDoB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAEf,KACtDmB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAEd,KACtDkB,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,UAAGZ,EAAMT,GAAUuC,QAAQ,MAC/Ed,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAEV,KACtDc,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAEX,KACtDe,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAET,KACtDa,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAER,KACtDY,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAEP,KACtDW,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAEN,KACtDU,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAEL,KACtDS,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CAAEC,SAAU,QAAUL,UAAU,UAASD,SAAEJ,cAK5DQ,EAAAA,EAAAA,KAAA,OAAAJ,UAEEF,EAAAA,EAAAA,MAAC+B,EAAAA,EAAU,CAAA7B,SAAA,EACTI,EAAAA,EAAAA,KAACyB,EAAAA,EAAWC,KAAI,CAAA9B,UACdI,EAAAA,EAAAA,KAAA,KAAG2B,KAAK,IAAI9B,UAAU,YAAY+B,QA/J9C,WACMpE,IAAgBG,GAClBF,EAAeD,EAAc,EAGjC,EA0JgEoC,SAAE1C,EAAE,gBAGxDkB,EAAQiC,KAAI,SAACwB,EAAGtB,GAAC,OACfP,EAAAA,EAAAA,KAACyB,EAAAA,EAAWK,KAAI,CAAAlC,UACdI,EAAAA,EAAAA,KAAA,KAAG2B,KAAK,IAAI9B,UAAU,YACpB+B,QAAS,WAxJzBnE,EAwJ2CoE,EAAE,EAACjC,SAAEiC,KAClB,KAGtB7B,EAAAA,EAAAA,KAACyB,EAAAA,EAAWM,KAAI,CAAAnC,UACdI,EAAAA,EAAAA,KAAA,KAAG2B,KAAK,IAAI9B,UAAU,YAAY+B,QApK9C,WACMpE,IAAgBE,GAClBD,EAAeD,EAAc,EAGjC,EA+JgEoC,SAAE1C,EAAE,0BAQtE,ECvGA,MA1GA,WACI,IAAAC,GAAkCE,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAA1C6E,EAAS1E,EAAA,GAAE2E,EAAY3E,EAAA,GAC9B4E,GAAwC7E,EAAAA,EAAAA,UAAS,IAAG8E,GAAA5E,EAAAA,EAAAA,GAAA2E,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAwBjF,EAAAA,EAAAA,UAAS,IAAGkF,GAAAhF,EAAAA,EAAAA,GAAA+E,EAAA,GAA9BE,EAAMD,EAAA,GAACE,EAASF,EAAA,GACtBvF,GAAoBC,EAAAA,EAAAA,MAAZC,EAACF,EAADE,EACFwF,GADS1F,EAAJI,MACUuF,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,QACtBC,GAAaF,EAAAA,EAAAA,SAAOG,EAAAA,EAAAA,OACpBC,GAAeJ,EAAAA,EAAAA,UACfK,GAAkBL,EAAAA,EAAAA,SAAOM,EAAAA,EAAAA,OACzBC,GAAaP,EAAAA,EAAAA,QAAO,GA8BpBQ,GACFnD,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAACC,IAAKN,EAAanD,UACnBI,EAAAA,EAAAA,KAACsD,EAAe,CAAC3G,YAAa6F,EAAQ5F,SAAU8F,EAAaa,QAAQC,MACrE3G,OAAQgG,EAAWU,QAAQC,MAAO1G,eAAgBkG,EAAkBO,QAAQC,MAAOzG,aAAcmG,EAAWK,QAAQC,UAG5H,OACIxD,EAAAA,EAAAA,KAACyD,EAAAA,EAAS,CAAA7D,UACNI,EAAAA,EAAAA,KAACoD,EAAAA,EAAG,CAAAxD,UACAF,EAAAA,EAAAA,MAACgE,EAAAA,EAAI,CAAA9D,SAAA,EACDF,EAAAA,EAAAA,MAAC0D,EAAAA,EAAG,CAAAxD,SAAA,EACAI,EAAAA,EAAAA,KAAC2D,EAAAA,EAAG,CAACC,GAAI,EAAG/D,UAAU,mBAAkBD,UACpCF,EAAAA,EAAAA,MAACgE,EAAAA,EAAKG,MAAK,CAAAjE,SAAA,EACPI,EAAAA,EAAAA,KAAC0D,EAAAA,EAAKI,MAAK,CAAAlE,SAAE1C,EAAE,gBACf8C,EAAAA,EAAAA,KAAC0D,EAAAA,EAAKK,QAAO,CAACC,KAAK,OAAOX,IAAKX,EAAeuB,cAAcrB,EAAAA,EAAAA,cAGpE5C,EAAAA,EAAAA,KAAC2D,EAAAA,EAAG,CAACC,GAAI,EAAG/D,UAAU,mBAAkBD,UACpCF,EAAAA,EAAAA,MAACgE,EAAAA,EAAKG,MAAK,CAAAjE,SAAA,EACPI,EAAAA,EAAAA,KAAC0D,EAAAA,EAAKI,MAAK,CAAAlE,SAAE1C,EAAE,cACf8C,EAAAA,EAAAA,KAAC0D,EAAAA,EAAKK,QAAO,CAACC,KAAK,OAAOX,IAAKR,EAAaoB,cAAcnB,EAAAA,EAAAA,cAGlE9C,EAAAA,EAAAA,KAAC2D,EAAAA,EAAG,CAACC,GAAI,EAAG/D,UAAU,mBAAkBD,UACpCF,EAAAA,EAAAA,MAACgE,EAAAA,EAAKG,MAAK,CAAAjE,SAAA,EACPI,EAAAA,EAAAA,KAAC0D,EAAAA,EAAKI,MAAK,CAAAlE,SAAE1C,EAAE,qBACf8C,EAAAA,EAAAA,KAAC0D,EAAAA,EAAKK,QAAO,CAACC,KAAK,OAAOX,IAAKL,EAAoBiB,cAAchB,EAAAA,EAAAA,cAGzEjD,EAAAA,EAAAA,KAAC2D,EAAAA,EAAG,CAACC,GAAI,EAAG/D,UAAU,mBAAkBD,UACpCF,EAAAA,EAAAA,MAACgE,EAAAA,EAAKG,MAAK,CAAChE,UAAU,OAAOqE,KAAK,WAAWC,OAAO,UAASvE,SAAA,EACzDI,EAAAA,EAAAA,KAAC0D,EAAAA,EAAKI,MAAK,CAAAlE,SAAE1C,EAAE,aACfwC,EAAAA,EAAAA,MAACgE,EAAAA,EAAKU,OAAM,CAAC,aAAW,yBACpBf,IAAKH,EAAYe,aAAc,EAAErE,SAAA,EACjCI,EAAAA,EAAAA,KAAA,UAAQwD,MAAO,EAAE5D,SAAG1C,EAAE,eACtB8C,EAAAA,EAAAA,KAAA,UAAQwD,MAAO,EAAE5D,SAAE1C,EAAE,0BAMrCwC,EAAAA,EAAAA,MAAC0D,EAAAA,EAAG,CAACvD,UAAU,+BAA8BD,SAAA,EACzCF,EAAAA,EAAAA,MAAA,OAAKG,UAAU,iBAAgBD,SAAA,EAC3BI,EAAAA,EAAAA,KAACqE,EAAAA,EAAM,CAACC,QAAQ,UAAUC,KAAK,KAAKP,KAAK,SAASnE,UAAU,cAAc+B,QAxE9E,WAEhB,IAAI4C,EAAe,GAQnB,OAPAvC,GAAa,GAETuC,EADyB,GAA1BtB,EAAWK,QAAQC,MACH,kBAGA,cAIfiB,EAAAA,EAAMC,IAAI,GAADC,OAAIC,EAAAA,EAAO,UAAAD,OAASH,GAAkB,CAAEK,OAAQ,CAACC,SAAUpC,EAAaa,QAAQC,MACrFuB,OAAQlC,EAAWU,QAAQC,MAAMwB,WAAWhC,EAAkBO,QAAQC,MACtEyB,WAAW/B,EAAWK,QAAQC,SAAU0B,MAAK,SAACC,GAC9C1C,EAAU0C,EAAIC,MACdC,QAAQC,IAAIH,EAAIC,MAChBnD,GAAa,EACjB,IACKsD,OAAM,SAAAC,GACHH,QAAQC,IAAI,SAAUE,GACtBnD,EAAgBnF,EAAE,4BAClB+E,GAAa,EACjB,GAEZ,EA+CuHrC,SAC1F1C,EAAE,wBACG,QAEd8C,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBD,UAC3BI,EAAAA,EAAAA,KAACyF,IAAY,CAACC,QAAS,kBACnB1F,EAAAA,EAAAA,KAACqE,EAAAA,EAAM,CAACC,QAAQ,UAAUC,KAAK,KAAKP,KAAK,SAASnE,UAAU,cAAaD,SACpE1C,EAAE,gBACE,EAGTyI,QAAS,kBAAM5C,EAAaQ,OAAO,SAG9CvB,GAAYhC,EAAAA,EAAAA,KAAC4F,EAAAA,EAAW,IAAMzC,EAC9Bf,IAAgBpC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,QAAOD,SAAEwC,UAQ7D,C","sources":["Reports/ListTotalLedger.js","Reports/totalLedger.js"],"sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table, Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { dateFormatddmmyyyy } from \"../FunctionsGlobal/StartDateFn\"\r\n\r\nvar first = [];\r\nconst ListTotalLedger = ({ totalledger, datefrom, dateto, notrunningdate, reportypeval }) => {\r\n  const { t, i18n } = useTranslation();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const recordsPerPage = 15;\r\n  const lastIndex = currentPage * recordsPerPage;\r\n  const firstIndex = lastIndex - recordsPerPage;\r\n  const records = totalledger.slice(firstIndex, lastIndex);\r\n  const nPage = Math.ceil(Object.keys(totalledger).length / recordsPerPage);\r\n  const numbers = [...Array(nPage + 1).keys()].slice(1);\r\n  var serialno = 0;\r\n  var countbefore = 0;\r\n  var totalbefore = 0;\r\n  var pendingbefore = 0;\r\n  var countcurrent = 0;\r\n  var totalcurrent = 0;\r\n  var pendingcurrent = 0;\r\n  var collectiontotal = 0;\r\n  var calavg = 0;\r\n  var avg = 0;\r\n  var pendingless = 0;\r\n  var pendingmore = 0;\r\n  var notrunningcount = 0;\r\n  var notrunningpending = 0;\r\n  var notrunningcountdates = 0;\r\n  var notrunningpendingdates = 0;\r\n  var runningcountdates = 0;\r\n  var runningpendingdates = 0;\r\n  var totalcount = 0;\r\n  var countfinishedtotal = 0;\r\n  var totalcounttotal = 0;\r\n  first = records.length > 0 ? totalledger[0] : \"\";\r\n  serialno = (currentPage - 1) * recordsPerPage;\r\n\r\n  function prevPage() {\r\n    if (currentPage !== firstIndex) {\r\n      setCurrentPage(currentPage - 1)\r\n    }\r\n\r\n  }\r\n  function nextPage() {\r\n    if (currentPage !== lastIndex) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n\r\n  }\r\n  function changeCPage(id) {\r\n    setCurrentPage(id)\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className='col-md-12 fw-bold'>{dateFormatddmmyyyy(datefrom)}&nbsp;&nbsp;&nbsp;-&nbsp;{dateFormatddmmyyyy(dateto)}\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{t('totalledgername')}</div>\r\n      <div >\r\n        <Table className='table text-center table-bordered border-dark w-auto' >\r\n          <thead>\r\n            <tr>\r\n              {reportypeval == 0 ? <th style={{ fontSize: \"12px\" }}>{t('line')}</th> : null}\r\n              {reportypeval == 0 ? <th style={{ fontSize: \"12px\" }} >\r\n                {t('customer')}\r\n              </th> : null}\r\n              {reportypeval == 1 ? <th style={{ fontSize: \"12px\",width:\"12%\"}}>{t('city')}</th> : null}\r\n              <th colSpan={3} style={{ fontSize: \"12px\" }}>\r\n                <div style={{ fontSize: \"12px\" }}>{t('beforedebt')}</div>\r\n                <div style={{ fontSize: \"12px\" }}>{dateFormatddmmyyyy(datefrom)}</div>\r\n              </th>\r\n              <th colSpan={3} style={{ fontSize: \"12px\" }}>\r\n                <div style={{ fontSize: \"12px\" }}>{t('currentdebt')}</div>\r\n                <div style={{ fontSize: \"12px\" }}>{dateFormatddmmyyyy(dateto)}</div>\r\n              </th>\r\n              <th colSpan={2} style={{ fontSize: \"12px\" }}>\r\n                {t('averagecollection')}\r\n              </th>\r\n              <th colSpan={2} style={{ fontSize: \"12px\" }} >\r\n                {t('pending')}\r\n              </th>\r\n              <th colSpan={2} style={{ fontSize: \"12px\" }}>\r\n                <div style={{ fontSize: \"12px\" }}>{t('notrunning')}</div>\r\n                <div style={{ fontSize: \"12px\" }}>{dateFormatddmmyyyy(notrunningdate)}</div>\r\n\r\n              </th>\r\n              <th colSpan={2} style={{ fontSize: \"12px\" }}>{t('notrunning')}</th>\r\n              <th colSpan={2} style={{ fontSize: \"12px\" }}>{t('running')}</th>\r\n            </tr>\r\n          </thead>\r\n          <thead>\r\n            <tr>\r\n              {reportypeval == 0 ? <th></th> : null}\r\n              {reportypeval == 0 ? <th></th> : null}\r\n              {reportypeval == 1 ? <th></th> : null}\r\n              <th style={{ fontSize: \"12px\" }}>{t('beforeloancount')}</th>\r\n              <th style={{ fontSize: \"12px\" }}>{t('beforetotalamount')}</th>\r\n              <th style={{ fontSize: \"12px\" }}>{t('beforependingamount')}</th>\r\n              <th style={{ fontSize: \"12px\" }}>{t('currentloancount')}</th>\r\n              <th style={{ fontSize: \"12px\" }}>{t('currenttotalamount')}</th>\r\n              <th style={{ fontSize: \"12px\" }}>{t('currentpendingamount')}</th>\r\n              <th style={{ fontSize: \"12px\" }}>{t('collection')}</th>\r\n              <th style={{ fontSize: \"12px\" }}>{t('average')}</th>\r\n              <th style={{ fontSize: \"12px\" }}>{t('more')}</th>\r\n              <th style={{ fontSize: \"12px\" }}>{t('less')}</th>\r\n              <th style={{ fontSize: \"12px\" }}>{t('notrunningcount')}</th>\r\n              <th style={{ fontSize: \"12px\" }}>{t('notrunningpending')}</th>\r\n              <th style={{ fontSize: \"12px\" }}>{t('more')}</th>\r\n              <th style={{ fontSize: \"12px\" }}></th>\r\n              <th style={{ fontSize: \"12px\" }}>{t('less')}</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              records && records.length > 0\r\n                ?\r\n                (records.map((customer, i) => {\r\n                  serialno = serialno + 1;\r\n                  countbefore = countbefore + (Number(customer.countbefore));\r\n                  countcurrent = countcurrent + customer.countafter;\r\n                  totalbefore = totalbefore + customer.totalamountbefore;\r\n                  totalcurrent = totalcurrent + customer.totalafter;\r\n                  pendingbefore = pendingbefore + customer.pendingbefore;\r\n                  pendingcurrent = pendingcurrent + customer.pendingafter;\r\n                  collectiontotal = collectiontotal + customer.collectedbetween;\r\n                  calavg = ((customer.collectedbetween / customer.totalafter) * 100).toFixed(2);\r\n                  avg = avg + Number(calavg);\r\n                  pendingless = pendingless + customer.collectedless;\r\n                  pendingmore = pendingmore + customer.collectedmore;\r\n                  notrunningcount = notrunningcount + customer.notrunningloancount;\r\n                  notrunningpending = notrunningpending + customer.notrunningloanpending;\r\n                  notrunningcountdates = notrunningcountdates + customer.notrunningcountdates;\r\n                  notrunningpendingdates = notrunningpendingdates + customer.notrunningloanpendingdates;\r\n                  runningcountdates = runningcountdates + customer.runningcountdates;\r\n                  runningpendingdates = runningpendingdates + customer.runningloanpendingdates;\r\n                  totalcount = totalcount + customer.countafter + customer.countfinished;\r\n                  countfinishedtotal = countfinishedtotal + customer.countfinished;\r\n                  totalcounttotal = totalcounttotal + totalcount;\r\n                  //console.log(customer.collectedmore)\r\n                  return (\r\n                    <tr >\r\n\r\n                      {reportypeval == 0 ? <td style={{ fontSize: \"12px\"}}>{customer.linename}</td> : null}\r\n                      {reportypeval == 0 ? <td style={{ fontSize: \"12px\"}}>{customer.linemanname}</td> : null}\r\n                      {reportypeval == 1 ? <td style={{ fontSize: \"12px\"}} >{customer.cityname}</td> : null}\r\n                      <td style={{ fontSize: \"12px\" }}>{(Number(customer.countbefore))}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{customer.totalamountbefore}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{customer.pendingbefore}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{customer.countafter}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{customer.totalafter}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{customer.pendingafter}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{customer.collectedbetween}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{((customer.collectedbetween / customer.totalafter) * 100).toFixed(2)}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{customer.collectedmore}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{customer.collectedless}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{customer.notrunningloancount}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{customer.notrunningloanpending}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{customer.notrunningcountdates}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{customer.notrunningloanpendingdates}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{customer.runningcountdates}</td>\r\n                      <td style={{ fontSize: \"12px\" }}>{customer.runningloanpendingdates}</td>\r\n                    </tr>\r\n\r\n                  )\r\n                })\r\n                )\r\n                :\r\n                t('tabledata')\r\n            }\r\n            <tr>\r\n              {reportypeval == 0 ? <td></td> : null}\r\n              {reportypeval == 0 ? <td style={{ fontSize: \"12px\" }} className='fw-bold'>{t('total')}</td> : null}\r\n              {reportypeval == 1 ? <td style={{ fontSize: \"12px\"}} >{t('total')}</td> : null}\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{countbefore}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{totalbefore}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{pendingbefore}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{countcurrent}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{totalcurrent}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{pendingcurrent}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{collectiontotal}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{(avg / serialno).toFixed(2)}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{pendingmore}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{pendingless}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{notrunningcount}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{notrunningpending}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{notrunningcountdates}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{notrunningpendingdates}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{runningcountdates}</td>\r\n              <td style={{ fontSize: \"12px\" }} className='fw-bold'>{runningpendingdates}</td>\r\n            </tr>\r\n          </tbody>\r\n\r\n        </Table>\r\n        <nav>\r\n\r\n          <Pagination>\r\n            <Pagination.Prev >\r\n              <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n            </Pagination.Prev>\r\n            {\r\n              numbers.map((n, i) => (\r\n                <Pagination.Item>\r\n                  <a href=\"#\" className='page-link'\r\n                    onClick={() => changeCPage(n)}>{n}</a>\r\n                </Pagination.Item>\r\n              ))\r\n            }\r\n            <Pagination.Next>\r\n              <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n            </Pagination.Next>\r\n          </Pagination>\r\n        </nav>\r\n\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default ListTotalLedger;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap';\r\nimport { baseURL } from \"../utils/constant\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PlaceHolder from \"../components/spinner/placeholder\";\r\nimport { startOfWeek,endOfWeek,notRunningOfWeek } from '../FunctionsGlobal/StartDateFn';\r\nimport ReactToPrint from 'react-to-print';\r\nimport ListTotalLedger from \"./ListTotalLedger\";\r\nfunction TotalLedger(){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const[ledger,setLedger]=useState([]);\r\n    const { t, i18n } = useTranslation();\r\n    const startDateRef = useRef(startOfWeek());\r\n    const endDateRef = useRef(endOfWeek());\r\n    const componentRef = useRef();\r\n    const notrunningDateRef=useRef(notRunningOfWeek());\r\n    const reportType = useRef(0);\r\n    const processList = () => {\r\n        //alert(reportType.current.value);\r\n        var reporttypename=\"\"\r\n        setIsLoading(true);\r\n        if(reportType.current.value==1){\r\n            reporttypename=\"totalledgercity\"\r\n        }\r\n        else{\r\n            reporttypename=\"totalledger\"\r\n        }\r\n        return (\r\n            \r\n            axios.get(`${baseURL}/city/${reporttypename}`, { params: {fromdate: startDateRef.current.value, \r\n                todate: endDateRef.current.value,notrundate:notrunningDateRef.current.value,\r\n                reporttype:reportType.current.value} }).then((res) => {\r\n                setLedger(res.data)\r\n                console.log(res.data)\r\n                setIsLoading(false);\r\n            })\r\n                .catch(error => {\r\n                    console.log(\"error=\", error);\r\n                    setErrorMessage(t('erroressagelinechecking'));\r\n                    setIsLoading(false);\r\n                })\r\n        )\r\n    }\r\n    const handlePrint = () => {\r\n        window.print()\r\n    }\r\n    const renderTotalLedgerList=(\r\n        <Row ref={componentRef}>\r\n            <ListTotalLedger totalledger={ledger} datefrom={startDateRef.current.value} \r\n            dateto={endDateRef.current.value} notrunningdate={notrunningDateRef.current.value} reportypeval={reportType.current.value} />\r\n        </Row>\r\n    )\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Form>\r\n                    <Row >\r\n                        <Col md={3} className=\"rounder bg-white\">\r\n                            <Form.Group>\r\n                                <Form.Label>{t('startdate')}</Form.Label>\r\n                                <Form.Control type=\"date\" ref={startDateRef}  defaultValue={startOfWeek()} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={3} className=\"rounder bg-white\">\r\n                            <Form.Group>\r\n                                <Form.Label>{t('enddate')}</Form.Label>\r\n                                <Form.Control type=\"date\" ref={endDateRef}  defaultValue={endOfWeek()} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={3} className=\"rounder bg-white\">\r\n                            <Form.Group>\r\n                                <Form.Label>{t('notrunningdate')}</Form.Label>\r\n                                <Form.Control type=\"date\" ref={notrunningDateRef}  defaultValue={notRunningOfWeek()} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={3} className=\"rounder bg-white\">\r\n                            <Form.Group className=\"mb-3\" name=\"cityname\" border=\"primary\" >\r\n                                <Form.Label>{t('report')}</Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                    ref={reportType} defaultValue={0} >\r\n                                    <option value={0} >{t('linewise')}</option>\r\n                                    <option value={1}>{t('citywise')}</option>\r\n                                    \r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"rounded bg-white text-center\">\r\n                        <div className=\"col-md-6 mb-4 \" >\r\n                            <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"text-center\" onClick={processList} >\r\n                                {t('processbuttonlabel')}\r\n                            </Button>{' '}\r\n                        </div>\r\n                        <div className=\"col-md-6 mb-4 \">\r\n                            <ReactToPrint trigger={() => (\r\n                                <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"text-center\" >\r\n                                    {t('printbutton')}\r\n                                </Button>\r\n\r\n                            )}\r\n                                content={() => componentRef.current} />\r\n                        </div>\r\n                    </Row>\r\n                    {isLoading ? <PlaceHolder /> : renderTotalLedgerList}\r\n                    {errorMessage && <div className=\"error\">{errorMessage}</div>}\r\n\r\n\r\n\r\n                </Form>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default TotalLedger;"],"names":["_ref","totalledger","datefrom","dateto","notrunningdate","reportypeval","_useTranslation","useTranslation","t","_useState","i18n","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","lastIndex","firstIndex","records","slice","nPage","Math","ceil","Object","keys","length","numbers","_toConsumableArray","Array","serialno","countbefore","totalbefore","pendingbefore","countcurrent","totalcurrent","pendingcurrent","collectiontotal","calavg","avg","pendingless","pendingmore","notrunningcount","notrunningpending","notrunningcountdates","notrunningpendingdates","runningcountdates","runningpendingdates","totalcount","_jsxs","Fragment","children","className","dateFormatddmmyyyy","Table","_jsx","style","fontSize","width","colSpan","map","customer","i","Number","countafter","totalamountbefore","totalafter","pendingafter","collectedbetween","toFixed","collectedless","collectedmore","notrunningloancount","notrunningloanpending","notrunningloanpendingdates","runningloanpendingdates","countfinished","linename","linemanname","cityname","Pagination","Prev","href","onClick","n","Item","Next","isLoading","setIsLoading","_useState3","_useState4","errorMessage","setErrorMessage","_useState5","_useState6","ledger","setLedger","startDateRef","useRef","startOfWeek","endDateRef","endOfWeek","componentRef","notrunningDateRef","notRunningOfWeek","reportType","renderTotalLedgerList","Row","ref","ListTotalLedger","current","value","Container","Form","Col","md","Group","Label","Control","type","defaultValue","name","border","Select","Button","variant","size","reporttypename","axios","get","concat","baseURL","params","fromdate","todate","notrundate","reporttype","then","res","data","console","log","catch","error","ReactToPrint","trigger","content","PlaceHolder"],"sourceRoot":""}