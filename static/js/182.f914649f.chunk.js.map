{"version":3,"file":"static/js/182.f914649f.chunk.js","mappings":"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","sources":["Receipt1.js"],"sourcesContent":["import React, { useEffect, useState, useRef,Fragment } from \"react\";\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"./utils/constant\";\r\nimport {Table,Pagination } from \"react-bootstrap\";\r\nfunction AddReceipt1(){\r\n  const [rowsData, setRowsData] = useState([]);\r\n\r\n  const addTableRows = ()=>{\r\n\r\n      const rowsInput={\r\n          fullName:'',\r\n          customername:'',\r\n          emailAddress:'',\r\n          salary:''  \r\n      } \r\n      setRowsData([...rowsData, rowsInput])\r\n    \r\n  }\r\n const deleteTableRows = (index)=>{\r\n      const rows = [...rowsData];\r\n      rows.splice(index, 1);\r\n      setRowsData(rows);\r\n }\r\n\r\n const handleChange = (index, evnt)=>{\r\n  \r\n  const { name, value } = evnt.target;\r\n  const rowsInput = [...rowsData];\r\n  rowsInput[index][name] = value;\r\n  setRowsData(rowsInput);\r\n}\r\nfunction RestoreLoan(e,index){\r\n  //alert(index);\r\n  const Editcheck=rowsData.map((item,i)=>\r\n    {\r\n      if(i===index)\r\n        return {...item,[\"customername\"]:\"vel\"};\r\n      return item\r\n        \r\n    });\r\n    setRowsData(Editcheck);\r\n    \r\n\r\n}\r\n\r\n  return(\r\n    <Fragment>\r\n              <Table className=\"table table-striped table-primary table-hover text-center  table-bordered border-dark\" size=\"sm\">\r\n                  <thead>\r\n                    <tr>\r\n                        <th></th>\r\n                        <th>Email Address</th>\r\n                        <th>Salary</th>\r\n                        <th><button className=\"btn btn-outline-success\" onClick={addTableRows} >+</button></th>\r\n                    </tr>\r\n                  </thead>\r\n                 <tbody>\r\n                 <TableRows rowsData={rowsData} deleteTableRows={deleteTableRows} handleChange={handleChange} RestoreLoan={RestoreLoan} />\r\n                 </tbody> \r\n              </Table>\r\n            </Fragment>\r\n              \r\n  )\r\n}\r\n\r\nfunction TableRows({rowsData, deleteTableRows, handleChange,RestoreLoan}) {\r\n  return(\r\n      \r\n      rowsData.map((data, index)=>{\r\n          const {fullName,customername, emailAddress, salary}= data;\r\n          return(\r\n              <tr key={index}>\r\n              <td>\r\n             <input type=\"text\" value={fullName} onChange={(evnt)=>(handleChange(index, evnt))} \r\n             name=\"fullName\" className=\"form-control\" onBlur={(e)=>RestoreLoan(e,index)}/>\r\n              </td>\r\n              <td><input type=\"text\" value={customername} name=\"customername\" /></td>\r\n              <td><input type=\"text\" value={emailAddress}  onChange={(evnt)=>(handleChange(index, evnt))} name=\"emailAddress\" className=\"form-control\"/> </td>\r\n              <td><input type=\"text\" value={salary}  onChange={(evnt)=>(handleChange(index, evnt))} name=\"salary\" className=\"form-control\" /> </td>\r\n              <td><button className=\"btn btn-outline-danger\" onClick={()=>(deleteTableRows(index))}>x</button></td>\r\n          </tr>\r\n          )\r\n      })\r\n \r\n  )\r\n  \r\n}\r\n\r\nexport default AddReceipt1;"],"names":["TableRows","_ref","rowsData","deleteTableRows","handleChange","RestoreLoan","map","data","index","fullName","customername","emailAddress","salary","_jsxs","children","_jsx","type","value","onChange","evnt","name","className","onBlur","e","onClick","_useState","useState","_useState2","_slicedToArray","setRowsData","Fragment","Table","size","concat","_toConsumableArray","rows","splice","_evnt$target","target","rowsInput","Editcheck","item","i","_objectSpread","_defineProperty"],"sourceRoot":""}