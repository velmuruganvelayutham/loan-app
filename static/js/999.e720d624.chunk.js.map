{"version":3,"file":"static/js/999.e720d624.chunk.js","mappings":"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","sources":["Reports/ListTotalLedger.js","Reports/totalLedger.js"],"sourcesContent":["import React, { Fragment,useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Table,Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {dateFormatddmmyyyy} from \"../FunctionsGlobal/StartDateFn\"\r\n\r\nvar first = [];\r\nconst ListTotalLedger=({totalledger,datefrom,dateto,notrunningdate})=>{\r\n  const { t, i18n } = useTranslation();\r\nconst[currentPage,setCurrentPage]=useState(1);\r\nconst recordsPerPage=20;\r\nconst lastIndex=currentPage*recordsPerPage;\r\nconst firstIndex=lastIndex-recordsPerPage;\r\nconst records=totalledger.slice(firstIndex,lastIndex);\r\nconst nPage=Math.ceil(Object.keys(totalledger).length/recordsPerPage);\r\nconst numbers=[...Array(nPage+1).keys()].slice(1);\r\nvar serialno=0;\r\nvar countbefore=0;\r\nvar totalbefore=0;\r\nvar pendingbefore=0;\r\nvar countcurrent=0;\r\nvar totalcurrent=0;\r\nvar pendingcurrent=0;\r\nvar collectiontotal=0;\r\nvar calavg=0;\r\nvar avg=0;\r\nvar pendingless=0;\r\nvar pendingmore=0;\r\nvar notrunningcount=0;\r\nvar notrunningpending=0;\r\nvar notrunningcountdates=0;\r\nvar notrunningpendingdates=0;\r\nvar runningcountdates=0;\r\nvar runningpendingdates=0;\r\nfirst = records.length > 0 ? totalledger[0] : \"\";\r\nserialno=(currentPage-1) * recordsPerPage;\r\n  \r\n  function prevPage(){\r\n    if(currentPage!==firstIndex)\r\n    {\r\n      setCurrentPage(currentPage-1)\r\n    }\r\n    \r\n  }\r\n  function nextPage(){\r\n    if(currentPage!==lastIndex){\r\n      setCurrentPage(currentPage+1);\r\n    }\r\n\r\n  }\r\n  function changeCPage(id){\r\n    setCurrentPage(id)\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className='col-md-12 fw-bold'>{dateFormatddmmyyyy(datefrom)}&nbsp;&nbsp;&nbsp;-&nbsp;{dateFormatddmmyyyy(dateto)}\r\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{t('totalledgername')}</div>\r\n      <div >\r\n        <Table  className='table text-center fs-6 table-bordered border-dark w-auto' >\r\n          <thead>\r\n            <tr>\r\n            <th  style={{fontSize:\"12px\"}}>{t('line')}</th>\r\n            <th style={{fontSize:\"12px\"}}  >\r\n            {t('customer')}\r\n            </th>\r\n\r\n            <th  colSpan={3} style={{fontSize:\"12px\"}}>\r\n              <div style={{fontSize:\"12px\"}}>{t('beforedebt')}</div>\r\n              <div style={{fontSize:\"12px\"}}>{dateFormatddmmyyyy(datefrom)}</div>\r\n            </th>\r\n            <th  colSpan={3} style={{fontSize:\"12px\"}}>\r\n              <div style={{fontSize:\"12px\"}}>{t('currentdebt')}</div>\r\n              <div style={{fontSize:\"12px\"}}>{dateFormatddmmyyyy(dateto)}</div>\r\n            </th>\r\n            <th  colSpan={2} style={{fontSize:\"12px\"}}>\r\n                {t('averagecollection')}\r\n            </th>\r\n            <th  colSpan={2} style={{fontSize:\"12px\"}} >\r\n                {t('pending')}\r\n            </th>\r\n            <th  colSpan={2} style={{fontSize:\"12px\"}}>\r\n              <div style={{fontSize:\"12px\"}}>{t('notrunning')}</div>\r\n              <div style={{fontSize:\"12px\"}}>{dateFormatddmmyyyy(notrunningdate)}</div>\r\n                \r\n            </th>\r\n            <th  colSpan={2} style={{fontSize:\"12px\"}}>{t('notrunning')}</th>\r\n            <th  colSpan={2} style={{fontSize:\"12px\"}}>{t('running')}</th>\r\n            </tr>\r\n          </thead>\r\n          <thead>\r\n            <tr>\r\n                <th></th>\r\n                <th></th>\r\n                <th style={{fontSize:\"12px\"}}>{t('beforeloancount')}</th>\r\n                <th style={{fontSize:\"12px\"}}>{t('beforetotalamount')}</th>\r\n                <th style={{fontSize:\"12px\"}}>{t('beforependingamount')}</th>\r\n                <th style={{fontSize:\"12px\"}}>{t('currentloancount')}</th>\r\n                <th style={{fontSize:\"12px\"}}>{t('currenttotalamount')}</th>\r\n                <th style={{fontSize:\"12px\"}}>{t('currentpendingamount')}</th>\r\n                <th style={{fontSize:\"12px\"}}>{t('collection')}</th>\r\n                <th style={{fontSize:\"12px\"}}>{t('average')}</th>\r\n                <th style={{fontSize:\"12px\"}}>{t('more')}</th>\r\n                <th style={{fontSize:\"12px\"}}>{t('less')}</th>\r\n                <th style={{fontSize:\"12px\"}}>{t('notrunningcount')}</th>\r\n                <th style={{fontSize:\"12px\"}}>{t('notrunningpending')}</th>\r\n                <th style={{fontSize:\"12px\"}}>{t('more')}</th>\r\n                <th style={{fontSize:\"12px\"}}></th>\r\n                <th style={{fontSize:\"12px\"}}>{t('less')}</th>\r\n                <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              records && records.length>0\r\n              ?\r\n              (records.map((customer,i)=>{\r\n                serialno=serialno+1;\r\n                countbefore=countbefore+customer.countbefore;\r\n                countcurrent=countcurrent+customer.countafter;\r\n                totalbefore=totalbefore+customer.totalamountbefore;\r\n                totalcurrent=totalcurrent+customer.totalafter;\r\n                pendingbefore=pendingbefore+customer.pendingbefore;\r\n                pendingcurrent=pendingcurrent+customer.pendingafter;\r\n                collectiontotal=collectiontotal+customer.collectedbetween;\r\n                calavg=((customer.collectedbetween/customer.totalafter)*100).toFixed(2);\r\n                avg=avg+Number(calavg);\r\n                pendingless=pendingless+customer.collectedless;\r\n                pendingmore=pendingmore+customer.collectedmore;\r\n                notrunningcount=notrunningcount+customer.notrunningloancount;\r\n                notrunningpending=notrunningpending+customer.notrunningloanpending;\r\n                notrunningcountdates=notrunningcountdates+customer.notrunningcountdates;\r\n                notrunningpendingdates=notrunningpendingdates+customer.notrunningloanpendingdates;\r\n                runningcountdates=runningcountdates+customer.runningcountdates;\r\n                runningpendingdates=runningpendingdates+customer.runningloanpendingdates;\r\n                return(\r\n                  <tr >\r\n                    <td style={{fontSize:\"12px\"}}>{customer.linename}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.linemanname}</td>\r\n                    \r\n                    <td style={{fontSize:\"12px\"}}>{customer.countbefore}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.totalamountbefore}</td> \r\n                    <td style={{fontSize:\"12px\"}}>{customer.pendingbefore}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.countafter}</td>\r\n\r\n                    <td style={{fontSize:\"12px\"}}>{customer.totalafter}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.pendingafter}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.collectedbetween}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{((customer.collectedbetween/customer.totalafter)*100).toFixed(2)}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.collectedmore}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.collectedless}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.notrunningloancount}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.notrunningloanpending}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.notrunningcountdates}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.notrunningloanpendingdates}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.runningcountdates}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.runningloanpendingdates}</td>\r\n                  </tr>\r\n                  \r\n                )\r\n              })\r\n              )\r\n              :\r\n              t('tabledata')\r\n            }\r\n            <tr>\r\n            <td></td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{t('total')}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{countbefore}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{totalbefore}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{pendingbefore}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{countcurrent}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{totalcurrent}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{pendingcurrent}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{collectiontotal}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{(avg/serialno).toFixed(2)}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{pendingmore}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{pendingless}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{notrunningcount}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{notrunningpending}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{notrunningcountdates}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{notrunningpendingdates}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{runningcountdates}</td>\r\n            <td style={{fontSize:\"12px\"}} className='fw-bold'>{runningpendingdates}</td>\r\n          </tr>\r\n          </tbody>\r\n          \r\n        </Table>\r\n        <nav>\r\n        \r\n          <Pagination>\r\n            <Pagination.Prev >\r\n            <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n            </Pagination.Prev>\r\n            {\r\n            numbers.map((n,i)=>(\r\n              <Pagination.Item>\r\n                <a href=\"#\" className='page-link'\r\n            onClick={()=>changeCPage(n)}>{n}</a>\r\n              </Pagination.Item>\r\n            ))\r\n          }\r\n            <Pagination.Next>\r\n            <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n            </Pagination.Next>\r\n          </Pagination>\r\n        </nav>\r\n\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default ListTotalLedger;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap';\r\nimport { baseURL } from \"../utils/constant\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PlaceHolder from \"../components/spinner/placeholder\";\r\nimport { startOfWeek } from '../FunctionsGlobal/StartDateFn';\r\nimport ReactToPrint from 'react-to-print';\r\nimport ListTotalLedger from \"./ListTotalLedger\";\r\nfunction TotalLedger(){\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const[ledger,setLedger]=useState([]);\r\n    const { t, i18n } = useTranslation();\r\n    const startDateRef = useRef(startOfWeek());\r\n    const endDateRef = useRef(startOfWeek());\r\n    const componentRef = useRef();\r\n    const notrunningDateRef=useRef(startOfWeek());\r\n    const processList = () => {\r\n        \r\n        setIsLoading(true);\r\n\r\n        return (\r\n            axios.get(`${baseURL}/city/totalledger`, { params: {fromdate: startDateRef.current.value, todate: endDateRef.current.value,notrundate:notrunningDateRef.current.value } }).then((res) => {\r\n                setLedger(res.data)\r\n                console.log(res.data)\r\n                setIsLoading(false);\r\n            })\r\n                .catch(error => {\r\n                    console.log(\"error=\", error);\r\n                    setErrorMessage(t('erroressagelinechecking'));\r\n                    setIsLoading(false);\r\n                })\r\n        )\r\n    }\r\n    const handlePrint = () => {\r\n        window.print()\r\n    }\r\n    const renderTotalLedgerList=(\r\n        <Row ref={componentRef}>\r\n            <ListTotalLedger totalledger={ledger} datefrom={startDateRef.current.value} dateto={endDateRef.current.value} notrunningdate={notrunningDateRef.current.value} />\r\n        </Row>\r\n    )\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Form>\r\n                    <Row >\r\n                        <Col md={3} className=\"rounder bg-white\">\r\n                            <Form.Group>\r\n                                <Form.Label>{t('startdate')}</Form.Label>\r\n                                <Form.Control type=\"date\" ref={startDateRef}  defaultValue={startOfWeek()} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={3} className=\"rounder bg-white\">\r\n                            <Form.Group>\r\n                                <Form.Label>{t('enddate')}</Form.Label>\r\n                                <Form.Control type=\"date\" ref={endDateRef}  defaultValue={startOfWeek()} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={3} className=\"rounder bg-white\">\r\n                            <Form.Group>\r\n                                <Form.Label>{t('notrunningdate')}</Form.Label>\r\n                                <Form.Control type=\"date\" ref={notrunningDateRef}  defaultValue={startOfWeek()} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={3} className=\"rounder bg-white\">\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"rounded bg-white text-center\">\r\n                        <div className=\"col-md-6 mb-4 \" >\r\n                            <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"text-center\" onClick={processList} >\r\n                                {t('processbuttonlabel')}\r\n                            </Button>{' '}\r\n                        </div>\r\n                        <div className=\"col-md-6 mb-4 \">\r\n                            <ReactToPrint trigger={() => (\r\n                                <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"text-center\" >\r\n                                    {t('printbutton')}\r\n                                </Button>\r\n\r\n                            )}\r\n                                content={() => componentRef.current} />\r\n                        </div>\r\n                    </Row>\r\n                    {isLoading ? <PlaceHolder /> : renderTotalLedgerList}\r\n                    {errorMessage && <div className=\"error\">{errorMessage}</div>}\r\n\r\n\r\n\r\n                </Form>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default TotalLedger;"],"names":["_ref","totalledger","datefrom","dateto","notrunningdate","_useTranslation","useTranslation","t","_useState","i18n","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","lastIndex","firstIndex","records","slice","nPage","Math","ceil","Object","keys","length","numbers","_toConsumableArray","Array","serialno","countbefore","totalbefore","pendingbefore","countcurrent","totalcurrent","pendingcurrent","collectiontotal","calavg","avg","pendingless","pendingmore","notrunningcount","notrunningpending","notrunningcountdates","notrunningpendingdates","runningcountdates","runningpendingdates","_jsxs","Fragment","children","className","dateFormatddmmyyyy","Table","_jsx","style","fontSize","colSpan","map","customer","i","countafter","totalamountbefore","totalafter","pendingafter","collectedbetween","toFixed","Number","collectedless","collectedmore","notrunningloancount","notrunningloanpending","notrunningloanpendingdates","runningloanpendingdates","linename","linemanname","Pagination","Prev","href","onClick","n","Item","Next","isLoading","setIsLoading","_useState3","_useState4","errorMessage","setErrorMessage","_useState5","_useState6","ledger","setLedger","startDateRef","useRef","startOfWeek","endDateRef","componentRef","notrunningDateRef","renderTotalLedgerList","Row","ref","ListTotalLedger","current","value","Container","Form","Col","md","Group","Label","Control","type","defaultValue","Button","variant","size","axios","get","concat","baseURL","params","fromdate","todate","notrundate","then","res","data","console","log","catch","error","ReactToPrint","trigger","content","PlaceHolder"],"sourceRoot":""}