{"version":3,"file":"static/js/336.834c36a1.chunk.js","mappings":"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","sources":["components/ListCity.js","AddCityName.js","../node_modules/react-bootstrap/esm/usePlaceholder.js","../node_modules/react-bootstrap/esm/PlaceholderButton.js","../node_modules/react-bootstrap/esm/Placeholder.js","components/spinner/placeholder.js","utils/constant.js"],"sourcesContent":["import React,{Fragment,useState} from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Table,Pagination } from \"react-bootstrap\";\r\nimport {BiEditAlt} from \"react-icons/bi\"\r\nimport {BsTrash} from \"react-icons/bs\"\r\nimport axios from 'axios'\r\nimport {baseURL} from \"../utils/constant\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst ListCity=({citynames,setUpdateUI,updateMode})=>{\r\n  const { t, i18n } = useTranslation();\r\nconst[currentPage,setCurrentPage]=useState(1);\r\nconst recordsPerPage=5;\r\nconst lastIndex=currentPage*recordsPerPage;\r\nconst firstIndex=lastIndex-recordsPerPage;\r\nconst records=citynames.slice(firstIndex,lastIndex);\r\nconst nPage=Math.ceil(Object.keys(citynames).length/recordsPerPage);\r\nconst numbers=[...Array(nPage+1).keys()].slice(1);\r\nvar serialno=0;\r\n\r\nserialno=(currentPage-1) * recordsPerPage;\r\nconst removeCity=(id)=>{\r\n    axios.delete(`${baseURL}/delete/${id}`).then((res)=>{\r\n        setUpdateUI((preveState)=>!preveState)\r\n      })\r\n}\r\nfunction prevPage(){\r\n    if(currentPage!==firstIndex)\r\n    {\r\n      setCurrentPage(currentPage-1)\r\n    }\r\n    \r\n  }\r\n  function nextPage(){\r\n    if(currentPage!==lastIndex){\r\n        serialno=lastIndex;\r\n      setCurrentPage(currentPage+1);\r\n    }\r\n\r\n  }\r\n  function changeCPage(id){\r\n    setCurrentPage(id)\r\n  }\r\n  return(\r\n    <Fragment>\r\n      <div style={{margin:\"5rem\"}}>\r\n        <Table striped bordered hover size=\"sm\"  >\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n              {t('citytableno')}\r\n              </th>\r\n              <th>\r\n              {t('citytablecityname')}\r\n              </th>\r\n              <th>\r\n                {t('citytablecityline')}\r\n              </th>\r\n              <th>\r\n                {t('citytableaction')}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              records && records.length>0\r\n              ?\r\n              (records.map((cityname,i)=>{\r\n                serialno=serialno+1;\r\n                return(\r\n                  <tr>\r\n                    <td>{serialno}</td>\r\n                    <td>{cityname.cityname}</td>\r\n                    <td>Line{cityname.citylineno}</td>\r\n                    <td>\r\n                    <BiEditAlt  className='icons' onClick={()=>updateMode(cityname._id,cityname.cityname,cityname.citylineno)} />\r\n                    <BsTrash className='icons' onClick={()=>removeCity(cityname._id)} />\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                )\r\n              })\r\n              )\r\n              :\r\n              \"தரவு இல்லை\"\r\n            }\r\n          </tbody>\r\n        </Table>\r\n        <nav>\r\n        \r\n          <Pagination>\r\n            <Pagination.Prev >\r\n            <a href=\"#\" className='page-link' onClick={prevPage}>{t('citypageprev')}</a>\r\n            </Pagination.Prev>\r\n            {\r\n            numbers.map((n,i)=>(\r\n              <Pagination.Item>\r\n                <a href=\"#\" className='page-link'\r\n            onClick={()=>changeCPage(n)}>{n}</a>\r\n              </Pagination.Item>\r\n            ))\r\n          }\r\n            <Pagination.Next>\r\n            <a href=\"#\" className='page-link' onClick={nextPage}>{t('citypagenext')}</a>\r\n            </Pagination.Next>\r\n          </Pagination>\r\n        </nav>\r\n\r\n      </div>\r\n    </Fragment>\r\n  )\r\n\r\n}\r\nexport default ListCity;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\nimport { baseURL } from \"./utils/constant\";\r\nimport ListCity from \"./components/ListCity\";\r\nimport PlaceHolder from \"./components/spinner/placeholder\";\r\nimport { useTranslation } from \"react-i18next\";\r\n//var maxCitycode=0;\r\nfunction AddCityName() {\r\n\r\n    const [inputCity, setInputCity] = useState(\"\");\r\n    const [lineNo, setLineNo] = useState(\"\");\r\n    const [cityNames, setCityNames] = useState([]);\r\n    const [lineNames, setLineNames] = useState([]);\r\n    const [updateUI, setUpdateUI] = useState(false);\r\n    const [updateId, setUpdateId] = useState(null);\r\n    const [validated, setValidated] = useState(false);\r\n    const { t, i18n } = useTranslation();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseURL}/citycreate/get`).then((res) => {\r\n            setCityNames(res.data);\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error=\", error);\r\n            setErrorMessage(\"Unable to fetch cityname list\");\r\n            setIsLoading(false);\r\n        })\r\n    }, [updateUI]);\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseURL}/linemancreate/get/lines`).then((res) => {\r\n            setLineNames(res.data);\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error=\", error);\r\n            setErrorMessage(\"Unable to fetch lines list\");\r\n            setIsLoading(false);\r\n        })\r\n    }, [])\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n        }\r\n        setValidated(true);\r\n\r\n        if (inputCity !== \"\" && lineNo !== \"\") {\r\n            addCityName();\r\n        }\r\n\r\n    };\r\n    const addCityName = () => {\r\n        setIsLoading(true);\r\n        axios.post(`${baseURL}/citycreate/save`, { cityname: inputCity, citylineno: lineNo })\r\n            .then((res) => {\r\n                setIsLoading(false);\r\n                setInputCity(\"\");\r\n                setLineNo(\"\");\r\n                setUpdateUI((prevState) => !prevState);\r\n            }).catch(error => {\r\n                console.log(\"error=\", error);\r\n                setErrorMessage(\"Unable to Add City to the list\");\r\n                setIsLoading(false);\r\n            })\r\n        alert(\"City Saved Successfully\");\r\n    }\r\n    const clearFields = () => {\r\n        setInputCity(\"\");\r\n        setLineNo(\"\");\r\n        setUpdateId(null);\r\n    }\r\n\r\n    const updateMode = (id, text, lineno) => {\r\n        //console.log(mobilenum);\r\n        setInputCity(text);\r\n        setLineNo(lineno)\r\n        setUpdateId(id);\r\n\r\n    }\r\n\r\n    const updateCity = () => {\r\n        setIsLoading(true);\r\n        axios.put(`${baseURL}/citycreate/update/${updateId}`, { cityname: inputCity, citylineno: lineNo }).then((res) => {\r\n            setIsLoading(false);\r\n            setUpdateUI((prevState) => !prevState)\r\n            setInputCity(\"\");\r\n            setLineNo(\"\");\r\n            setUpdateId(null);\r\n        }).catch(error => {\r\n            console.log(\"error=\", error);\r\n            setErrorMessage(\"Unable to update city list\");\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n    const renderCityNameList = (\r\n        <ul>\r\n            <ListCity citynames={cityNames} setUpdateUI={setUpdateUI} updateMode={updateMode} />\r\n        </ul>\r\n    );\r\n\r\n    return (\r\n        <Container>\r\n            <h2 className=\"text-center\">{t('cityheadername')}</h2>\r\n            <Row className=\"justify-content-md-center mt-5 \">\r\n                <Col xs={6} lg={6} className=\"rounded bg-white\">\r\n                    <Form validated={validated}>\r\n                        <Form.Group className=\"mb-3\" name=\"cityname\" border=\"primary\" >\r\n                            <Form.Label>{t('citynamelabel')}</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder={t('citynameplaceholder')} required value={inputCity} onChange={(e) => setInputCity(e.target.value)} />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" name=\"linenumber\" border=\"primary\" >\r\n                            <Form.Label>{t('citylinelabel')}</Form.Label>\r\n                            <Form.Select aria-label=\"Default select example\" value={lineNo} onChange={(e) => setLineNo(e.target.value)} required>\r\n                                <option key={lineNo} value={\"\"} >{t('citylineplaceholder')}</option>\r\n\r\n                                {\r\n                                    lineNames.map((lines) => (\r\n                                        <option key={lines.lineno} value={lines.lineno}\r\n                                            selected={lines.lineno} >{lines.linename}</option>\r\n                                    ))}\r\n\r\n                            </Form.Select>\r\n                        </Form.Group>\r\n                        <div className=\"col-md-12 text-center \" >\r\n                            <Button variant=\"primary\" type=\"button\" className=\"text-center\" onClick={updateId ? updateCity : handleSubmit}>\r\n                                {t('citysavebuttonlabel')}\r\n                            </Button>{' '}\r\n                            <Button variant=\"primary\"\r\n                                type=\"button\" className=\"text-center\" onClick={clearFields}>{t('citynewbttonlabel')}</Button>\r\n                        </div>\r\n                        {isLoading ? <PlaceHolder /> : renderCityNameList}\r\n                        {errorMessage && <div className=\"error\">{errorMessage}</div>}\r\n\r\n\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default AddCityName;","\"use client\";\n\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { useCol } from './Col';\nexport default function usePlaceholder({\n  animation,\n  bg,\n  bsPrefix,\n  size,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'placeholder');\n  const [{\n    className,\n    ...colProps\n  }] = useCol(props);\n  return {\n    ...colProps,\n    className: classNames(className, animation ? `${bsPrefix}-${animation}` : bsPrefix, size && `${bsPrefix}-${size}`, bg && `bg-${bg}`)\n  };\n}","import * as React from 'react';\nimport Button from './Button';\nimport usePlaceholder from './usePlaceholder';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst PlaceholderButton = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const placeholderProps = usePlaceholder(props);\n  return /*#__PURE__*/_jsx(Button, {\n    ...placeholderProps,\n    ref: ref,\n    disabled: true,\n    tabIndex: -1\n  });\n});\nPlaceholderButton.displayName = 'PlaceholderButton';\nexport default PlaceholderButton;","import * as React from 'react';\nimport usePlaceholder from './usePlaceholder';\nimport PlaceholderButton from './PlaceholderButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Placeholder = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const placeholderProps = usePlaceholder(props);\n  return /*#__PURE__*/_jsx(Component, {\n    ...placeholderProps,\n    ref: ref\n  });\n});\nPlaceholder.displayName = 'Placeholder';\nexport default Object.assign(Placeholder, {\n  Button: PlaceholderButton\n});","import Placeholder from 'react-bootstrap/Placeholder';\r\nexport default function PlaceHolder() {\r\n    return (\r\n        <>\r\n            <Placeholder as=\"p\" animation=\"glow\">\r\n                <Placeholder xs={12} />\r\n            </Placeholder>\r\n            <Placeholder as=\"p\" animation=\"wave\">\r\n                <Placeholder xs={12} />\r\n            </Placeholder>\r\n        </>)\r\n}","//export const baseURL=\"http://localhost:1300\"\r\nexport const baseURL=\"https://loan-app-backend-77d2e30338cf.herokuapp.com\""],"names":["_ref","citynames","setUpdateUI","updateMode","_useTranslation","useTranslation","t","_useState","i18n","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","lastIndex","firstIndex","records","slice","nPage","Math","ceil","Object","keys","length","numbers","_toConsumableArray","Array","serialno","_jsx","Fragment","children","_jsxs","style","margin","Table","striped","bordered","hover","size","map","cityname","i","citylineno","BiEditAlt","className","onClick","_id","BsTrash","id","axios","delete","concat","baseURL","then","res","preveState","Pagination","Prev","href","n","Item","Next","inputCity","setInputCity","_useState3","_useState4","lineNo","setLineNo","_useState5","_useState6","cityNames","setCityNames","_useState7","_useState8","lineNames","setLineNames","_useState9","_useState10","updateUI","_useState11","_useState12","updateId","setUpdateId","_useState13","_useState14","validated","setValidated","_useState15","_useState16","isLoading","setIsLoading","_useState17","_useState18","errorMessage","setErrorMessage","useEffect","get","data","catch","error","console","log","addCityName","post","prevState","alert","renderCityNameList","ListCity","text","lineno","Container","Row","Col","xs","lg","Form","Group","name","border","Label","Control","type","placeholder","required","value","onChange","e","target","Select","lines","selected","linename","Button","variant","put","event","currentTarget","checkValidity","preventDefault","PlaceHolder","_excluded","_excluded2","usePlaceholder","animation","bg","bsPrefix","props","_objectWithoutProperties","useBootstrapPrefix","_useCol","useCol","_useCol2$","colProps","_objectSpread","classNames","PlaceholderButton","React","ref","placeholderProps","disabled","tabIndex","displayName","Placeholder","_ref$as","as","Component","assign","_Fragment"],"sourceRoot":""}