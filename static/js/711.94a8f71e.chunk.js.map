{"version":3,"file":"static/js/711.94a8f71e.chunk.js","mappings":"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","sources":["Reports/ListLineChecking.js","Reports/PreviousWeekList.js","Reports/NewAccountDetails.js","Reports/WeekEndAccountDetails.js","Reports/CurrentWeekGivenAmount.js","Reports/LinecheckingReport.js"],"sourcesContent":["import React, { Fragment,useEffect,useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Table,Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {dateFormatdd} from \"../FunctionsGlobal/StartDateFn\"\r\nvar first = [];\r\n\r\nconst ListLineChecking=({pendingLoans,date,company})=>{\r\n  \r\nconst { t, i18n } = useTranslation();\r\nconst[currentPage,setCurrentPage]=useState(1);\r\nconst recordsPerPage=35;\r\nconst lastIndex=currentPage*recordsPerPage;\r\nconst firstIndex=lastIndex-recordsPerPage;\r\nconst records=pendingLoans.slice(firstIndex,lastIndex);\r\nconst nPage=Math.ceil(Object.keys(pendingLoans).length/recordsPerPage);\r\nconst numbers=[...Array(nPage+1).keys()].slice(1);\r\nvar serialno=0;\r\n\r\nfirst = records.length > 0 ? pendingLoans[0] : \"\";\r\nserialno=(currentPage-1) * recordsPerPage;\r\nvar pagetotal=0;\r\nvar pendingtotal=0;\r\nvar pending=0;\r\nvar duepending=0;\r\nvar pendingweek=0;\r\nvar pendingweektotal=0;\r\n\r\n  function prevPage(){\r\n    if(currentPage!==firstIndex)\r\n    {\r\n      setCurrentPage(currentPage-1)\r\n    }\r\n    \r\n  }\r\n  function nextPage(){\r\n    if(currentPage!==lastIndex){\r\n      setCurrentPage(currentPage+1);\r\n    }\r\n\r\n  }\r\n  function changeCPage(id){\r\n    setCurrentPage(id)\r\n  }\r\n  return (\r\n    <Fragment >\r\n      <div className='col-sm-6 fixed mt-5 '>\r\n        <h3>{(company)}</h3>\r\n      </div>\r\n      <div className='col-sm-6 fixed mt-5'><h3>{t('linechecking')}</h3></div>\r\n\r\n      <div className='col-sm-3 fixed'>{t('city')+\" : \"+first.city}</div>\r\n      <div className='col-sm-3 fixed'>{t('customer')+\" : \"+first.linemanname}</div>\r\n      <div className='col-sm-2 fixed'>{t('line')+\" : \"+(pendingLoans.length>0?first.lineno:\"\")}</div>\r\n      <div className='col-sm-2 fixed'>{t(\"bookno\")+\" : \"+(pendingLoans.length>0?first.bookno:\"\")}</div>\r\n      <div className='col-sm-2 fixed'>{t(\"date\")+\" : \"+dateFormatdd(date)}</div>\r\n      <div >\r\n        <Table  className='table  text-center table-bordered border-dark'  >\r\n          <thead>\r\n            <tr>\r\n            <th style={{fontSize:\"12px\"}}>\r\n                {t('no')}\r\n            </th>\r\n            <th style={{fontSize:\"12px\"}}>\r\n            {t('startdate')}\r\n            </th >\r\n                <th style={{fontSize:\"12px\"}}>\r\n                    {t('loanno')}\r\n                </th>\r\n              <th style={{fontSize:\"12px\"}}>\r\n                {t('customer')}\r\n              </th>\r\n\r\n              <th colSpan={2} style={{fontSize:\"12px\"}}>\r\n                {t('fathername')}\r\n              </th>\r\n              <th style={{fontSize:\"12px\"}}>\r\n                {t('address')}\r\n              </th>\r\n              <th style={{fontSize:\"12px\"}}>\r\n                {t('phoneno')}\r\n              </th>\r\n              <th style={{fontSize:\"12px\"}}>\r\n                {t('enddate')}\r\n              </th>\r\n              <th style={{fontSize:\"12px\"}}>\r\n                {t('loanamount')}\r\n              </th>\r\n              <th style={{fontSize:\"12px\"}}>\r\n                {t('pay')}\r\n              </th>\r\n              <th style={{fontSize:\"12px\"}}>\r\n                {t('pending')}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              records && records.length>0\r\n              ?\r\n              (records.map((customer,i)=>{\r\n                serialno=serialno+1;\r\n                pending=customer.totalamount-customer.collectedtotal;\r\n                pagetotal=pagetotal+pending;\r\n                \r\n                //console.log(pending+\"muru\");\r\n                if(customer.collectedamountdate>0){\r\n                  duepending=0\r\n                }\r\n                else{\r\n                  duepending=customer.dueamount\r\n                }\r\n                \r\n                pendingtotal=pendingtotal+duepending;\r\n                if(customer['addFields'].receiptpendingweek>0 && customer['addFields'].receiptpendingweek<8){\r\n                  pendingweek=(customer['addFields'].receiptpendingweek * customer.dueamount);\r\n                }\r\n                else if(customer['addFields'].receiptpendingweek>=8)\r\n                {\r\n                  pendingweek=customer.totalamount-customer.collectedtotal;\r\n                }\r\n                else {\r\n                  pendingweek=0;\r\n                }\r\n                pendingweek=parseFloat(pendingweek.toFixed(2));\r\n                pendingweektotal=pendingweektotal+parseFloat(pendingweek);\r\n                \r\n                //console.log(\"enddatediff\"+customer['addFields'].daysCountloan);\r\n                //console.log(\"weekdiff\"+customer['addFields'].daysCount);\r\n                return(\r\n                  <tr>\r\n                    <td style={{fontSize:\"12px\"}}>{serialno}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{dateFormatdd(customer.startdate)}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.loannumber}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.customer}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.relationtype==0 ? t('fathershort') : t('husbandshort')}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.fathername}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.address}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.mobileno}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{dateFormatdd(customer.finisheddate)}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{pending}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{duepending}</td>\r\n                    {\r\n                      customer['addFields'].receiptpendingweek>2\r\n                      ?\r\n                      <td style={{backgroundColor:\"black\",color:\"white\",fontSize:\"12px\"}}>{pendingweek}</td> \r\n                      :\r\n                      customer['addFields'].receiptpendingweek<=2 && customer['addFields'].receiptpendingweek>0\r\n                      ?\r\n                      <td style={{fontSize:\"12px\"}}>{pendingweek}</td>\r\n                      :\r\n                      <td style={{fontSize:\"12px\"}}></td>\r\n                  }               \r\n                    \r\n                  </tr>\r\n                  \r\n                )\r\n              })\r\n              )\r\n              :\r\n              t('tabledata')\r\n            }\r\n            <tr>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td className='fw-bold' style={{fontSize:\"12px\"}}>{t('total')}</td>\r\n            <td className='fw-bold' style={{fontSize:\"12px\"}}>{pagetotal}</td>\r\n            <td className='fw-bold' style={{fontSize:\"12px\"}}>{pendingtotal}</td>\r\n            <td className='fw-bold' style={{fontSize:\"12px\"}}>{pendingweektotal}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n        <nav>\r\n        \r\n          <Pagination>\r\n            <Pagination.Prev >\r\n            <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n            </Pagination.Prev>\r\n            {\r\n            numbers.map((n,i)=>(\r\n              <Pagination.Item>\r\n                <a href=\"#\" className='page-link'\r\n            onClick={()=>changeCPage(n)}>{n}</a>\r\n              </Pagination.Item>\r\n            ))\r\n          }\r\n            <Pagination.Next>\r\n            <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n            </Pagination.Next>\r\n          </Pagination>\r\n        </nav>\r\n\r\n      </div>\r\n      \r\n    </Fragment>\r\n    \r\n  )\r\n  \r\n}\r\nexport default ListLineChecking\r\n","import React, { Fragment, useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table, Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { dateFormatdd } from \"../FunctionsGlobal/StartDateFn\"\r\n\r\nvar first = [];\r\n\r\n\r\nconst PreviousWeekList = ({ pendingLoans, date,company}) => {\r\n    var totaldue = 0;\r\n    var totalcredit = 0;\r\n    const { t, i18n } = useTranslation();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const recordsPerPage = 35;\r\n    const lastIndex = currentPage * recordsPerPage;\r\n    const firstIndex = lastIndex - recordsPerPage;\r\n    const records = pendingLoans.slice(firstIndex, lastIndex);\r\n    const nPage = Math.ceil(Object.keys(pendingLoans).length / recordsPerPage);\r\n    const numbers = [...Array(nPage + 1).keys()].slice(1);\r\n    var serialno = 0;\r\n    first = records.length > 0 ? pendingLoans[0] : \"\";\r\n    serialno = (currentPage - 1) * recordsPerPage;\r\n    var pagetotaldue = 0;\r\n    var pagetotalcredit = 0;\r\n    \r\n    function prevPage() {\r\n        if (currentPage !== firstIndex) {\r\n            setCurrentPage(currentPage - 1)\r\n        }\r\n\r\n    }\r\n    function nextPage() {\r\n        if (currentPage !== lastIndex) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n\r\n    }\r\n    function changeCPage(id) {\r\n        setCurrentPage(id)\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className='col-sm-6 fixed'>\r\n            <h3>{(company)}</h3>\r\n            </div>\r\n            <div className='col-sm-6 fixed'><h3>{t('previousweekdetails')}</h3></div>\r\n            <div className='col-sm-2 fixed'>{t('line') + \" : \" + (pendingLoans.length > 0 ? first.lineno : \"\")}</div>\r\n            <div className='col-sm-2 fixed'>{t(\"bookno\") + \" : \" + (pendingLoans.length > 0 ? first.bookno : \"\")}</div>\r\n            <div className='col-sm-2 fixed'>{t(\"date\") + \" : \" + dateFormatdd(date)}</div>\r\n            <div >\r\n                <Table className='table text-center fs-6 table-bordered border-dark'  >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('no')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('startdate')}\r\n                            </th >\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('loanno')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('customer')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('due')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('dueno')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('totalcredit')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('debitcredit')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('city')}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            records && records.length > 0\r\n                                ?\r\n                                (records.map((customer, i) => {\r\n                                    serialno = serialno + 1;\r\n                                    pagetotaldue = pagetotaldue + customer.dueamount;\r\n                                    pagetotalcredit = pagetotalcredit + customer.collectedamount;\r\n                                    totalcredit = totalcredit + customer.collectedamount;\r\n                                    totaldue = totaldue + customer.dueamount;\r\n                                    return (\r\n                                        <tr>\r\n                                            <td style={{ fontSize: \"12px\" }}>{serialno}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{dateFormatdd(customer.startdate)}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.loannumber}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.customer}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.dueamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.weekno}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.collectedamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.collectedamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.city}</td>\r\n                                        </tr>\r\n\r\n                                    )\r\n                                })\r\n                                )\r\n                                :\r\n                                t('tabledata')\r\n                        }\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{t('total')}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotaldue}</td>\r\n                            <td></td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotalcredit}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotalcredit}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                    \r\n                </Table>\r\n                <nav>\r\n\r\n                    <Pagination>\r\n                        <Pagination.Prev >\r\n                            <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n                        </Pagination.Prev>\r\n                        {\r\n                            numbers.map((n, i) => (\r\n                                <Pagination.Item>\r\n                                    <a href=\"#\" className='page-link'\r\n                                        onClick={() => changeCPage(n)}>{n}</a>\r\n                                </Pagination.Item>\r\n                            ))\r\n                        }\r\n                        <Pagination.Next>\r\n                            <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n                        </Pagination.Next>\r\n                    </Pagination>\r\n                </nav>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default PreviousWeekList\r\n","import React, { Fragment, useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table, Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { dateFormatdd } from \"../FunctionsGlobal/StartDateFn\"\r\n\r\nvar first = [];\r\n\r\n\r\nconst NewAccountDetails = ({ pendingLoans, datefrom,dateto }) => {\r\n    \r\n    const { t, i18n } = useTranslation();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const recordsPerPage = 35;\r\n    const lastIndex = currentPage * recordsPerPage;\r\n    const firstIndex = lastIndex - recordsPerPage;\r\n    const records = pendingLoans.slice(firstIndex, lastIndex);\r\n    const nPage = Math.ceil(Object.keys(pendingLoans).length / recordsPerPage);\r\n    const numbers = [...Array(nPage + 1).keys()].slice(1);\r\n    var serialno = 0;\r\n    first = records.length > 0 ? pendingLoans[0] : \"\";\r\n    serialno = (currentPage - 1) * recordsPerPage;\r\n    \r\n    function prevPage() {\r\n        if (currentPage !== firstIndex) {\r\n            setCurrentPage(currentPage - 1)\r\n        }\r\n\r\n    }\r\n    function nextPage() {\r\n        if (currentPage !== lastIndex) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n\r\n    }\r\n    function changeCPage(id) {\r\n        setCurrentPage(id)\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className='col-sm-12 fixed text-center'><h3>{t('newaccountaddress')}</h3></div>\r\n            <div className='col-sm-4 fixed'>{t('line') + \" : \" + (pendingLoans.length > 0 ? first.lineno : \"\")}</div>\r\n            <div className='col-sm-4 fixed'>{t(\"lineman\") + \" : \" + (pendingLoans.length > 0 ? first.linemanname : \"\")}</div>\r\n            <div className='col-sm-4 fixed fw-bold'>{t(\"date\") + \" : \" + dateFormatdd(datefrom)+\" - \"+dateFormatdd(dateto)}</div>\r\n            <div >\r\n                <Table className='table text-center fs-6 table-bordered border-dark'  >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('no')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('loanno')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('customer')}\r\n                            </th>\r\n                            <th colSpan={2} style={{ fontSize: \"12px\" }}>\r\n                                {t('fathername')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('address')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('phoneno')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('city')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('givenamount')}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            records && records.length > 0\r\n                                ?\r\n                                (records.map((customer, i) => {\r\n                                    serialno = serialno + 1;\r\n                                    return (\r\n                                        <tr>\r\n                                            <td style={{ fontSize: \"12px\" }}>{serialno}</td>\r\n                                            <td className=\"fw-bold\" style={{ fontSize: \"12px\" }}>{customer.loannumber}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.customer}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{Number(customer.relationtype)=== 0 ? t('fathershort') : t('husbandshort')}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.fathername}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.address}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.mobileno}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.city}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.totalamount}</td>\r\n                                        </tr>\r\n\r\n                                    )\r\n                                })\r\n                                )\r\n                                :\r\n                                t('tabledata')\r\n                        }\r\n                       \r\n                    </tbody>\r\n\r\n                </Table>\r\n                <nav>\r\n\r\n                    <Pagination>\r\n                        <Pagination.Prev >\r\n                            <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n                        </Pagination.Prev>\r\n                        {\r\n                            numbers.map((n, i) => (\r\n                                <Pagination.Item>\r\n                                    <a href=\"#\" className='page-link'\r\n                                        onClick={() => changeCPage(n)}>{n}</a>\r\n                                </Pagination.Item>\r\n                            ))\r\n                        }\r\n                        <Pagination.Next>\r\n                            <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n                        </Pagination.Next>\r\n                    </Pagination>\r\n                </nav>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default NewAccountDetails\r\n","import React, { Fragment, useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table, Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { dateFormatdd } from \"../FunctionsGlobal/StartDateFn\"\r\n\r\nvar first = [];\r\n\r\n\r\nconst WeekEndAccountDetails = ({ pendingLoans, datefrom, dateto }) => {\r\n\r\n    const { t, i18n } = useTranslation();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const recordsPerPage = 35;\r\n    const lastIndex = currentPage * recordsPerPage;\r\n    const firstIndex = lastIndex - recordsPerPage;\r\n    const records = pendingLoans.slice(firstIndex, lastIndex);\r\n    const nPage = Math.ceil(Object.keys(pendingLoans).length / recordsPerPage);\r\n    const numbers = [...Array(nPage + 1).keys()].slice(1);\r\n    var serialno = 0;\r\n    var percentamount = 0;\r\n    var totaldebit = 0;\r\n    var totalcredit = 0;\r\n    var totalincentive = 0;\r\n    first = records.length > 0 ? pendingLoans[0] : \"\";\r\n    serialno = (currentPage - 1) * recordsPerPage;\r\n\r\n    function prevPage() {\r\n        if (currentPage !== firstIndex) {\r\n            setCurrentPage(currentPage - 1)\r\n        }\r\n\r\n    }\r\n    function nextPage() {\r\n        if (currentPage !== lastIndex) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n\r\n    }\r\n    function changeCPage(id) {\r\n        setCurrentPage(id)\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className='col-sm-12 fixed text-center'><h3>{t('weekendaccounts')}</h3></div>\r\n            <div className='col-sm-4 fixed'>{t('line') + \" : \" + (pendingLoans.length > 0 ? first.lineno : \"\")}</div>\r\n            <div className='col-sm-4 fixed'>{t(\"lineman\") + \" : \" + (pendingLoans.length > 0 ? first.linemanname : \"\")}</div>\r\n            <div className='col-sm-4 fixed fw-bold'>{t(\"date\") + \" : \" + dateFormatdd(datefrom) + \" - \" + dateFormatdd(dateto)}</div>\r\n            <div >\r\n                <Table className='table text-center fs-6 table-bordered border-dark'  >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('no')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('loanno')}\r\n                            </th>\r\n                            <th>{t('doc')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('customer')}\r\n                            </th>\r\n\r\n                            <th style={{ fontSize: \"12px\" }}>{t('city')}</th>\r\n                            <th style={{ fontSize: \"12px\",width: \"60px\" }} >\r\n                                {t('bookno')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('enddate')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('givenamount')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('credit')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>%</th>\r\n                            <th style={{ fontSize: \"12px\" }}>%</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('lineincentive')}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            records && records.length > 0\r\n                                ?\r\n                                (records.map((customer, i) => {\r\n                                    serialno = serialno + 1;\r\n                                    percentamount = ((customer.collected * customer.incentivepercentage) / 100).toFixed(0);\r\n                                    totalcredit = totalcredit + customer.collected\r\n                                    totaldebit = totaldebit + customer.totalamount\r\n                                    totalincentive = totalincentive + Number(percentamount)\r\n                                    return (\r\n                                        <tr>\r\n                                            <td style={{ fontSize: \"12px\" }}>{serialno}</td>\r\n                                            <td className=\"fw-bold\" style={{ fontSize: \"12px\" }}>{customer.loannumber}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.document}</td>\r\n\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.customer}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.city}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.bookno}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{dateFormatdd(customer.finisheddate)}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.totalamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.collected}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{Number(customer.incentivepercentage) === 1 ? customer.incentivepercentage : 0.0}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{Number(customer.incentivepercentage) < 1 ? percentamount : 0}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{percentamount}</td>\r\n                                        </tr>\r\n\r\n                                    )\r\n                                })\r\n                                )\r\n                                :\r\n                                t('tabledata')\r\n                        }\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{t('total')}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totaldebit}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totalcredit}</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totalincentive}</td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                </Table>\r\n                <nav>\r\n\r\n                    <Pagination>\r\n                        <Pagination.Prev >\r\n                            <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n                        </Pagination.Prev>\r\n                        {\r\n                            numbers.map((n, i) => (\r\n                                <Pagination.Item>\r\n                                    <a href=\"#\" className='page-link'\r\n                                        onClick={() => changeCPage(n)}>{n}</a>\r\n                                </Pagination.Item>\r\n                            ))\r\n                        }\r\n                        <Pagination.Next>\r\n                            <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n                        </Pagination.Next>\r\n                    </Pagination>\r\n                </nav>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default WeekEndAccountDetails\r\n","import React, { Fragment, useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table, Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { dateFormatdd } from \"../FunctionsGlobal/StartDateFn\"\r\n\r\nvar first = [];\r\n\r\n\r\nconst CurrentWeekGivenAmount = ({ pendingLoans, datefrom, dateto }) => {\r\n\r\n    const { t, i18n } = useTranslation();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const recordsPerPage = 35;\r\n    const lastIndex = currentPage * recordsPerPage;\r\n    const firstIndex = lastIndex - recordsPerPage;\r\n    const records = pendingLoans.slice(firstIndex, lastIndex);\r\n    const nPage = Math.ceil(Object.keys(pendingLoans).length / recordsPerPage);\r\n    const numbers = [...Array(nPage + 1).keys()].slice(1);\r\n    var serialno = 0;\r\n    var totalgiven = 0;\r\n    var totalamount = 0;\r\n    var totaldocument = 0;\r\n    var totalinterest = 0;\r\n    first = records.length > 0 ? pendingLoans[0] : \"\";\r\n    serialno = (currentPage - 1) * recordsPerPage;\r\n\r\n    function prevPage() {\r\n        if (currentPage !== firstIndex) {\r\n            setCurrentPage(currentPage - 1)\r\n        }\r\n\r\n    }\r\n    function nextPage() {\r\n        if (currentPage !== lastIndex) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n\r\n    }\r\n    function changeCPage(id) {\r\n        setCurrentPage(id)\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className='col-sm-12 fixed text-center'><h3>{t('currentweekamountgiven')}</h3></div>\r\n            <div className='col-sm-4 fixed'>{t('line') + \" : \" + (pendingLoans.length > 0 ? first.lineno : \"\")}</div>\r\n            <div className='col-sm-4 fixed'>{t(\"lineman\") + \" : \" + (pendingLoans.length > 0 ? first.linemanname : \"\")}</div>\r\n            <div className='col-sm-4 fixed fw-bold'>{t(\"date\") + \" : \" + dateFormatdd(datefrom) + \" - \" + dateFormatdd(dateto)}</div>\r\n            <div >\r\n                <Table className='table text-center fs-6 table-bordered border-dark'  >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('no')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('givendate')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('loanno')}\r\n                            </th>\r\n                            <th>{t('doc')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('customer')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('city')}</th>\r\n                            <th style={{ fontSize: \"12px\",width: \"60px\" }} className='w-5'>\r\n                                {t('bookno')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('enddate')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('givenamount')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('doc')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('interest')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('total')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('week')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('pay')}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            records && records.length > 0\r\n                                ?\r\n                                (records.map((customer, i) => {\r\n                                    serialno = serialno + 1;\r\n                                    totalgiven =totalgiven+customer.givenamount;\r\n                                    totaldocument = totaldocument + customer.documentamount;\r\n                                    totalinterest = totalinterest + customer.interestamount;\r\n                                    totalamount = totalamount + customer.totalamount;\r\n                                    return (\r\n                                        <tr>\r\n                                            <td style={{ fontSize: \"12px\" }}>{serialno}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{dateFormatdd(customer.givendate)}</td>\r\n                                            <td className=\"fw-bold\" style={{ fontSize: \"12px\" }}>{customer.loannumber}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.document}</td>\r\n\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.customer}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.city}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.bookno}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{dateFormatdd(customer.finisheddate)}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.givenamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.documentamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.interestamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.totalamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.weekcount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.dueamount}</td>\r\n                                        </tr>\r\n\r\n                                    )\r\n                                })\r\n                                )\r\n                                :\r\n                                t('tabledata')\r\n                        }\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{t('total')}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totalgiven}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totaldocument}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totalinterest}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totalamount}</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n\r\n                </Table>\r\n                <nav>\r\n\r\n                    <Pagination>\r\n                        <Pagination.Prev >\r\n                            <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n                        </Pagination.Prev>\r\n                        {\r\n                            numbers.map((n, i) => (\r\n                                <Pagination.Item>\r\n                                    <a href=\"#\" className='page-link'\r\n                                        onClick={() => changeCPage(n)}>{n}</a>\r\n                                </Pagination.Item>\r\n                            ))\r\n                        }\r\n                        <Pagination.Next>\r\n                            <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n                        </Pagination.Next>\r\n                    </Pagination>\r\n                </nav>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default CurrentWeekGivenAmount\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap';\r\nimport { baseURL } from \"../utils/constant\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PlaceHolder from \"../components/spinner/placeholder\";\r\nimport { startOfWeek } from '../FunctionsGlobal/StartDateFn';\r\nimport ListLineChecking from \"./ListLineChecking\";\r\nimport PreviousWeekList from \"./PreviousWeekList\"\r\nimport ReactToPrint from 'react-to-print';\r\nimport NewAccountDetails from \"./NewAccountDetails\";\r\nimport WeekEndAccountDetails from \"./WeekEndAccountDetails\";\r\nimport CurrentWeekGivenAmount from \"./CurrentWeekGivenAmount\";\r\nvar linecheckingreportname = \"checkingdetails\";\r\nvar passingargument = \"\";\r\nfunction LinecheckingReport() {\r\n    const [cityNames, setCityNames] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [checkingDetailsLine, setCheckingDetailsLine] = useState([]);\r\n    const[checkingData,setCheckingData]=useState([]);\r\n    const [company, setCompany] = useState([]);\r\n    const [linemannames, setLinemanNames] = useState([]);\r\n    const reportType = useRef(0);\r\n    const { t, i18n } = useTranslation();\r\n    const [city, setCity] = useState(\"\");\r\n    const startDateRef = useRef(startOfWeek());\r\n    const endDateRef = useRef(startOfWeek());\r\n    const linemanoptionRef = useRef(\"\");\r\n    const [show, setShow] = useState(false);\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseURL}/company/get`).then((res) => {\r\n            setCompany(res.data);\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error=\", error);\r\n            setErrorMessage(t('errorcompany'));\r\n            setIsLoading(false);\r\n        })\r\n    }, [])\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseURL}/linemancreate/get`).then((res) => {\r\n            setLinemanNames(res.data);\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error=\", error);\r\n            setErrorMessage(t('errormessagelineman'));\r\n            setIsLoading(false)\r\n        })\r\n    }, [])\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseURL}/citycreate/get`).then((res) => {\r\n            setCityNames(res.data);\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error=\", error);\r\n            setErrorMessage(t('errormessagecity'));\r\n            setIsLoading(false);\r\n        })\r\n    }, [])\r\n    const processList = () => {\r\n        setIsLoading(true);\r\n        //alert(linemanoptionRef.current.value);\r\n        if (Number(reportType.current.value) === 0) {\r\n\r\n            linecheckingreportname = \"checkingdetails\";\r\n            passingargument = city;\r\n        }\r\n        else if (Number(reportType.current.value) === 1) {\r\n            setCheckingData([]);\r\n            linecheckingreportname = \"previousweekdetails\";\r\n            passingargument = linemanoptionRef.current.value;\r\n            //alert(passingargument);\r\n        }\r\n        else if (Number(reportType.current.value) === 2) {\r\n            setCheckingData([]);\r\n            linecheckingreportname = \"newaccountdetails\";\r\n            passingargument = linemanoptionRef.current.value;\r\n            //alert(passingargument);\r\n        }\r\n        else if (Number(reportType.current.value) === 4) {\r\n            setCheckingData([]);\r\n            linecheckingreportname = \"weekendaccountdetails\";\r\n            passingargument = linemanoptionRef.current.value;\r\n        }\r\n        else if (Number(reportType.current.value) === 3) {\r\n            setCheckingData([]);\r\n            linecheckingreportname = \"currentweekgivenamount\";\r\n            passingargument = linemanoptionRef.current.value;\r\n        }\r\n\r\n        return (\r\n            axios.get(`${baseURL}/loan/${linecheckingreportname}`, { params: { city_id: passingargument.toString(), fromdate: startDateRef.current.value, todate: endDateRef.current.value } }).then((res) => {\r\n                Number(reportType.current.value) === 0?setCheckingData(res.data):setCheckingDetailsLine(res.data)\r\n                \r\n                console.log(res.data);\r\n                setIsLoading(false);\r\n\r\n\r\n            })\r\n                .catch(error => {\r\n                    console.log(\"error=\", error);\r\n                    setErrorMessage(t('erroressagelinechecking'));\r\n                    setIsLoading(false);\r\n                })\r\n        )\r\n\r\n\r\n    }\r\n    const componentRef = useRef();\r\n    const handlePrint = () => {\r\n        window.print()\r\n    }\r\n    const renderLineCheckingList = (\r\n        <Row ref={componentRef}>\r\n            <ListLineChecking pendingLoans={checkingData} date={endDateRef.current.value}\r\n                company={company.length > 0 ? company[0].companyname : \"\"} />\r\n\r\n        </Row>\r\n\r\n    )\r\n    const renderpreviousweekList = (\r\n        <Row ref={componentRef}>\r\n            <PreviousWeekList pendingLoans={checkingDetailsLine} date={endDateRef.current.value}\r\n                company={company.length > 0 ? company[0].companyname : \"\"} />\r\n        </Row>\r\n\r\n    )\r\n    const rendernewaccountList = (\r\n        <Row ref={componentRef}>\r\n            <NewAccountDetails pendingLoans={checkingDetailsLine} datefrom={startDateRef.current.value} dateto={endDateRef.current.value} />\r\n        </Row>\r\n    )\r\n    const renderweekendaccountList = (\r\n        <Row ref={componentRef}>\r\n            <WeekEndAccountDetails pendingLoans={checkingDetailsLine} datefrom={startDateRef.current.value} dateto={endDateRef.current.value} />\r\n        </Row>\r\n    )\r\n    const rendercurrentweekgivenaccountList = (\r\n        <Row ref={componentRef}>\r\n            <CurrentWeekGivenAmount pendingLoans={checkingDetailsLine} datefrom={startDateRef.current.value} dateto={endDateRef.current.value} />\r\n        </Row>\r\n    )\r\n    const linemanshow = (\r\n        <Col xs={12} md={5} className=\"rounder bg-white \" >\r\n            <Form.Group className=\"mb-3\" name=\"linenumber\" border=\"primary\" >\r\n                <Form.Label>{t('lineman')}</Form.Label>\r\n                <Form.Select aria-label=\"Default select example\" value={city}\r\n                    onChange={(e) => setCity(e.target.value)} ref={linemanoptionRef}>\r\n                    <option key={\"\"} value={\"\"} >{t('linemanplaceholder')}</option>\r\n\r\n                    {\r\n                        linemannames.map((linemanname) => (\r\n                            <option key={linemanname._id} value={linemanname._id}\r\n                                selected={linemanname._id} >{linemanname.linemanname}</option>\r\n                        ))}\r\n\r\n                </Form.Select>\r\n            </Form.Group>\r\n        </Col>\r\n\r\n    )\r\n    const citynameshow = (\r\n        <Col xs={12} md={5} className=\"rounder bg-white\">\r\n            <Form.Group className=\"mb-3\" name=\"linenumber\" border=\"primary\" >\r\n                <Form.Label>{t('city')}</Form.Label>\r\n                <Form.Select aria-label=\"Default select example\" value={city}\r\n                    onChange={(e) => setCity(e.target.value)} required>\r\n                    <option key={\"\"} value={\"\"} >{t('cityplaceholder')}</option>\r\n\r\n                    {\r\n                        cityNames.map((cities) => (\r\n                            <option key={cities._id} value={cities._id}\r\n                                selected={cities._id} >{cities.cityname}</option>\r\n                        ))}\r\n\r\n                </Form.Select>\r\n            </Form.Group>\r\n        </Col>\r\n    )\r\n    const handleClick = () => {\r\n\r\n        if (Number(reportType.current.value) === 0) {\r\n            setShow(false);\r\n        }\r\n        else {\r\n            setShow(true)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Form>\r\n                    <Row >\r\n                        {show == true ? linemanshow : citynameshow}\r\n\r\n                        <Col md={3} className=\"rounder bg-white\">\r\n                            <Form.Group className=\"mb-3\" name=\"cityname\" border=\"primary\" >\r\n                                <Form.Label>{t('report')}</Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                    ref={reportType} defaultValue={0} onClick={handleClick} >\r\n                                    <option value={0} >{t('linechecking')}</option>\r\n                                    <option value={1}>{t('previousweekreport')}</option>\r\n                                    <option value={2}>{t('newaccountaddress')}</option>\r\n                                    <option value={3}>{t('currentweekamountgiven')}</option>\r\n                                    <option value={4}>{t('weekendaccounts')}</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={2} className=\"rounded bg-white\">\r\n                            <Form.Group>\r\n                                <Form.Label>{t('startdate')}</Form.Label>\r\n                                <Form.Control type=\"date\" ref={startDateRef} defaultValue={startOfWeek()} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={2} className=\"rounder bg-white\">\r\n                            <Form.Group>\r\n                                <Form.Label>{t('enddate')}</Form.Label>\r\n                                <Form.Control type=\"date\" ref={endDateRef} defaultValue={startOfWeek()} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"rounded bg-white text-center\">\r\n                        <div className=\"col-md-6 mb-4 \" >\r\n                            <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"text-center\" onClick={processList}>\r\n                                {t('processbuttonlabel')}\r\n                            </Button>{' '}\r\n                        </div>\r\n                        <div className=\"col-md-6 mb-4 \">\r\n                            <ReactToPrint trigger={() => (\r\n                                <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"text-center\" onClick={() => handlePrint}>\r\n                                    {t('printbutton')}\r\n                                </Button>\r\n\r\n                            )}\r\n                                content={() => componentRef.current} />\r\n                        </div>\r\n                    </Row>\r\n\r\n                    {isLoading ? <PlaceHolder /> : Number(reportType.current.value) === 0 ?\r\n                        renderLineCheckingList : Number(reportType.current.value) === 1 ?\r\n                            renderpreviousweekList : Number(reportType.current.value) === 2 ?\r\n                                rendernewaccountList : Number(reportType.current.value) === 3 ?\r\n                                    rendercurrentweekgivenaccountList : renderweekendaccountList}\r\n                    {errorMessage && <div className=\"error\">{errorMessage}</div>}\r\n\r\n\r\n                </Form>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default LinecheckingReport;"],"names":["first","_ref","pendingLoans","date","company","_useTranslation","useTranslation","t","_useState","i18n","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","lastIndex","firstIndex","records","slice","nPage","Math","ceil","Object","keys","length","numbers","_toConsumableArray","Array","serialno","pagetotal","pendingtotal","pending","duepending","pendingweek","pendingweektotal","_jsxs","Fragment","children","_jsx","className","city","linemanname","lineno","bookno","dateFormatdd","Table","style","fontSize","colSpan","map","customer","i","totalamount","collectedtotal","collectedamountdate","dueamount","receiptpendingweek","parseFloat","toFixed","startdate","loannumber","relationtype","fathername","address","mobileno","finisheddate","backgroundColor","color","Pagination","Prev","href","onClick","n","Item","Next","pagetotaldue","pagetotalcredit","collectedamount","weekno","datefrom","dateto","Number","percentamount","totaldebit","totalcredit","totalincentive","width","collected","incentivepercentage","document","totalgiven","totaldocument","totalinterest","givenamount","documentamount","interestamount","givendate","weekcount","linecheckingreportname","passingargument","cityNames","setCityNames","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","checkingDetailsLine","setCheckingDetailsLine","_useState9","_useState10","checkingData","setCheckingData","_useState11","_useState12","setCompany","_useState13","_useState14","linemannames","setLinemanNames","reportType","useRef","_useState15","_useState16","setCity","startDateRef","startOfWeek","endDateRef","linemanoptionRef","_useState17","_useState18","show","setShow","useEffect","axios","get","concat","baseURL","then","res","data","catch","error","console","log","componentRef","handlePrint","window","print","renderLineCheckingList","Row","ref","ListLineChecking","current","value","companyname","renderpreviousweekList","PreviousWeekList","rendernewaccountList","NewAccountDetails","renderweekendaccountList","WeekEndAccountDetails","rendercurrentweekgivenaccountList","CurrentWeekGivenAmount","linemanshow","Col","xs","md","Form","Group","name","border","Label","Select","onChange","e","target","_id","selected","citynameshow","required","cities","cityname","Container","defaultValue","Control","type","Button","variant","size","params","city_id","toString","fromdate","todate","ReactToPrint","trigger","content","PlaceHolder"],"sourceRoot":""}