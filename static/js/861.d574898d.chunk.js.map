{"version":3,"file":"static/js/861.d574898d.chunk.js","mappings":"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","sources":["Reports/ListLineChecking.js","Reports/PreviousWeekList.js","Reports/LinecheckingReport.js"],"sourcesContent":["import React, { Fragment,useEffect,useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Table,Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {dateFormatdd} from \"../FunctionsGlobal/StartDateFn\"\r\nvar first = [];\r\n\r\nconst ListLineChecking=({pendingLoans,date,company})=>{\r\n  \r\nconst { t, i18n } = useTranslation();\r\nconst[currentPage,setCurrentPage]=useState(1);\r\nconst recordsPerPage=35;\r\nconst lastIndex=currentPage*recordsPerPage;\r\nconst firstIndex=lastIndex-recordsPerPage;\r\nconst records=pendingLoans.slice(firstIndex,lastIndex);\r\nconst nPage=Math.ceil(Object.keys(pendingLoans).length/recordsPerPage);\r\nconst numbers=[...Array(nPage+1).keys()].slice(1);\r\nvar serialno=0;\r\n\r\nfirst = records.length > 0 ? pendingLoans[0] : \"\";\r\nserialno=(currentPage-1) * recordsPerPage;\r\nvar pagetotal=0;\r\nvar pendingtotal=0;\r\nvar pending=0;\r\nvar duepending=0;\r\nvar pendingweek=0;\r\nvar pendingweektotal=0;\r\n\r\n  function prevPage(){\r\n    if(currentPage!==firstIndex)\r\n    {\r\n      setCurrentPage(currentPage-1)\r\n    }\r\n    \r\n  }\r\n  function nextPage(){\r\n    if(currentPage!==lastIndex){\r\n      setCurrentPage(currentPage+1);\r\n    }\r\n\r\n  }\r\n  function changeCPage(id){\r\n    setCurrentPage(id)\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className='col-sm-6 fixed'>\r\n        <h3>{(company)}</h3>\r\n      </div>\r\n      <div className='col-sm-6 fixed'><h3>{t('linechecking')}</h3></div>\r\n\r\n      <div className='col-sm-3 fixed'>{t('city')+\" : \"+first.city}</div>\r\n      <div className='col-sm-3 fixed'>{t('customer')+\" : \"+first.linemanname}</div>\r\n      <div className='col-sm-2 fixed'>{t('line')+\" : \"+(pendingLoans.length>0?first.lineno:\"\")}</div>\r\n      <div className='col-sm-2 fixed'>{t(\"bookno\")+\" : \"+(pendingLoans.length>0?first.bookno:\"\")}</div>\r\n      <div className='col-sm-2 fixed'>{t(\"date\")+\" : \"+dateFormatdd(date)}</div>\r\n      <div >\r\n        <Table  className='table text-center fs-6 table-bordered border-dark'  >\r\n          <thead>\r\n            <tr>\r\n            <th style={{fontSize:\"12px\"}}>\r\n                {t('no')}\r\n            </th>\r\n            <th style={{fontSize:\"12px\"}}>\r\n            {t('startdate')}\r\n            </th >\r\n                <th style={{fontSize:\"12px\"}}>\r\n                    {t('loanno')}\r\n                </th>\r\n              <th style={{fontSize:\"12px\"}}>\r\n                {t('customer')}\r\n              </th>\r\n\r\n              <th colSpan={2} style={{fontSize:\"12px\"}}>\r\n                {t('fathername')}\r\n              </th>\r\n              <th style={{fontSize:\"12px\"}}>\r\n                {t('address')}\r\n              </th>\r\n              <th style={{fontSize:\"12px\"}}>\r\n                {t('phoneno')}\r\n              </th>\r\n              <th style={{fontSize:\"12px\"}}>\r\n                {t('enddate')}\r\n              </th>\r\n              <th style={{fontSize:\"12px\"}}>\r\n                {t('loanamount')}\r\n              </th>\r\n              <th style={{fontSize:\"12px\"}}>\r\n                {t('pay')}\r\n              </th>\r\n              <th style={{fontSize:\"12px\"}}>\r\n                {t('pending')}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              records && records.length>0\r\n              ?\r\n              (records.map((customer,i)=>{\r\n                serialno=serialno+1;\r\n                pending=customer.totalamount-customer.collectedtotal;\r\n                pagetotal=pagetotal+pending;\r\n                \r\n                console.log(pending+\"muru\");\r\n                if(customer.collectedamountdate>0){\r\n                  duepending=0\r\n                }\r\n                else{\r\n                  duepending=customer.dueamount\r\n                }\r\n                pendingtotal=pendingtotal+duepending;\r\n                if(customer['addFields'].receiptpendingweek>0 && customer['addFields'].receiptpendingweek<8){\r\n                  pendingweek=(customer['addFields'].receiptpendingweek * customer.dueamount);\r\n                }\r\n                else if(customer['addFields'].receiptpendingweek>=8)\r\n                {\r\n                  pendingweek=customer.totalamount-customer.collectedtotal;\r\n                }\r\n                else {\r\n                  pendingweek=0;\r\n                }\r\n                pendingweektotal=pendingweektotal+pendingweek;\r\n                //console.log(\"enddatediff\"+customer['addFields'].daysCountloan);\r\n                //console.log(\"weekdiff\"+customer['addFields'].daysCount);\r\n                return(\r\n                  <tr>\r\n                    <td style={{fontSize:\"12px\"}}>{serialno}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{dateFormatdd(customer.startdate)}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.loannumber}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.customer}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.relationtype==0 ? t('fathershort') : t('husbandshort')}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.fathername}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.address}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{customer.mobileno}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{dateFormatdd(customer.finisheddate)}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{pending}</td>\r\n                    <td style={{fontSize:\"12px\"}}>{duepending}</td>\r\n                    {\r\n                      customer['addFields'].receiptpendingweek>2\r\n                      ?\r\n                      <td style={{backgroundColor:\"black\",color:\"white\",fontSize:\"12px\"}}>{pendingweek}</td> \r\n                      :\r\n                      customer['addFields'].receiptpendingweek<=2 && customer['addFields'].receiptpendingweek>0\r\n                      ?\r\n                      <td style={{fontSize:\"12px\"}}>{pendingweek}</td>\r\n                      :\r\n                      <td style={{fontSize:\"12px\"}}></td>\r\n                  }               \r\n                    \r\n                  </tr>\r\n                  \r\n                )\r\n              })\r\n              )\r\n              :\r\n              t('tabledata')\r\n            }\r\n            <tr>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td className='fw-bold' style={{fontSize:\"12px\"}}>{t('total')}</td>\r\n            <td className='fw-bold' style={{fontSize:\"12px\"}}>{pagetotal}</td>\r\n            <td className='fw-bold' style={{fontSize:\"12px\"}}>{pendingtotal}</td>\r\n            <td className='fw-bold' style={{fontSize:\"12px\"}}>{pendingweektotal}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n        <nav>\r\n        \r\n          <Pagination>\r\n            <Pagination.Prev >\r\n            <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n            </Pagination.Prev>\r\n            {\r\n            numbers.map((n,i)=>(\r\n              <Pagination.Item>\r\n                <a href=\"#\" className='page-link'\r\n            onClick={()=>changeCPage(n)}>{n}</a>\r\n              </Pagination.Item>\r\n            ))\r\n          }\r\n            <Pagination.Next>\r\n            <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n            </Pagination.Next>\r\n          </Pagination>\r\n        </nav>\r\n\r\n      </div>\r\n      \r\n    </Fragment>\r\n    \r\n  )\r\n  \r\n}\r\nexport default ListLineChecking\r\n","import React, { Fragment, useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table, Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { dateFormatdd } from \"../FunctionsGlobal/StartDateFn\"\r\n\r\nvar first = [];\r\n\r\n\r\nconst PreviousWeekList = ({ pendingLoans, date,company }) => {\r\n    var totaldue = 0;\r\n    var totalcredit = 0;\r\n    const { t, i18n } = useTranslation();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const recordsPerPage = 35;\r\n    const lastIndex = currentPage * recordsPerPage;\r\n    const firstIndex = lastIndex - recordsPerPage;\r\n    const records = pendingLoans.slice(firstIndex, lastIndex);\r\n    const nPage = Math.ceil(Object.keys(pendingLoans).length / recordsPerPage);\r\n    const numbers = [...Array(nPage + 1).keys()].slice(1);\r\n    var serialno = 0;\r\n    first = records.length > 0 ? pendingLoans[0] : \"\";\r\n    serialno = (currentPage - 1) * recordsPerPage;\r\n    var pagetotaldue = 0;\r\n    var pagetotalcredit = 0;\r\n\r\n    function prevPage() {\r\n        if (currentPage !== firstIndex) {\r\n            setCurrentPage(currentPage - 1)\r\n        }\r\n\r\n    }\r\n    function nextPage() {\r\n        if (currentPage !== lastIndex) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n\r\n    }\r\n    function changeCPage(id) {\r\n        setCurrentPage(id)\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className='col-sm-6 fixed'>\r\n            <h3>{(company)}</h3>\r\n            </div>\r\n            <div className='col-sm-6 fixed'><h3>{t('previousweekdetails')}</h3></div>\r\n            <div className='col-sm-2 fixed'>{t('line') + \" : \" + (pendingLoans.length > 0 ? first.lineno : \"\")}</div>\r\n            <div className='col-sm-2 fixed'>{t(\"bookno\") + \" : \" + (pendingLoans.length > 0 ? first.bookno : \"\")}</div>\r\n            <div className='col-sm-2 fixed'>{t(\"date\") + \" : \" + dateFormatdd(date)}</div>\r\n            <div >\r\n                <Table className='table text-center fs-6 table-bordered border-dark'  >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('no')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('startdate')}\r\n                            </th >\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('loanno')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('customer')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('due')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('dueno')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('totalcredit')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('debitcredit')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('city')}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            records && records.length > 0\r\n                                ?\r\n                                (records.map((customer, i) => {\r\n                                    serialno = serialno + 1;\r\n                                    pagetotaldue = pagetotaldue + customer.dueamount;\r\n                                    pagetotalcredit = pagetotalcredit + customer.collectedamount;\r\n                                    totalcredit = totalcredit + customer.collectedamount;\r\n                                    totaldue = totaldue + customer.dueamount;\r\n                                    return (\r\n                                        <tr>\r\n                                            <td style={{ fontSize: \"12px\" }}>{serialno}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{dateFormatdd(customer.startdate)}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.loannumber}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.customer}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.dueamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.weekno}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.collectedamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.collectedamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.city}</td>\r\n                                        </tr>\r\n\r\n                                    )\r\n                                })\r\n                                )\r\n                                :\r\n                                t('tabledata')\r\n                        }\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{t('total')}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotaldue}</td>\r\n                            <td></td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotalcredit}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotalcredit}</td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                    \r\n                </Table>\r\n                <nav>\r\n\r\n                    <Pagination>\r\n                        <Pagination.Prev >\r\n                            <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n                        </Pagination.Prev>\r\n                        {\r\n                            numbers.map((n, i) => (\r\n                                <Pagination.Item>\r\n                                    <a href=\"#\" className='page-link'\r\n                                        onClick={() => changeCPage(n)}>{n}</a>\r\n                                </Pagination.Item>\r\n                            ))\r\n                        }\r\n                        <Pagination.Next>\r\n                            <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n                        </Pagination.Next>\r\n                    </Pagination>\r\n                </nav>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default PreviousWeekList\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap';\r\nimport { baseURL } from \"../utils/constant\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PlaceHolder from \"../components/spinner/placeholder\";\r\nimport { startOfWeek } from '../FunctionsGlobal/StartDateFn';\r\nimport ListLineChecking from \"./ListLineChecking\";\r\nimport PreviousWeekList from \"./PreviousWeekList\"\r\nimport ReactToPrint from 'react-to-print';\r\nvar linecheckingreport = \"checkingdetails\";\r\nfunction LinecheckingReport() {\r\n    const [cityNames, setCityNames] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [checkingDetails, setCheckingDetails] = useState([]);\r\n    const [company, setCompany] = useState([]);\r\n    const [reportType, setReportType] = useState(0);\r\n    const { t, i18n } = useTranslation();\r\n    const [city, setCity] = useState(\"\");\r\n    const startDateRef = useRef(null);\r\n    const endDateRef = useRef(startOfWeek());\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseURL}/company/get`).then((res) => {\r\n            setCompany(res.data);\r\n            console.log(res.data)\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error=\", error);\r\n            setErrorMessage(t('ermururor'));\r\n            setIsLoading(false);\r\n        })\r\n    }, [])\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseURL}/citycreate/get`).then((res) => {\r\n            setCityNames(res.data);\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error=\", error);\r\n            setErrorMessage(t('errormessagecity'));\r\n            setIsLoading(false);\r\n        })\r\n    }, [])\r\n    const processList = () => {\r\n        setIsLoading(true);\r\n        \r\n        if (Number(reportType)=== 0) {\r\n            linecheckingreport = \"checkingdetails\"\r\n        }\r\n        else {\r\n            linecheckingreport = \"previousweekdetails\";\r\n        }\r\n        return (\r\n            axios.get(`${baseURL}/loan/${linecheckingreport}`, { params: { city_id: city.toString(), fromdate: startDateRef.current.value, todate: endDateRef.current.value } }).then((res) => {\r\n                setCheckingDetails(res.data)\r\n                console.log(res.data)\r\n                setIsLoading(false);\r\n            })\r\n                .catch(error => {\r\n                    console.log(\"error=\", error);\r\n                    setErrorMessage(t('erroressagelinechecking'));\r\n                    setIsLoading(false);\r\n                })\r\n        )\r\n\r\n\r\n    }\r\n    const componentRef = useRef();\r\n    const handlePrint = () => {\r\n        window.print()\r\n    }\r\n    const renderLineCheckingList = (\r\n        <Row ref={componentRef}>\r\n            <ListLineChecking pendingLoans={checkingDetails} date={endDateRef.current.value} company={company.length>0?company[0].companyname:\"\"} />\r\n\r\n        </Row>\r\n\r\n    )\r\n    const renderpreviousweekList = (\r\n        <Row ref={componentRef}>\r\n            <PreviousWeekList pendingLoans={checkingDetails} date={endDateRef.current.value} company={company.length>0?company[0].companyname:\"\"} />\r\n        </Row>\r\n\r\n    )\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Form>\r\n                    <Row >\r\n                        <Col xs={12} md={5} className=\"rounder bg-white\">\r\n                            <Form.Group className=\"mb-3\" name=\"linenumber\" border=\"primary\" >\r\n                                <Form.Label>{t('city')}</Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\" value={city} onChange={(e) => setCity(e.target.value)} required>\r\n                                    <option key={\"\"} value={\"\"} >{t('cityplaceholder')}</option>\r\n\r\n                                    {\r\n                                        cityNames.map((cities) => (\r\n                                            <option key={cities._id} value={cities._id}\r\n                                                selected={cities._id} >{cities.cityname}</option>\r\n                                        ))}\r\n\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={3} className=\"rounder bg-white\">\r\n                            <Form.Group className=\"mb-3\" name=\"cityname\" border=\"primary\" >\r\n                                <Form.Label>{t('city')}</Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                    onChange={(e) => setReportType(e.target.value)} value={reportType} >\r\n                                    <option value={0} >{t('linechecking')}</option>\r\n                                    <option value={1}>{t('previousweekreport')}</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={2} className=\"rounded bg-white\">\r\n                            <Form.Group>\r\n                                <Form.Label>{t('startdate')}</Form.Label>\r\n                                <Form.Control type=\"date\" ref={startDateRef} defaultValue={startOfWeek()} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={2} className=\"rounder bg-white\">\r\n                            <Form.Group>\r\n                                <Form.Label>{t('enddate')}</Form.Label>\r\n                                <Form.Control type=\"date\" ref={endDateRef} defaultValue={startOfWeek()} disabled={Number(reportType)=== 0 ? false : true} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"rounded bg-white text-center\">\r\n                        <div className=\"col-md-6 mb-4 \" >\r\n                            <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"text-center\" onClick={processList}>\r\n                                {t('processbuttonlabel')}\r\n                            </Button>{' '}\r\n                        </div>\r\n                        <div className=\"col-md-6 mb-4 \">\r\n                            <ReactToPrint trigger={() => (\r\n                                <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"text-center\" onClick={() => handlePrint}>\r\n                                    {t('printbutton')}\r\n                                </Button>\r\n\r\n                            )}\r\n                                content={() => componentRef.current} />\r\n                        </div>\r\n                    </Row>\r\n                    {isLoading ? <PlaceHolder /> : (Number(reportType)=== 0 ? renderLineCheckingList : renderpreviousweekList)}\r\n                    {errorMessage && <div className=\"error\">{errorMessage}</div>}\r\n\r\n\r\n                </Form>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default LinecheckingReport;"],"names":["first","_ref","pendingLoans","date","company","_useTranslation","useTranslation","t","_useState","i18n","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","lastIndex","firstIndex","records","slice","nPage","Math","ceil","Object","keys","length","numbers","_toConsumableArray","Array","serialno","pagetotal","pendingtotal","pending","duepending","pendingweek","pendingweektotal","_jsxs","Fragment","children","_jsx","className","city","linemanname","lineno","bookno","dateFormatdd","Table","style","fontSize","colSpan","map","customer","i","totalamount","collectedtotal","console","log","collectedamountdate","dueamount","receiptpendingweek","startdate","loannumber","relationtype","fathername","address","mobileno","finisheddate","backgroundColor","color","Pagination","Prev","href","onClick","n","Item","Next","pagetotaldue","pagetotalcredit","collectedamount","weekno","linecheckingreport","cityNames","setCityNames","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","checkingDetails","setCheckingDetails","_useState9","_useState10","setCompany","_useState11","_useState12","reportType","setReportType","_useState13","_useState14","setCity","startDateRef","useRef","endDateRef","startOfWeek","useEffect","axios","get","concat","baseURL","then","res","data","catch","error","componentRef","handlePrint","window","print","renderLineCheckingList","Row","ref","ListLineChecking","current","value","companyname","renderpreviousweekList","PreviousWeekList","Container","Form","Col","xs","md","Group","name","border","Label","Select","onChange","e","target","required","cities","_id","selected","cityname","Control","type","defaultValue","disabled","Number","Button","variant","size","params","city_id","toString","fromdate","todate","ReactToPrint","trigger","content","PlaceHolder"],"sourceRoot":""}