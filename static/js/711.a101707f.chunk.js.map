{"version":3,"file":"static/js/711.a101707f.chunk.js","mappings":"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","sources":["Reports/ListLineChecking.js","Reports/PreviousWeekList.js","Reports/NewAccountDetails.js","Reports/WeekEndAccountDetails.js","Reports/CurrentWeekGivenAmount.js","Reports/LinecheckingReport.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table, Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { dateFormatdd } from \"../FunctionsGlobal/StartDateFn\"\r\nvar first = [];\r\n\r\nconst ListLineChecking = ({ pendingLoans, date, company }) => {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const recordsPerPage = 35;\r\n  const lastIndex = currentPage * recordsPerPage;\r\n  const firstIndex = lastIndex - recordsPerPage;\r\n  const records = pendingLoans.slice(firstIndex, lastIndex);\r\n  const nPage = Math.ceil(Object.keys(pendingLoans).length / recordsPerPage);\r\n  const numbers = [...Array(nPage + 1).keys()].slice(1);\r\n  var serialno = 0;\r\n\r\n  first = records.length > 0 ? pendingLoans[0] : \"\";\r\n  serialno = (currentPage - 1) * recordsPerPage;\r\n  var pagetotal = 0;\r\n  var pendingtotal = 0;\r\n  var pending = 0;\r\n  var duepending = 0;\r\n  var pendingweek = 0;\r\n  var pendingweektotal = 0;\r\n  var total = 0;\r\n  var totalduepending = 0;\r\n  var totalpendingweek = 0;\r\n  function prevPage() {\r\n    if (currentPage !== firstIndex) {\r\n      setCurrentPage(currentPage - 1)\r\n    }\r\n\r\n  }\r\n  function nextPage() {\r\n    if (currentPage !== lastIndex) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n\r\n  }\r\n  function changeCPage(id) {\r\n    setCurrentPage(id)\r\n  }\r\n  if (currentPage === nPage) {\r\n    total = pendingLoans.reduce((previousValue, currentValue) => {\r\n      return previousValue + (currentValue.totalamount - currentValue.collectedtotal)\r\n    }, 0);\r\n\r\n    totalduepending = pendingLoans.reduce((previous, current) => {\r\n      if (current.collectedamountdate > 0 || current['addFields'].receiptpendingweek<0 ||current.finisheddatepending==1) {\r\n        return previous + 0;\r\n      }\r\n      else {\r\n        return previous + current.dueamount\r\n      }\r\n    }, 0);\r\n\r\n    totalpendingweek = pendingLoans.reduce((previousval, currentval) => {\r\n      if (currentval['addFields'].receiptpendingweek > 0 && currentval['addFields'].receiptpendingweek < 8) {\r\n        return previousval + (currentval['addFields'].receiptpendingweek * currentval.dueamount);\r\n      }\r\n      else if (currentval['addFields'].receiptpendingweek >= 8) {\r\n        return previousval + (currentval['addFields'].receiptpendingweek * currentval.dueamount);\r\n        //return previousval + (currentval.totalamount - currentval.collectedtotal);\r\n      }\r\n      else {\r\n        return previousval + 0;\r\n      }\r\n    }, 0);\r\n  }\r\n\r\n  return (\r\n    <Fragment >\r\n      <div className='col-sm-6 fixed mt-5 '>\r\n        <h3>{(company)}</h3>\r\n      </div>\r\n      <div className='col-sm-6 fixed mt-5'><h3>{t('linechecking')}</h3></div>\r\n\r\n      <div className='col-sm-3 fixed'>{t('city') + \" : \" + first.city}</div>\r\n      <div className='col-sm-3 fixed'>{t('customer') + \" : \" + first.linemanname}</div>\r\n      <div className='col-sm-2 fixed'>{t('line') + \" : \" + (pendingLoans.length > 0 ? first.lineno : \"\")}</div>\r\n      <div className='col-sm-2 fixed'>{t(\"bookno\") + \" : \" + (pendingLoans.length > 0 ? first.bookno : \"\")}</div>\r\n      <div className='col-sm-2 fixed'>{t(\"date\") + \" : \" + dateFormatdd(date)}</div>\r\n\r\n      <Table className='table  text-center table-bordered border-dark'  >\r\n        <thead >\r\n          <tr>\r\n            <th></th>\r\n            <th style={{ fontSize: \"12px\", width: \"5%\" }}>\r\n              {t('no')}\r\n            </th>\r\n            <th style={{ fontSize: \"12px\", width: \"5%\" }}>\r\n              {t('startdate')}\r\n            </th >\r\n            <th style={{ fontSize: \"12px\", width: \"10%\" }}>\r\n              {t('loanno')}\r\n            </th>\r\n            <th style={{ fontSize: \"12px\", width: \"10%\" }}>\r\n              {t('customer')}\r\n            </th>\r\n\r\n            <th colSpan={2} style={{ fontSize: \"12px\", width: \"10%\" }}>\r\n              {t('fathername')}\r\n            </th>\r\n            <th style={{ fontSize: \"12px\", width: \"15%\" }}>\r\n              {t('address')}\r\n            </th>\r\n            <th style={{ fontSize: \"12px\", width: \"10%\" }}>\r\n              {t('phoneno')}\r\n            </th>\r\n            <th style={{ fontSize: \"12px\", width: \"5%\" }}>\r\n              {t('enddate')}\r\n            </th>\r\n            <th style={{ fontSize: \"12px\", width: \"10%\" }}>\r\n              {t('loanamount')}\r\n            </th>\r\n            <th style={{ fontSize: \"12px\", width: \"10%\" }}>\r\n              {t('pay')}\r\n            </th>\r\n            <th style={{ fontSize: \"12px\", width: \"10%\" }}>\r\n              {t('pending')}\r\n            </th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            records && records.length > 0\r\n              ?\r\n              (records.map((customer, i) => {\r\n                serialno = serialno + 1;\r\n                pending = customer.totalamount - customer.collectedtotal;\r\n                pagetotal = pagetotal + pending;\r\n\r\n                //console.log(pending+\"muru\");\r\n                if (customer.collectedamountdate > 0 || customer['addFields'].receiptpendingweekafter<0 ||customer.finisheddatepending==1) {\r\n                  duepending = 0\r\n                }\r\n                else {\r\n                  duepending = customer.dueamount\r\n                }\r\n\r\n                pendingtotal = pendingtotal + duepending;\r\n                if (customer['addFields'].receiptpendingweek > 0 && customer['addFields'].receiptpendingweek < 8) {\r\n                  pendingweek = (customer['addFields'].receiptpendingweek * customer.dueamount);\r\n                }\r\n                else if (customer['addFields'].receiptpendingweek >= 8) {\r\n                  pendingweek=(customer['addFields'].receiptpendingweek * customer.dueamount);\r\n                  //pendingweek = customer.totalamount - customer.collectedtotal;\r\n                }\r\n                else {\r\n                  pendingweek = 0;\r\n                }\r\n                pendingweek = parseFloat(pendingweek.toFixed(2));\r\n                pendingweektotal = pendingweektotal + parseFloat(pendingweek);\r\n\r\n                //console.log(\"enddatediff\"+customer['addFields'].daysCountloan);\r\n                //console.log(\"weekdiff\"+customer['addFields'].daysCount);\r\n                return (\r\n                  <tr className='newaccountaddress'>\r\n                    <td></td>\r\n                    <td style={{ fontSize: \"12px\" }} >{serialno}</td>\r\n                    <td style={{ fontSize: \"12px\" }}>{dateFormatdd(customer.startdate)}</td>\r\n                    <td style={{ fontSize: \"12px\" }}>{customer.loannumber}</td>\r\n                    <td style={{ fontSize: \"12px\" }}>{customer.customer}</td>\r\n                    <td style={{ fontSize: \"12px\" }}>{customer.relationtype == 0 ? t('fathershort') : t('husbandshort')}</td>\r\n                    <td style={{ fontSize: \"12px\" }}>{customer.fathername}</td>\r\n                    <td style={{ fontSize: \"12px\" }}>{customer.address}</td>\r\n                    <td style={{ fontSize: \"12px\" }}>{customer.mobileno}</td>\r\n                    <td style={{ fontSize: \"12px\" }}>{dateFormatdd(customer.finisheddate)}</td>\r\n                    <td style={{ fontSize: \"12px\" }}>{pending}</td>\r\n                    <td style={{ fontSize: \"12px\" }}>{duepending}</td>\r\n                    {\r\n                      customer['addFields'].receiptpendingweek > 2\r\n                        ?\r\n                        <td style={{ backgroundColor: \"black\", color: \"white\", fontSize: \"12px\" }}>{pendingweek}</td>\r\n                        :\r\n                        customer['addFields'].receiptpendingweek <= 2 && customer['addFields'].receiptpendingweek > 0\r\n                          ?\r\n                          <td style={{ fontSize: \"12px\" }}>{pendingweek}</td>\r\n                          :\r\n                          <td style={{ fontSize: \"12px\" }}></td>\r\n                    }\r\n                    <td></td>\r\n                  </tr>\r\n\r\n                )\r\n              })\r\n              )\r\n              :\r\n              t('tabledata')\r\n          }\r\n          <tr className='borderless'>\r\n            <td ></td>\r\n            <td ></td>\r\n            <td ></td>\r\n            <td ></td>\r\n            <td ></td>\r\n            <td></td>\r\n            <td ></td>\r\n            <td ></td>\r\n            <td ></td>\r\n            <td className='fw-bold borderless' style={{ fontSize: \"12px\" }}>{t('pagetotal')}</td>\r\n            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotal}</td>\r\n            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pendingtotal}</td>\r\n            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pendingweektotal}</td>\r\n            <td ></td>\r\n          </tr>\r\n        </tbody>\r\n\r\n        {\r\n\r\n          currentPage === nPage ? <tr className=\"rounded bg-white \">\r\n            <td ></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{t('total')}</td>\r\n            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{total}</td>\r\n            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totalduepending}</td>\r\n            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totalpendingweek.toFixed(2)}</td>\r\n            <td ></td>\r\n          </tr> : null\r\n        }\r\n\r\n      </Table>\r\n      <nav>\r\n\r\n        <Pagination>\r\n          <Pagination.Prev >\r\n            <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n          </Pagination.Prev>\r\n          {\r\n            numbers.map((n, i) => (\r\n              <Pagination.Item>\r\n                <a href=\"#\" className='page-link'\r\n                  onClick={() => changeCPage(n)}>{n}</a>\r\n              </Pagination.Item>\r\n            ))\r\n          }\r\n          <Pagination.Next>\r\n            <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n          </Pagination.Next>\r\n        </Pagination>\r\n      </nav>\r\n\r\n\r\n\r\n    </Fragment>\r\n\r\n  )\r\n\r\n}\r\nexport default ListLineChecking\r\n","import React, { Fragment, useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table, Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { dateFormatdd } from \"../FunctionsGlobal/StartDateFn\"\r\n\r\nvar first = [];\r\n\r\n\r\nconst PreviousWeekList = ({ pendingLoans, date, company }) => {\r\n    var totaldue = 0;\r\n    var totalcredit = 0;\r\n    const { t, i18n } = useTranslation();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const recordsPerPage = 35;\r\n    const lastIndex = currentPage * recordsPerPage;\r\n    const firstIndex = lastIndex - recordsPerPage;\r\n    const records = pendingLoans.slice(firstIndex, lastIndex);\r\n    const nPage = Math.ceil(Object.keys(pendingLoans).length / recordsPerPage);\r\n    const numbers = [...Array(nPage + 1).keys()].slice(1);\r\n    var serialno = 0;\r\n    first = records.length > 0 ? pendingLoans[0] : \"\";\r\n    serialno = (currentPage - 1) * recordsPerPage;\r\n    var pagetotaldue = 0;\r\n    var pagetotalcredit = 0;\r\n    function prevPage() {\r\n        if (currentPage !== firstIndex) {\r\n            setCurrentPage(currentPage - 1)\r\n        }\r\n\r\n    }\r\n    function nextPage() {\r\n        if (currentPage !== lastIndex) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n\r\n    }\r\n    function changeCPage(id) {\r\n        setCurrentPage(id)\r\n    }\r\n    if (currentPage === nPage) {\r\n        totaldue = pendingLoans.reduce((previous, current) => {\r\n            return (previous + current.dueamount)\r\n        },0);\r\n        totalcredit = pendingLoans.reduce((previous, current) => {\r\n            return (previous + current.collectedamount)\r\n        },0);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='col-sm-6 fixed mt-5'>\r\n                <h4>{(company)}</h4>\r\n            </div>\r\n            <div className='col-sm-6 fixed mt-5'><h4>{t('previousweekdetails')}</h4></div>\r\n            <div className='col-sm-2 fixed'>{t('line') + \" : \" + (pendingLoans.length > 0 ? first.lineno : \"\")}</div>\r\n            <div className='col-sm-2 fixed'>{t(\"bookno\") + \" : \" + (pendingLoans.length > 0 ? first.bookno : \"\")}</div>\r\n            <div className='col-sm-2 fixed'>{t(\"date\") + \" : \" + dateFormatdd(date)}</div>\r\n\r\n            <Table className='table text-center table-bordered border-dark'  >\r\n                <thead>\r\n                    <tr>\r\n                        <th style={{ fontSize: \"12px\" }}>\r\n                            {t('no')}\r\n                        </th>\r\n                        <th style={{ fontSize: \"12px\" }}>\r\n                            {t('startdate')}\r\n                        </th >\r\n                        <th style={{ fontSize: \"12px\" }}>\r\n                            {t('loanno')}\r\n                        </th>\r\n                        <th style={{ fontSize: \"12px\" }}>\r\n                            {t('customer')}\r\n                        </th>\r\n                        <th style={{ fontSize: \"12px\" }}>\r\n                            {t('due')}\r\n                        </th>\r\n                        <th style={{ fontSize: \"12px\" }}>\r\n                            {t('dueno')}\r\n                        </th>\r\n                        <th style={{ fontSize: \"12px\" }}>\r\n                            {t('totalcredit')}\r\n                        </th>\r\n                        <th style={{ fontSize: \"12px\" }}>{t('debitcredit')}</th>\r\n                        <th style={{ fontSize: \"12px\" }}>{t('city')}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        records && records.length > 0\r\n                            ?\r\n                            (records.map((customer, i) => {\r\n                                serialno = serialno + 1;\r\n                                pagetotaldue = pagetotaldue + customer.dueamount;\r\n                                pagetotalcredit = pagetotalcredit + customer.collectedamount;\r\n\r\n                                return (\r\n                                    <tr className='previousweek'>\r\n                                        <td style={{ fontSize: \"12px\" }}>{serialno}</td>\r\n                                        <td style={{ fontSize: \"12px\" }}>{dateFormatdd(customer.startdate)}</td>\r\n                                        <td style={{ fontSize: \"12px\" }}>{customer.loannumber}</td>\r\n                                        <td style={{ fontSize: \"12px\" }}>{customer.customer}</td>\r\n                                        <td style={{ fontSize: \"12px\" }}>{customer.dueamount}</td>\r\n                                        <td style={{ fontSize: \"12px\" }}>{customer.weekno}</td>\r\n                                        <td style={{ fontSize: \"12px\" }}>{customer.collectedamount}</td>\r\n                                        <td style={{ fontSize: \"12px\" }}>{customer.collectedamount}</td>\r\n                                        <td style={{ fontSize: \"12px\" }}>{customer.city}</td>\r\n                                    </tr>\r\n\r\n                                )\r\n                            })\r\n                            )\r\n                            :\r\n                            t('tabledata')\r\n                    }\r\n                    <tr>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td className='fw-bold' style={{ fontSize: \"12px\" }}>{t('pagetotal')}</td>\r\n                        <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotaldue}</td>\r\n                        <td></td>\r\n                        <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotalcredit}</td>\r\n                        <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotalcredit}</td>\r\n                        <td></td>\r\n                    </tr>\r\n                </tbody>\r\n                    {\r\n                        currentPage===nPage?<tr className=\"rounded bg-white \">\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td></td>\r\n                        <td className='fw-bold' style={{ fontSize: \"12px\" }}>{t('total')}</td>\r\n                        <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totaldue}</td>\r\n                        <td></td>\r\n                        <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totalcredit}</td>\r\n                        <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totalcredit}</td>\r\n                        <td></td>\r\n                    </tr>:null\r\n                    }\r\n            </Table>\r\n            <nav>\r\n\r\n                <Pagination>\r\n                    <Pagination.Prev >\r\n                        <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n                    </Pagination.Prev>\r\n                    {\r\n                        numbers.map((n, i) => (\r\n                            <Pagination.Item>\r\n                                <a href=\"#\" className='page-link'\r\n                                    onClick={() => changeCPage(n)}>{n}</a>\r\n                            </Pagination.Item>\r\n                        ))\r\n                    }\r\n                    <Pagination.Next>\r\n                        <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n                    </Pagination.Next>\r\n                </Pagination>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default PreviousWeekList\r\n","import React, { Fragment, useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table, Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { dateFormatdd } from \"../FunctionsGlobal/StartDateFn\"\r\n\r\nvar first = [];\r\n\r\n\r\nconst NewAccountDetails = ({ pendingLoans, datefrom,dateto }) => {\r\n    \r\n    const { t, i18n } = useTranslation();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const recordsPerPage = 35;\r\n    const lastIndex = currentPage * recordsPerPage;\r\n    const firstIndex = lastIndex - recordsPerPage;\r\n    const records = pendingLoans.slice(firstIndex, lastIndex);\r\n    const nPage = Math.ceil(Object.keys(pendingLoans).length / recordsPerPage);\r\n    const numbers = [...Array(nPage + 1).keys()].slice(1);\r\n    var serialno = 0;\r\n    first = records.length > 0 ? pendingLoans[0] : \"\";\r\n    serialno = (currentPage - 1) * recordsPerPage;\r\n    \r\n    function prevPage() {\r\n        if (currentPage !== firstIndex) {\r\n            setCurrentPage(currentPage - 1)\r\n        }\r\n\r\n    }\r\n    function nextPage() {\r\n        if (currentPage !== lastIndex) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n\r\n    }\r\n    function changeCPage(id) {\r\n        setCurrentPage(id)\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className='col-sm-12 fixed text-center mt-5'><h3>{t('newaccountaddress')}</h3></div>\r\n            <div className='col-sm-4 fixed'>{t('line') + \" : \" + (pendingLoans.length > 0 ? first.lineno : \"\")}</div>\r\n            <div className='col-sm-4 fixed'>{t(\"lineman\") + \" : \" + (pendingLoans.length > 0 ? first.linemanname : \"\")}</div>\r\n            <div className='col-sm-4 fixed fw-bold'>{t(\"date\") + \" : \" + dateFormatdd(datefrom)+\" - \"+dateFormatdd(dateto)}</div>\r\n            <div >\r\n                <Table className='table text-center fs-6 table-bordered border-dark'  >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('no')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('loanno')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('customer')}\r\n                            </th>\r\n                            <th colSpan={2} style={{ fontSize: \"12px\" }}>\r\n                                {t('fathername')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('address')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('phoneno')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('city')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('givenamount')}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            records && records.length > 0\r\n                                ?\r\n                                (records.map((customer, i) => {\r\n                                    serialno = serialno + 1;\r\n                                    return (\r\n                                        <tr className='newaccountaddress'>\r\n                                            <td style={{ fontSize: \"12px\" }}>{serialno}</td>\r\n                                            <td className=\"fw-bold\" style={{ fontSize: \"12px\" }}>{customer.loannumber}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.customer}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{Number(customer.relationtype)=== 0 ? t('fathershort') : t('husbandshort')}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.fathername}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.address}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.mobileno}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.city}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.totalamount}</td>\r\n                                        </tr>\r\n\r\n                                    )\r\n                                })\r\n                                )\r\n                                :\r\n                                t('tabledata')\r\n                        }\r\n                       \r\n                    </tbody>\r\n\r\n                </Table>\r\n                <nav>\r\n\r\n                    <Pagination>\r\n                        <Pagination.Prev >\r\n                            <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n                        </Pagination.Prev>\r\n                        {\r\n                            numbers.map((n, i) => (\r\n                                <Pagination.Item>\r\n                                    <a href=\"#\" className='page-link'\r\n                                        onClick={() => changeCPage(n)}>{n}</a>\r\n                                </Pagination.Item>\r\n                            ))\r\n                        }\r\n                        <Pagination.Next>\r\n                            <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n                        </Pagination.Next>\r\n                    </Pagination>\r\n                </nav>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default NewAccountDetails\r\n","import React, { Fragment, useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table, Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { dateFormatdd } from \"../FunctionsGlobal/StartDateFn\"\r\n\r\nvar first = [];\r\n\r\n\r\nconst WeekEndAccountDetails = ({ pendingLoans, datefrom, dateto }) => {\r\n\r\n    const { t, i18n } = useTranslation();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const recordsPerPage = 35;\r\n    const lastIndex = currentPage * recordsPerPage;\r\n    const firstIndex = lastIndex - recordsPerPage;\r\n    const records = pendingLoans.slice(firstIndex, lastIndex);\r\n    const nPage = Math.ceil(Object.keys(pendingLoans).length / recordsPerPage);\r\n    const numbers = [...Array(nPage + 1).keys()].slice(1);\r\n    var serialno = 0;\r\n    var percentamount = 0;\r\n    var totaldebit = 0;\r\n    var totalcredit = 0;\r\n    var totalincentive = 0;\r\n\r\n    var pagetotaldebit = 0;\r\n    var pagetotalcredit = 0;\r\n    var pagetotalincentive = 0;\r\n    first = records.length > 0 ? pendingLoans[0] : \"\";\r\n    serialno = (currentPage - 1) * recordsPerPage;\r\n\r\n    function prevPage() {\r\n        if (currentPage !== firstIndex) {\r\n            setCurrentPage(currentPage - 1)\r\n        }\r\n\r\n    }\r\n    function nextPage() {\r\n        if (currentPage !== lastIndex) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n\r\n    }\r\n    function changeCPage(id) {\r\n        setCurrentPage(id)\r\n    }\r\n    if (currentPage === nPage) {\r\n        totalcredit = pendingLoans.reduce((previous, current) => {\r\n            return previous + current.collected\r\n        }, 0);\r\n        totaldebit = pendingLoans.reduce((previous, current) => {\r\n            return previous + current.totalamount\r\n        }, 0);\r\n        totalincentive = pendingLoans.reduce((previous, current) => {\r\n            return previous + Number(((current.collected * current.incentivepercentage) / 100).toFixed(0))\r\n        }, 0);\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className='col-sm-12 fixed text-center mt-5'><h3>{t('weekendaccounts')}</h3></div>\r\n            <div className='col-sm-4 fixed'>{t('line') + \" : \" + (pendingLoans.length > 0 ? first.lineno : \"\")}</div>\r\n            <div className='col-sm-4 fixed'>{t(\"lineman\") + \" : \" + (pendingLoans.length > 0 ? first.linemanname : \"\")}</div>\r\n            <div className='col-sm-4 fixed fw-bold'>{t(\"date\") + \" : \" + dateFormatdd(datefrom) + \" - \" + dateFormatdd(dateto)}</div>\r\n            <div >\r\n                <Table className='table text-center fs-6 table-bordered border-dark'  >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('no')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('loanno')}\r\n                            </th>\r\n                            <th>{t('doc')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('customer')}\r\n                            </th>\r\n\r\n                            <th style={{ fontSize: \"12px\" }}>{t('city')}</th>\r\n                            <th style={{ fontSize: \"12px\", width: \"60px\" }} >\r\n                                {t('bookno')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('enddate')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('givenamount')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('credit')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>%</th>\r\n                            <th style={{ fontSize: \"12px\" }}>%</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('lineincentive')}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            records && records.length > 0\r\n                                ?\r\n                                (records.map((customer, i) => {\r\n                                    serialno = serialno + 1;\r\n                                    percentamount = ((customer.collected * customer.incentivepercentage) / 100).toFixed(0);\r\n                                    pagetotalcredit = pagetotalcredit + customer.collected\r\n                                    pagetotaldebit = pagetotaldebit + customer.totalamount\r\n                                    pagetotalincentive = pagetotalincentive + Number(percentamount)\r\n                                    return (\r\n                                        <tr>\r\n                                            <td style={{ fontSize: \"12px\" }}>{serialno}</td>\r\n                                            <td className=\"fw-bold\" style={{ fontSize: \"12px\" }}>{customer.loannumber}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.document}</td>\r\n\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.customer}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.city}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.bookno}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{dateFormatdd(customer.lastreceipt)}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.totalamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.collected}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{Number(customer.incentivepercentage) === 1 ? customer.incentivepercentage : 0.0}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{Number(customer.incentivepercentage) < 1 ? customer.incentivepercentage : 0}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{percentamount}</td>\r\n                                        </tr>\r\n\r\n                                    )\r\n                                })\r\n                                )\r\n                                :\r\n                                t('tabledata')\r\n                        }\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{t('pagetotal')}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotaldebit}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotalcredit}</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotalincentive}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    {\r\n                        currentPage === nPage ? <tr className=\"rounded bg-white \">\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{t('total')}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totaldebit}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totalcredit}</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totalincentive}</td>\r\n                        </tr> : null\r\n                    }\r\n                </Table>\r\n                <nav>\r\n\r\n                    <Pagination>\r\n                        <Pagination.Prev >\r\n                            <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n                        </Pagination.Prev>\r\n                        {\r\n                            numbers.map((n, i) => (\r\n                                <Pagination.Item>\r\n                                    <a href=\"#\" className='page-link'\r\n                                        onClick={() => changeCPage(n)}>{n}</a>\r\n                                </Pagination.Item>\r\n                            ))\r\n                        }\r\n                        <Pagination.Next>\r\n                            <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n                        </Pagination.Next>\r\n                    </Pagination>\r\n                </nav>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default WeekEndAccountDetails\r\n","import React, { Fragment, useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table, Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { dateFormatdd } from \"../FunctionsGlobal/StartDateFn\"\r\n\r\nvar first = [];\r\n\r\n\r\nconst CurrentWeekGivenAmount = ({ pendingLoans, datefrom, dateto }) => {\r\n\r\n    const { t, i18n } = useTranslation();\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const recordsPerPage = 35;\r\n    const lastIndex = currentPage * recordsPerPage;\r\n    const firstIndex = lastIndex - recordsPerPage;\r\n    const records = pendingLoans.slice(firstIndex, lastIndex);\r\n    const nPage = Math.ceil(Object.keys(pendingLoans).length / recordsPerPage);\r\n    const numbers = [...Array(nPage + 1).keys()].slice(1);\r\n    var serialno = 0;\r\n    var pagetotalgiven = 0;\r\n    var pagetotalamount = 0;\r\n    var pagetotaldocument = 0;\r\n    var pagetotalinterest = 0;\r\n    var totalgiven = 0;\r\n    var totalamount = 0;\r\n    var totaldocument = 0;\r\n    var totalinterest = 0;\r\n    first = records.length > 0 ? pendingLoans[0] : \"\";\r\n    serialno = (currentPage - 1) * recordsPerPage;\r\n\r\n    function prevPage() {\r\n        if (currentPage !== firstIndex) {\r\n            setCurrentPage(currentPage - 1)\r\n        }\r\n\r\n    }\r\n    function nextPage() {\r\n        if (currentPage !== lastIndex) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n\r\n    }\r\n    function changeCPage(id) {\r\n        setCurrentPage(id)\r\n    }\r\n    if (currentPage === nPage) {\r\n        totalgiven = pendingLoans.reduce((previous, current) => {\r\n            return previous + current.givenamount;\r\n        }, 0);\r\n        totaldocument = pendingLoans.reduce((previous, current) => {\r\n            return previous + current.documentamount;\r\n        }, 0);\r\n        totalinterest = pendingLoans.reduce((previous, current) => {\r\n            return previous + current.interestamount;\r\n        }, 0);\r\n        totalamount = pendingLoans.reduce((previous, current) => {\r\n            return previous + current.totalamount;\r\n        }, 0);\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className='col-sm-12 fixed text-center mt-5'><h3>{t('currentweekamountgiven')}</h3></div>\r\n            <div className='col-sm-4 fixed'>{t('line') + \" : \" + (pendingLoans.length > 0 ? first.lineno : \"\")}</div>\r\n            <div className='col-sm-4 fixed'>{t(\"lineman\") + \" : \" + (pendingLoans.length > 0 ? first.linemanname : \"\")}</div>\r\n            <div className='col-sm-4 fixed fw-bold'>{t(\"date\") + \" : \" + dateFormatdd(datefrom) + \" - \" + dateFormatdd(dateto)}</div>\r\n            <div >\r\n                <Table className='table text-center fs-6 table-bordered border-dark'  >\r\n                    <thead>\r\n                        <tr>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('no')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('givendate')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('loanno')}\r\n                            </th>\r\n                            <th>{t('doc')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('customer')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('city')}</th>\r\n                            <th style={{ fontSize: \"12px\", width: \"60px\" }} className='w-5'>\r\n                                {t('bookno')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>\r\n                                {t('enddate')}\r\n                            </th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('givenamount')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('doc')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('interest')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('total')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('week')}</th>\r\n                            <th style={{ fontSize: \"12px\" }}>{t('pay')}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            records && records.length > 0\r\n                                ?\r\n                                (records.map((customer, i) => {\r\n                                    serialno = serialno + 1;\r\n                                    pagetotalgiven = pagetotalgiven + customer.givenamount;\r\n                                    pagetotaldocument = pagetotaldocument + customer.documentamount;\r\n                                    pagetotalinterest = pagetotalinterest + customer.interestamount;\r\n                                    pagetotalamount = pagetotalamount + customer.totalamount;\r\n                                    return (\r\n                                        <tr>\r\n                                            <td style={{ fontSize: \"12px\" }}>{serialno}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{dateFormatdd(customer.givendate)}</td>\r\n                                            <td className=\"fw-bold\" style={{ fontSize: \"12px\" }}>{customer.loannumber}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.document}</td>\r\n\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.customer}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.city}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.bookno}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{dateFormatdd(customer.finisheddate)}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.givenamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.documentamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.interestamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.totalamount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.weekcount}</td>\r\n                                            <td style={{ fontSize: \"12px\" }}>{customer.dueamount}</td>\r\n                                        </tr>\r\n\r\n                                    )\r\n                                })\r\n                                )\r\n                                :\r\n                                t('tabledata')\r\n                        }\r\n                        <tr>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{t('pagetotal')}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotalgiven}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotaldocument}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotalinterest}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{pagetotalamount}</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr>\r\n                    </tbody>\r\n                    {\r\n                        currentPage === nPage ? <tr className=\"rounded bg-white \">\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{t('total')}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totalgiven}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totaldocument}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totalinterest}</td>\r\n                            <td className='fw-bold' style={{ fontSize: \"12px\" }}>{totalamount}</td>\r\n                            <td></td>\r\n                            <td></td>\r\n                        </tr> : null\r\n                    }\r\n                </Table>\r\n                <nav>\r\n\r\n                    <Pagination>\r\n                        <Pagination.Prev >\r\n                            <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n                        </Pagination.Prev>\r\n                        {\r\n                            numbers.map((n, i) => (\r\n                                <Pagination.Item>\r\n                                    <a href=\"#\" className='page-link'\r\n                                        onClick={() => changeCPage(n)}>{n}</a>\r\n                                </Pagination.Item>\r\n                            ))\r\n                        }\r\n                        <Pagination.Next>\r\n                            <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n                        </Pagination.Next>\r\n                    </Pagination>\r\n                </nav>\r\n\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\nexport default CurrentWeekGivenAmount\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap';\r\nimport { baseURL } from \"../utils/constant\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PlaceHolder from \"../components/spinner/placeholder\";\r\nimport { startOfWeek } from '../FunctionsGlobal/StartDateFn';\r\nimport ListLineChecking from \"./ListLineChecking\";\r\nimport PreviousWeekList from \"./PreviousWeekList\"\r\nimport ReactToPrint from 'react-to-print';\r\nimport NewAccountDetails from \"./NewAccountDetails\";\r\nimport WeekEndAccountDetails from \"./WeekEndAccountDetails\";\r\nimport CurrentWeekGivenAmount from \"./CurrentWeekGivenAmount\";\r\nvar linecheckingreportname = \"checkingdetails\";\r\nvar passingargument = \"\";\r\nfunction LinecheckingReport() {\r\n    const [cityNames, setCityNames] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [checkingDetailsLine, setCheckingDetailsLine] = useState([]);\r\n    const[checkingData,setCheckingData]=useState([]);\r\n    const [company, setCompany] = useState([]);\r\n    const [linemannames, setLinemanNames] = useState([]);\r\n    const reportType = useRef(0);\r\n    const { t, i18n } = useTranslation();\r\n    const [city, setCity] = useState(\"\");\r\n    const startDateRef = useRef(startOfWeek());\r\n    const endDateRef = useRef(startOfWeek());\r\n    const linemanoptionRef = useRef(\"\");\r\n    const [show, setShow] = useState(false);\r\n    \r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseURL}/company/get`).then((res) => {\r\n            setCompany(res.data);\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error=\", error);\r\n            setErrorMessage(t('errorcompany'));\r\n            setIsLoading(false);\r\n        })\r\n    }, [])\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseURL}/linemancreate/get`).then((res) => {\r\n            setLinemanNames(res.data);\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error=\", error);\r\n            setErrorMessage(t('errormessagelineman'));\r\n            setIsLoading(false)\r\n        })\r\n    }, [])\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseURL}/citycreate/get`).then((res) => {\r\n            setCityNames(res.data);\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error=\", error);\r\n            setErrorMessage(t('errormessagecity'));\r\n            setIsLoading(false);\r\n        })\r\n    }, [])\r\n    const processList = () => {\r\n        setIsLoading(true);\r\n        //alert(linemanoptionRef.current.value);\r\n        if (Number(reportType.current.value) === 0) {\r\n\r\n            linecheckingreportname = \"checkingdetails\";\r\n            passingargument = city;\r\n        }\r\n        else if (Number(reportType.current.value) === 1) {\r\n            setCheckingData([]);\r\n            linecheckingreportname = \"previousweekdetails\";\r\n            passingargument = city;\r\n            //alert(passingargument);\r\n        }\r\n        else if (Number(reportType.current.value) === 2) {\r\n            setCheckingData([]);\r\n            linecheckingreportname = \"newaccountdetails\";\r\n            passingargument = linemanoptionRef.current.value;\r\n            //alert(passingargument);\r\n        }\r\n        else if (Number(reportType.current.value) === 4) {\r\n            setCheckingData([]);\r\n            linecheckingreportname = \"weekendaccountdetails\";\r\n            passingargument = linemanoptionRef.current.value;\r\n        }\r\n        else if (Number(reportType.current.value) === 3) {\r\n            setCheckingData([]);\r\n            linecheckingreportname = \"currentweekgivenamount\";\r\n            passingargument = linemanoptionRef.current.value;\r\n        }\r\n        \r\n        return (\r\n            axios.get(`${baseURL}/loan/${linecheckingreportname}`, { params: { city_id: passingargument.toString(), fromdate: startDateRef.current.value, todate: endDateRef.current.value} }).then((res) => {\r\n                Number(reportType.current.value) === 0?setCheckingData(res.data):setCheckingDetailsLine(res.data)\r\n                \r\n                console.log(res.data);\r\n                setIsLoading(false);\r\n\r\n\r\n            })\r\n                .catch(error => {\r\n                    console.log(\"error=\", error);\r\n                    setErrorMessage(t('erroressagelinechecking'));\r\n                    setIsLoading(false);\r\n                })\r\n        )\r\n\r\n\r\n    }\r\n    const componentRef = useRef();\r\n    const handlePrint = () => {\r\n        window.print()\r\n    }\r\n    const renderLineCheckingList = (\r\n        <Row ref={componentRef}>\r\n            <ListLineChecking pendingLoans={checkingData} date={endDateRef.current.value}\r\n                company={company.length > 0 ? company[0].companyname : \"\"} />\r\n\r\n        </Row>\r\n\r\n    )\r\n    const renderpreviousweekList = (\r\n        <Row ref={componentRef}>\r\n            <PreviousWeekList pendingLoans={checkingDetailsLine} date={endDateRef.current.value}\r\n                company={company.length > 0 ? company[0].companyname : \"\"} />\r\n        </Row>\r\n\r\n    )\r\n    const rendernewaccountList = (\r\n        <Row ref={componentRef}>\r\n            <NewAccountDetails pendingLoans={checkingDetailsLine} datefrom={startDateRef.current.value} dateto={endDateRef.current.value} />\r\n        </Row>\r\n    )\r\n    const renderweekendaccountList = (\r\n        <Row ref={componentRef}>\r\n            <WeekEndAccountDetails pendingLoans={checkingDetailsLine} datefrom={startDateRef.current.value} dateto={endDateRef.current.value} />\r\n        </Row>\r\n    )\r\n    const rendercurrentweekgivenaccountList = (\r\n        <Row ref={componentRef}>\r\n            <CurrentWeekGivenAmount pendingLoans={checkingDetailsLine} datefrom={startDateRef.current.value} dateto={endDateRef.current.value} />\r\n        </Row>\r\n    )\r\n    const linemanshow = (\r\n        <Col xs={12} md={5} className=\"rounder bg-white \" >\r\n            <Form.Group className=\"mb-3\" name=\"linenumber\" border=\"primary\" >\r\n                <Form.Label>{t('lineman')}</Form.Label>\r\n                <Form.Select aria-label=\"Default select example\" value={city}\r\n                    onChange={(e) => setCity(e.target.value)} ref={linemanoptionRef}>\r\n                    <option key={\"\"} value={\"\"} >{t('linemanplaceholder')}</option>\r\n\r\n                    {\r\n                        linemannames.map((linemanname) => (\r\n                            <option key={linemanname._id} value={linemanname._id}\r\n                                selected={linemanname._id} >{linemanname.linemanname}</option>\r\n                        ))}\r\n\r\n                </Form.Select>\r\n            </Form.Group>\r\n        </Col>\r\n\r\n    )\r\n    const citynameshow = (\r\n        <Col xs={12} md={4} className=\"rounder bg-white\">\r\n            <Form.Group className=\"mb-3\" name=\"linenumber\" border=\"primary\" >\r\n                <Form.Label>{t('city')}</Form.Label>\r\n                <Form.Select aria-label=\"Default select example\" value={city}\r\n                    onChange={(e) => setCity(e.target.value)} required>\r\n                    <option key={\"\"} value={\"\"} >{t('cityplaceholder')}</option>\r\n\r\n                    {\r\n                        cityNames.map((cities) => (\r\n                            <option key={cities._id} value={cities._id}\r\n                                selected={cities._id} >{cities.cityname}</option>\r\n                        ))}\r\n\r\n                </Form.Select>\r\n            </Form.Group>\r\n        </Col>\r\n    )\r\n    const handleClick = () => {\r\n\r\n        if (Number(reportType.current.value) === 0 || Number(reportType.current.value) === 1) {\r\n            setShow(false);\r\n        }\r\n        else {\r\n            setShow(true)\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Form>\r\n                    <Row >\r\n                        {show == true ? linemanshow : citynameshow}\r\n                        \r\n                        <Col md={3} className=\"rounder bg-white\">\r\n                            <Form.Group className=\"mb-3\" name=\"cityname\" border=\"primary\" >\r\n                                <Form.Label>{t('report')}</Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\"\r\n                                    ref={reportType} defaultValue={0} onClick={handleClick} >\r\n                                    <option value={0} >{t('linechecking')}</option>\r\n                                    <option value={1}>{t('previousweekreport')}</option>\r\n                                    <option value={2}>{t('newaccountaddress')}</option>\r\n                                    <option value={3}>{t('currentweekamountgiven')}</option>\r\n                                    <option value={4}>{t('weekendaccounts')}</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={2} className=\"rounded bg-white\">\r\n                            <Form.Group>\r\n                                <Form.Label>{t('startdate')}</Form.Label>\r\n                                <Form.Control type=\"date\" ref={startDateRef} defaultValue={startOfWeek()} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={2} className=\"rounder bg-white\">\r\n                            <Form.Group>\r\n                                <Form.Label>{t('enddate')}</Form.Label>\r\n                                <Form.Control type=\"date\" ref={endDateRef} defaultValue={startOfWeek()} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"rounded bg-white text-center\">\r\n                        <div className=\"col-md-6 mb-4 \" >\r\n                            <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"text-center\" onClick={processList}>\r\n                                {t('processbuttonlabel')}\r\n                            </Button>{' '}\r\n                        </div>\r\n                        <div className=\"col-md-6 mb-4 \">\r\n                            <ReactToPrint trigger={() => (\r\n                                <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"text-center\" onClick={() => handlePrint}>\r\n                                    {t('printbutton')}\r\n                                </Button>\r\n\r\n                            )}\r\n                                content={() => componentRef.current} />\r\n                        </div>\r\n                    </Row>\r\n\r\n                    {isLoading ? <PlaceHolder /> : Number(reportType.current.value) === 0 ?\r\n                        renderLineCheckingList : Number(reportType.current.value) === 1 ?\r\n                            renderpreviousweekList : Number(reportType.current.value) === 2 ?\r\n                                rendernewaccountList : Number(reportType.current.value) === 3 ?\r\n                                    rendercurrentweekgivenaccountList : renderweekendaccountList}\r\n                    {errorMessage && <div className=\"error\">{errorMessage}</div>}\r\n\r\n\r\n                </Form>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default LinecheckingReport;"],"names":["first","_ref","pendingLoans","date","company","_useTranslation","useTranslation","t","_useState","i18n","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","lastIndex","firstIndex","records","slice","nPage","Math","ceil","Object","keys","length","numbers","_toConsumableArray","Array","serialno","pagetotal","pendingtotal","pending","duepending","pendingweek","pendingweektotal","total","totalduepending","totalpendingweek","reduce","previousValue","currentValue","totalamount","collectedtotal","previous","current","collectedamountdate","receiptpendingweek","finisheddatepending","dueamount","previousval","currentval","_jsxs","Fragment","children","_jsx","className","city","linemanname","lineno","bookno","dateFormatdd","Table","style","fontSize","width","colSpan","map","customer","i","receiptpendingweekafter","parseFloat","toFixed","startdate","loannumber","relationtype","fathername","address","mobileno","finisheddate","backgroundColor","color","Pagination","Prev","href","onClick","n","Item","Next","totaldue","totalcredit","pagetotaldue","pagetotalcredit","collectedamount","weekno","datefrom","dateto","Number","percentamount","totaldebit","totalincentive","pagetotaldebit","pagetotalincentive","collected","incentivepercentage","document","lastreceipt","pagetotalgiven","pagetotalamount","pagetotaldocument","pagetotalinterest","totalgiven","totaldocument","totalinterest","givenamount","documentamount","interestamount","givendate","weekcount","linecheckingreportname","passingargument","cityNames","setCityNames","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","checkingDetailsLine","setCheckingDetailsLine","_useState9","_useState10","checkingData","setCheckingData","_useState11","_useState12","setCompany","_useState13","_useState14","linemannames","setLinemanNames","reportType","useRef","_useState15","_useState16","setCity","startDateRef","startOfWeek","endDateRef","linemanoptionRef","_useState17","_useState18","show","setShow","useEffect","axios","get","concat","baseURL","then","res","data","catch","error","console","log","componentRef","handlePrint","window","print","renderLineCheckingList","Row","ref","ListLineChecking","value","companyname","renderpreviousweekList","PreviousWeekList","rendernewaccountList","NewAccountDetails","renderweekendaccountList","WeekEndAccountDetails","rendercurrentweekgivenaccountList","CurrentWeekGivenAmount","linemanshow","Col","xs","md","Form","Group","name","border","Label","Select","onChange","e","target","_id","selected","citynameshow","required","cities","cityname","Container","defaultValue","Control","type","Button","variant","size","params","city_id","toString","fromdate","todate","ReactToPrint","trigger","content","PlaceHolder"],"sourceRoot":""}