{"version":3,"file":"static/js/917.c6e4dab9.chunk.js","mappings":"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","sources":["components/List.js","../node_modules/react-bootstrap/esm/ButtonGroup.js","../node_modules/react-bootstrap/esm/ToggleButton.js","AddCustomer.js","utils/constant.js"],"sourcesContent":["import React, { Fragment,useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Table,Pagination } from \"react-bootstrap\";\r\nimport {BiEditAlt} from \"react-icons/bi\"\r\nimport {BsTrash} from \"react-icons/bs\"\r\nimport axios from 'axios'\r\nimport {baseURL} from \"../utils/constant\";\r\nimport {Link,useNavigate} from 'react-router-dom';\r\n\r\n\r\nconst myStyle = {\r\n  columncount :\"2\",\r\n  columngap :\"25px\"\r\n};\r\n/*const List = ({id,customer,customermobile,setUpdateUI,updateMode}) => {*/\r\n  \r\nconst List=({customers,setUpdateUI,updateMode})=>{\r\n\r\nconst[currentPage,setCurrentPage]=useState(1);\r\nconst recordsPerPage=5;\r\nconst lastIndex=currentPage*recordsPerPage;\r\nconst firstIndex=lastIndex-recordsPerPage;\r\nconst records=customers.slice(firstIndex,lastIndex);\r\nconst nPage=Math.ceil(Object.keys(customers).length/recordsPerPage);\r\nconst numbers=[...Array(nPage+1).keys()].slice(1);\r\nvar serialno=0;\r\nserialno=(currentPage-1) * recordsPerPage;\r\n  const removeCustomer=(id)=>{\r\n    axios.delete(`${baseURL}/delete/${id}`).then((res)=>{\r\n      setUpdateUI((preveState)=>!preveState)\r\n    })\r\n  }\r\n  function prevPage(){\r\n    if(currentPage!==firstIndex)\r\n    {\r\n      setCurrentPage(currentPage-1)\r\n    }\r\n    \r\n  }\r\n  function nextPage(){\r\n    if(currentPage!==lastIndex){\r\n      setCurrentPage(currentPage+1);\r\n    }\r\n\r\n  }\r\n  function changeCPage(id){\r\n    setCurrentPage(id)\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div style={{margin:\"5rem\"}}>\r\n        <Table striped bordered hover   >\r\n          <thead>\r\n            <tr>\r\n              <th>\r\n                எண்\r\n              </th>\r\n              <th>\r\n                பெயர்\r\n              </th>\r\n              <th>\r\n                போன்\r\n              </th>\r\n              <th>\r\n                ஊர்\r\n              </th>\r\n              <th colSpan={2}>\r\n                தகப்பனார்\r\n              </th>\r\n              <th>\r\n                முகவரி\r\n              </th>\r\n              <th>\r\n                வேலை\r\n              </th>\r\n              <th>\r\n                செயல்\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              records && records.length>0\r\n              ?\r\n              (records.map((customer,i)=>{\r\n                serialno=serialno+1;\r\n                return(\r\n                  <tr>\r\n                    <td>{serialno}</td>\r\n                    <td>{customer.customer}</td>\r\n                    <td>{customer.mobileno}</td>\r\n                    <td>{customer.cityname}</td>\r\n                    <td>{customer.relationtype==0 ? \"F\" : \"H\"}</td>\r\n                    <td >{customer.fathername}</td>\r\n                    <td>{customer.address}</td>\r\n                    <td>{customer.work}</td>\r\n                    <td>\r\n                    <BiEditAlt  className='icons' onClick={()=>updateMode(customer._id,customer.customer,customer.mobileno,customer.city_id,customer.fathername,customer.address,customer.work,customer.relationtype)} />\r\n                    <BsTrash className='icons' onClick={()=>removeCustomer(customer._id)} />\r\n                    </td>\r\n                  </tr>\r\n                  \r\n                )\r\n              })\r\n              )\r\n              :\r\n              \"தரவு இல்லை\"\r\n            }\r\n          </tbody>\r\n        </Table>\r\n        <nav>\r\n        \r\n          <Pagination>\r\n            <Pagination.Prev >\r\n            <a href=\"#\" className='page-link' onClick={prevPage}>முன்</a>\r\n            </Pagination.Prev>\r\n            {\r\n            numbers.map((n,i)=>(\r\n              <Pagination.Item>\r\n                <a href=\"#\" className='page-link'\r\n            onClick={()=>changeCPage(n)}>{n}</a>\r\n              </Pagination.Item>\r\n            ))\r\n          }\r\n            <Pagination.Next>\r\n            <a href=\"#\" className='page-link' onClick={nextPage}>பின்</a>\r\n            </Pagination.Next>\r\n          </Pagination>\r\n        </nav>\r\n\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default List\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  vertical = false,\n  className,\n  role = 'group',\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...rest\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn-group');\n  let baseClass = prefix;\n  if (vertical) baseClass = `${prefix}-vertical`;\n  return /*#__PURE__*/_jsx(Component, {\n    ...rest,\n    ref: ref,\n    role: role,\n    className: classNames(className, baseClass, size && `${prefix}-${size}`)\n  });\n});\nButtonGroup.displayName = 'ButtonGroup';\nexport default ButtonGroup;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Button from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst noop = () => undefined;\nconst ToggleButton = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  name,\n  className,\n  checked,\n  type,\n  onChange,\n  value,\n  disabled,\n  id,\n  inputRef,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'btn-check');\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      className: bsPrefix,\n      name: name,\n      type: type,\n      value: value,\n      ref: inputRef,\n      autoComplete: \"off\",\n      checked: !!checked,\n      disabled: !!disabled,\n      onChange: onChange || noop,\n      id: id\n    }), /*#__PURE__*/_jsx(Button, {\n      ...props,\n      ref: ref,\n      className: classNames(className, disabled && 'disabled'),\n      type: undefined,\n      role: undefined,\n      as: \"label\",\n      htmlFor: id\n    })]\n  });\n});\nToggleButton.displayName = 'ToggleButton';\nexport default ToggleButton;","import React, { useEffect, useState,useRef } from \"react\";\r\nimport {Button,Container,Form,Row,Col} from 'react-bootstrap';\r\nimport List from \"./components/List\"\r\nimport axios from \"axios\"\r\nimport {baseURL} from \"./utils/constant\";\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\n\r\nfunction AddCustomer(){\r\n  const[input,setInput]=useState(\"\");\r\n  const[inputmobileno,setInputMobileno]=useState(\"\")\r\n  const[customers,setCustomer]=useState([]);\r\n  const[updateUI,setUpdateUI]=useState(false);\r\n  const[updateId,setUpdateId]=useState(null);\r\n  const [radioValue, setRadioValue] = useState(\"0\");\r\n  const [citynames,setCitynames]=useState([]);\r\n  const [validated, setValidated] = useState(false);\r\n  const [city,setCity]=useState(\"\");\r\n  const fathernameref=useRef(null);\r\n  const addressRef=useRef(null);\r\n  const workRef=useRef(null);\r\n    useEffect(()=>{\r\n    axios.get(`${baseURL}/citycreate/get`).then((res)=>{\r\n      setCitynames(res.data)\r\n    })\r\n    \r\n},[]);\r\n  useEffect(()=>{\r\n    axios.get(`${baseURL}/get/view`).then((res)=>{\r\n      setCustomer(res.data)\r\n    })\r\n  },[updateUI]);\r\n  /*useEffect(()=>{\r\n    axios.get(`${baseURL}/get`).then((res)=>{\r\n      setCustomer(res.data)\r\n    })\r\n  },[updateUI]);*/\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n    }\r\n    setValidated(true);\r\n\r\n    if(input !==\"\" && inputmobileno!=\"\" && city!==\"\" && fathernameref.current.value!==\"\"\r\n    && addressRef.current.value!==\"\" && workRef.current.value!==\"\")\r\n    {\r\n      addCustomer();\r\n    }\r\n    \r\n  };\r\n\r\n\r\n  const addCustomer=() =>{\r\n\r\n    axios.post(`${baseURL}/save`,{customer:input,mobileno:inputmobileno,cityid:city,fathername:fathernameref.current.value,\r\n                  address:addressRef.current.value,work:workRef.current.value,relationtype:Number(radioValue)}).then((res)=>{\r\n      //console.log(res.data)\r\n      setInput(\"\")\r\n      setInputMobileno(\"\");\r\n      setCity(\"\");\r\n      setRadioValue(\"0\")\r\n      fathernameref.current.value=\"\";\r\n      addressRef.current.value=\"\";\r\n      workRef.current.value=\"\";\r\n      setUpdateUI((prevState)=>!prevState)\r\n    })\r\n  }\r\n\r\n  const updateMode=(id,text,mobilenum,cityid,father,addr,wrk,relation)=>{\r\n    //console.log(mobilenum);\r\n    setInput(text);\r\n    setInputMobileno(mobilenum);\r\n    setCity(cityid);\r\n    setRadioValue(relation==1?\"1\":\"0\");\r\n    fathernameref.current.value=father;\r\n    addressRef.current.value=addr;\r\n    workRef.current.value=wrk;\r\n    setUpdateId(id);\r\n    \r\n  }\r\n\r\n  const updateCustomer=()=>{\r\n    axios.put(`${baseURL}/update/${updateId}`,{customer:input,mobileno:inputmobileno,cityid:city,fathername:fathernameref.current.value,\r\n      address:addressRef.current.value,work:workRef.current.value,relationtype:Number(radioValue)}).then((res)=>{\r\n      //console.log(res.data)\r\n      setUpdateUI((prevState)=>!prevState)\r\n      setInput(\"\");\r\n      setInputMobileno(\"\");\r\n      setCity(\"\");\r\n      setRadioValue(\"0\")\r\n      fathernameref.current.value=\"\";\r\n      addressRef.current.value=\"\";\r\n      workRef.current.value=\"\";\r\n      setUpdateId(null);\r\n      \r\n    })\r\n  }\r\n  const clearFields=()=>{\r\n      setInput(\"\");\r\n      setInputMobileno(\"\");\r\n      setCity(\"\");\r\n      setRadioValue(\"0\")\r\n      fathernameref.current.value=\"\";\r\n      addressRef.current.value=\"\";\r\n      workRef.current.value=\"\";\r\n      setUpdateId(null);\r\n  }\r\n  const radios = [\r\n    { name: 'F', value: '0' },\r\n    { name: 'H', value: '1' }\r\n  ];\r\n  \r\n    return(\r\n      \r\n      <Container >\r\n        <h2 className=\"text-center\">வாடிக்கையாளர் விபரம்</h2>\r\n        <Row className=\"justify-content-md-center mt-5 \">\r\n        <Form validated={validated}>\r\n          <Row >\r\n          <Col xs={12} md={4} className=\"rounded bg-white\">\r\n            <Form.Group className=\"mb-3\" name=\"customername\" border=\"primary\" >\r\n              <Form.Label>பெயர்</Form.Label>\r\n              <Form.Control  type=\"text\" placeholder=\"பெயர்\" required value={input} onChange={(e)=>setInput(e.target.value)} />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col xs={12} md={4} className=\"rounded bg-white\">\r\n            <Form.Group className=\"mb-3\" name=\"mobilenumber\" border=\"primary\" >\r\n              <Form.Label>போன்</Form.Label>\r\n              <Form.Control type=\"number\" placeholder=\"போன்\" required value={inputmobileno} \r\n              onChange={(e)=>setInputMobileno(e.target.value)} />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col xs={12} md={4} className=\"rounded bg-white\">\r\n            <Form.Group className=\"mb-3\" name=\"cityname\" border=\"primary\" >\r\n            <Form.Label>ஊர்</Form.Label>\r\n            <Form.Select aria-label=\"Default select example\"   value={city} onChange={(e)=>setCity(e.target.value)} required>\r\n              <option  key={city} value={\"\"} >மெனுவை தேர்ந்தெடுக்கவும்</option>\r\n\r\n              {\r\n              citynames.map((cityname) => (\r\n              <option key={cityname._id} value={cityname._id}  \r\n              selected={city===cityname._id} >{cityname.cityname}</option>\r\n            ))}\r\n              \r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Col>\r\n          </Row>\r\n          <Row>\r\n          <Col xs={12} md={4} className=\"rounded bg-white\">\r\n          <Form.Group className=\"mb-3\" name=\"fathername\" border=\"primary\" >\r\n          <ButtonGroup className=\"mb-2\">\r\n                  {radios.map((radio, idx) => (\r\n                    <ToggleButton\r\n                      key={idx}\r\n                      id={`radio-${idx}`}\r\n                      type=\"radio\"\r\n                      variant=\"outline-primary\"\r\n                      name=\"radio\"\r\n                      size=\"sm\"\r\n                      value={radio.value}\r\n                      checked={radioValue === radio.value}\r\n                      onChange={(e) => setRadioValue(e.currentTarget.value)}>\r\n                      {radio.name}\r\n                    </ToggleButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n                <Form.Control type=\"text\" placeholder=\"தகப்பனார் பெயர்\"  ref={fathernameref} required/>\r\n                \r\n              </Form.Group>\r\n          </Col>\r\n          <Col xs={12} md={4} className=\"rounded bg-white\">\r\n              <Form.Group className=\"mb-3\" name=\"address1\" border=\"primary\" >\r\n                <Form.Label>முகவரி</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"முகவரி\" ref={addressRef}  required/>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col xs={12} md={4} className=\"rounded bg-white\">\r\n              <Form.Group className=\"mb-3\" name=\"work\" border=\"primary\" >\r\n                <Form.Label>வேலை</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"வேலை\" ref={workRef}  required/>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row className=\"rounded bg-white text-center\">\r\n              <div className=\"col-md-12 mb-4 \" >\r\n                <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"text-center\" onClick={updateId ? updateCustomer : handleSubmit}>\r\n                சேமி\r\n                </Button>{' '}\r\n                <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"text-center\" onClick={clearFields}>\r\n                  புதிய\r\n                </Button>\r\n              </div>\r\n              \r\n              <div className=\"col-md-12 text-center\">\r\n                <List customers={customers} setUpdateUI={setUpdateUI}\r\n                updateMode={updateMode} />\r\n              </div>\r\n          </Row>\r\n        </Form>\r\n        </Row>\r\n      </Container>\r\n       \r\n    )\r\n}\r\nexport default AddCustomer;","//export const baseURL=\"http://localhost:1300\"\r\nexport const baseURL=\"https://loan-app-backend-77d2e30338cf.herokuapp.com\""],"names":["_ref","customers","setUpdateUI","updateMode","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","lastIndex","firstIndex","records","slice","nPage","Math","ceil","Object","keys","length","numbers","_toConsumableArray","Array","serialno","_jsx","Fragment","children","_jsxs","style","margin","Table","striped","bordered","hover","colSpan","map","customer","i","mobileno","cityname","relationtype","fathername","address","work","BiEditAlt","className","onClick","_id","city_id","BsTrash","id","axios","delete","concat","baseURL","then","res","preveState","Pagination","Prev","href","n","Item","Next","_excluded","ButtonGroup","React","ref","bsPrefix","size","_ref$vertical","vertical","_ref$role","role","_ref$as","as","Component","rest","_objectWithoutProperties","prefix","useBootstrapPrefix","baseClass","_objectSpread","classNames","displayName","noop","ToggleButton","name","checked","type","onChange","value","disabled","inputRef","props","_Fragment","autoComplete","Button","undefined","htmlFor","input","setInput","_useState3","_useState4","inputmobileno","setInputMobileno","_useState5","_useState6","setCustomer","_useState7","_useState8","updateUI","_useState9","_useState10","updateId","setUpdateId","_useState11","_useState12","radioValue","setRadioValue","_useState13","_useState14","citynames","setCitynames","_useState15","_useState16","validated","setValidated","_useState17","_useState18","city","setCity","fathernameref","useRef","addressRef","workRef","useEffect","get","data","addCustomer","post","cityid","current","Number","prevState","Container","Row","Form","Col","xs","md","Group","border","Label","Control","placeholder","required","e","target","Select","selected","radio","idx","variant","currentTarget","put","event","checkValidity","preventDefault","List","text","mobilenum","father","addr","wrk","relation"],"sourceRoot":""}