{"version":3,"file":"static/js/799.a0969d1e.chunk.js","mappings":"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","sources":["Reports/ListLineChecking.js","Reports/LinecheckingReport.js"],"sourcesContent":["import React, { Fragment,useState } from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {Table,Pagination } from \"react-bootstrap\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport {dateFormatdd} from \"../FunctionsGlobal/StartDateFn\"\r\n\r\nvar first = [];\r\nconst ListLineChecking=({pendingLoans,date})=>{\r\n  const { t, i18n } = useTranslation();\r\nconst[currentPage,setCurrentPage]=useState(1);\r\nconst recordsPerPage=20;\r\nconst lastIndex=currentPage*recordsPerPage;\r\nconst firstIndex=lastIndex-recordsPerPage;\r\nconst records=pendingLoans.slice(firstIndex,lastIndex);\r\nconst nPage=Math.ceil(Object.keys(pendingLoans).length/recordsPerPage);\r\nconst numbers=[...Array(nPage+1).keys()].slice(1);\r\nvar serialno=0;\r\nfirst = records.length > 0 ? pendingLoans[0] : \"\";\r\nserialno=(currentPage-1) * recordsPerPage;\r\n  \r\n  function prevPage(){\r\n    if(currentPage!==firstIndex)\r\n    {\r\n      setCurrentPage(currentPage-1)\r\n    }\r\n    \r\n  }\r\n  function nextPage(){\r\n    if(currentPage!==lastIndex){\r\n      setCurrentPage(currentPage+1);\r\n    }\r\n\r\n  }\r\n  function changeCPage(id){\r\n    setCurrentPage(id)\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <div className='col-md-6'>\r\n        <h2></h2>\r\n      </div>\r\n        <div className='col-md-6'><h3>{t('linechecking')}</h3></div>\r\n      <div className='col-md-3'>{first.city}</div>\r\n      <div className='col-md-3'>{first.linemanname}</div>\r\n      <div className='col-md-2'>{t('line')+\":\"+(pendingLoans.length>0?first.lineno:\"\")}</div>\r\n      <div className='col-md-2'>{t(\"bookno\")+\":\"+(pendingLoans.length>0?first.bookno:\"\")}</div>\r\n      <div className='col-md-2'>{dateFormatdd(date)}</div>\r\n      <div >\r\n        <Table  className='table text-center fs-6 table-bordered border-dark'  >\r\n          <thead>\r\n            <tr>\r\n            <th>\r\n                {t('no')}\r\n            </th>\r\n            <th>\r\n            {t('startdate')}\r\n            </th>\r\n                <th>\r\n                    {t('loanno')}\r\n                </th>\r\n              <th>\r\n                {t('customer')}\r\n              </th>\r\n              <th colSpan={2}>\r\n                {t('fathername')}\r\n              </th>\r\n              <th>\r\n                {t('address')}\r\n              </th>\r\n              <th>\r\n                {t('phoneno')}\r\n              </th>\r\n              <th>\r\n                {t('enddate')}\r\n              </th>\r\n              <th>\r\n                {t('loanamount')}\r\n              </th>\r\n              <th>\r\n                {t('paidamount')}\r\n              </th>\r\n              <th>\r\n                {t('pending')}\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              records && records.length>0\r\n              ?\r\n              (records.map((customer,i)=>{\r\n                serialno=serialno+1;\r\n                //console.log(\"enddatediff\"+customer['addFields'].daysCountloan);\r\n                //console.log(\"weekdiff\"+customer['addFields'].daysCount);\r\n                return(\r\n                  <tr>\r\n                    <td>{serialno}</td>\r\n                    <td>{dateFormatdd(customer.startdate)}</td>\r\n                    <td>{customer.loannumber}</td>\r\n                    <td>{customer.customer}</td>\r\n                    <td>{customer.relationtype==0 ? \"F\" : \"H\"}</td>\r\n                    <td >{customer.fathername}</td>\r\n                    <td>{customer.address}</td>\r\n                    <td>{customer.mobileno}</td>\r\n                    <td>{dateFormatdd(customer.finisheddate)}</td>\r\n                    <td>{customer.totalamount-customer.collectedtotal}</td>\r\n                    <td>{customer.collectedamountdate}</td>\r\n                    {\r\n                      customer['addFields'].daysCountloan>0\r\n                      ?\r\n                      <td style={{backgroundColor:\"red\"}}>{customer.totalamount-customer.collectedtotal}</td>\r\n                      :\r\n                      customer['addFields'].daysCount>2 && customer.collectedamountdate===0\r\n                      ?\r\n                      <td style={{backgroundColor:\"black\",color:\"white\"}}>{(customer['addFields'].daysCount * customer.dueamount)-(customer.collectedamountdate)}</td>\r\n                      :\r\n                      <td >{(customer['addFields'].daysCount * customer.dueamount)-(customer.collectedamountdate)}</td>\r\n                    }\r\n                      \r\n                    \r\n                    \r\n                  </tr>\r\n                  \r\n                )\r\n              })\r\n              )\r\n              :\r\n              t('tabledata')\r\n            }\r\n          </tbody>\r\n        </Table>\r\n        <nav>\r\n        \r\n          <Pagination>\r\n            <Pagination.Prev >\r\n            <a href=\"#\" className='page-link' onClick={prevPage}>{t('pageprev')}</a>\r\n            </Pagination.Prev>\r\n            {\r\n            numbers.map((n,i)=>(\r\n              <Pagination.Item>\r\n                <a href=\"#\" className='page-link'\r\n            onClick={()=>changeCPage(n)}>{n}</a>\r\n              </Pagination.Item>\r\n            ))\r\n          }\r\n            <Pagination.Next>\r\n            <a href=\"#\" className='page-link' onClick={nextPage}>{t('pagenext')}</a>\r\n            </Pagination.Next>\r\n          </Pagination>\r\n        </nav>\r\n\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default ListLineChecking\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Container, Form, Row, Col } from 'react-bootstrap';\r\nimport { baseURL } from \"../utils/constant\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport PlaceHolder from \"../components/spinner/placeholder\";\r\nimport { startOfWeek } from '../FunctionsGlobal/StartDateFn';\r\nimport ListLineChecking from \"./ListLineChecking\";\r\nimport ReactToPrint from 'react-to-print';\r\nvar first = [];\r\n\r\nfunction LinecheckingReport() {\r\n    const [cityNames, setCityNames] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [checkingDetails, setCheckingDetails] = useState([]);\r\n    const { t, i18n } = useTranslation();\r\n    const [city, setCity] = useState(\"\");\r\n    const startDateRef = useRef(null);\r\n    const endDateRef = useRef(startOfWeek());\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        axios.get(`${baseURL}/citycreate/get`).then((res) => {\r\n            setCityNames(res.data);\r\n            setIsLoading(false);\r\n        }).catch(error => {\r\n            console.log(\"error=\", error);\r\n            setErrorMessage(t('errormessagecity'));\r\n            setIsLoading(false);\r\n        })\r\n    }, [])\r\n    const processList = () => {\r\n        setIsLoading(true);\r\n\r\n        return (\r\n            axios.get(`${baseURL}/loan/checkingdetails`, { params: { city_id: city.toString(), fromdate: startDateRef.current.value, todate: endDateRef.current.value } }).then((res) => {\r\n                setCheckingDetails(res.data)\r\n                console.log(res.data)\r\n                setIsLoading(false);\r\n            })\r\n                .catch(error => {\r\n                    console.log(\"error=\", error);\r\n                    setErrorMessage(t('erroressagelinechecking'));\r\n                    setIsLoading(false);\r\n                })\r\n        )\r\n    }\r\n    const componentRef = useRef();\r\n    const handlePrint = () => {\r\n        window.print()\r\n    }\r\n    const renderLineCheckingList = (\r\n        <Row ref={componentRef}>\r\n            <ListLineChecking pendingLoans={checkingDetails} date={endDateRef.current.value} />\r\n        </Row>\r\n\r\n    )\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Form>\r\n                    <Row >\r\n                        <Col xs={12} md={6} className=\"rounder bg-white\">\r\n                            <Form.Group className=\"mb-3\" name=\"linenumber\" border=\"primary\" >\r\n                                <Form.Label>{t('city')}</Form.Label>\r\n                                <Form.Select aria-label=\"Default select example\" value={city} onChange={(e) => setCity(e.target.value)} required>\r\n                                    <option key={\"\"} value={\"\"} >{t('cityplaceholder')}</option>\r\n\r\n                                    {\r\n                                        cityNames.map((cities) => (\r\n                                            <option key={cities._id} value={cities._id}\r\n                                                selected={cities._id} >{cities.cityname}</option>\r\n                                        ))}\r\n\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={3} className=\"rounder bg-white\">\r\n                            <Form.Group>\r\n                                <Form.Label>{t('startdate')}</Form.Label>\r\n                                <Form.Control type=\"date\" ref={startDateRef} placeholder=\"loan start date\" defaultValue={startOfWeek()} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col md={3} className=\"rounder bg-white\">\r\n                            <Form.Group>\r\n                                <Form.Label>{t('enddate')}</Form.Label>\r\n                                <Form.Control type=\"date\" ref={endDateRef} placeholder=\"loan start date\" defaultValue={startOfWeek()} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row className=\"rounded bg-white text-center\">\r\n                        <div className=\"col-md-6 mb-4 \" >\r\n                            <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"text-center\" onClick={processList}>\r\n                                {t('processbuttonlabel')}\r\n                            </Button>{' '}\r\n                        </div>\r\n                        <div className=\"col-md-6 mb-4 \">\r\n                            <ReactToPrint trigger={() => (\r\n                                <Button variant=\"primary\" size=\"lg\" type=\"button\" className=\"text-center\" onClick={() => handlePrint}>\r\n                                    {t('printbutton')}\r\n                                </Button>\r\n\r\n                            )}\r\n                                content={() => componentRef.current} />\r\n                        </div>\r\n                    </Row>\r\n                    {isLoading ? <PlaceHolder /> : renderLineCheckingList}\r\n                    {errorMessage && <div className=\"error\">{errorMessage}</div>}\r\n\r\n\r\n                </Form>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\nexport default LinecheckingReport;"],"names":["first","_ref","pendingLoans","date","_useTranslation","useTranslation","t","_useState","i18n","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","lastIndex","firstIndex","records","slice","nPage","Math","ceil","Object","keys","length","numbers","_toConsumableArray","Array","serialno","_jsxs","Fragment","children","_jsx","className","city","linemanname","lineno","bookno","dateFormatdd","Table","colSpan","map","customer","i","startdate","loannumber","relationtype","fathername","address","mobileno","finisheddate","totalamount","collectedtotal","collectedamountdate","daysCountloan","style","backgroundColor","daysCount","color","dueamount","Pagination","Prev","href","onClick","n","Item","Next","cityNames","setCityNames","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","checkingDetails","setCheckingDetails","_useState9","_useState10","setCity","startDateRef","useRef","endDateRef","startOfWeek","useEffect","axios","get","concat","baseURL","then","res","data","catch","error","console","log","componentRef","handlePrint","window","print","renderLineCheckingList","Row","ref","ListLineChecking","current","value","Container","Form","Col","xs","md","Group","name","border","Label","Select","onChange","e","target","required","cities","_id","selected","cityname","Control","type","placeholder","defaultValue","Button","variant","size","params","city_id","toString","fromdate","todate","ReactToPrint","trigger","content","PlaceHolder"],"sourceRoot":""}