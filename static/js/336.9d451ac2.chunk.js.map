{"version":3,"file":"static/js/336.9d451ac2.chunk.js","mappings":"qTA+GA,EAvGe,SAADA,GAAwC,IAArCC,EAASD,EAATC,UAAUC,EAAWF,EAAXE,YAAYC,EAAUH,EAAVG,WACvCC,GAAkCC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAAWF,EAAA,GAACG,EAAcH,EAAA,GAE1BI,EADe,EACLF,EACVG,EAAWD,EAFI,EAGfE,EAAQX,EAAUY,MAAMF,EAAWD,GACnCI,EAAMC,KAAKC,KAAKC,OAAOC,KAAKjB,GAAWkB,OAJxB,GAKfC,GAAQC,EAAAA,EAAAA,GAAIC,MAAMR,EAAM,GAAGI,QAAQL,MAAM,GAC3CU,EAAS,EAEbA,EARqB,GAQXf,EAAY,GAuBpB,OACEgB,EAAAA,EAAAA,KAACC,EAAAA,SAAQ,CAAAC,UACPC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,OAAO,QAAQH,SAAA,EAC1BC,EAAAA,EAAAA,MAACG,EAAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,KAAK,KAAIR,SAAA,EACrCF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,wBAGJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oCAGJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,8BAGJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,yCAKRF,EAAAA,EAAAA,KAAA,SAAAE,SAEId,GAAWA,EAAQO,OAAO,EAEzBP,EAAQuB,KAAI,SAACC,EAASC,GAErB,OADAd,GAAkB,GAEhBI,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAKH,KACLC,EAAAA,EAAAA,KAAA,MAAAE,SAAKU,EAASA,YACdT,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,OAAKU,EAASE,eAClBX,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACAF,EAAAA,EAAAA,KAACe,EAAAA,IAAS,CAAEC,UAAU,QAAQC,QAAS,kBAAItC,EAAWiC,EAASM,IAAIN,EAASA,SAASA,EAASE,WAAW,KACzGd,EAAAA,EAAAA,KAACmB,EAAAA,IAAO,CAACH,UAAU,QAAQC,QAAS,kBAvDtCG,EAuDqDR,EAASM,SAtD5EG,EAAAA,EAAMC,OAAO,GAADC,OAAIC,EAAAA,EAAO,YAAAD,OAAWH,IAAMK,MAAK,SAACC,GAC1ChD,GAAY,SAACiD,GAAU,OAAIA,CAAU,GACvC,IAHW,IAACP,CAuDkE,SAKtE,IAGA,gEAINpB,EAAAA,EAAAA,KAAA,OAAAE,UAEEC,EAAAA,EAAAA,MAACyB,EAAAA,EAAU,CAAA1B,SAAA,EACTF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAWC,KAAI,CAAA3B,UAChBF,EAAAA,EAAAA,KAAA,KAAG8B,KAAK,IAAId,UAAU,YAAYC,QAlE9C,WACOjC,IAAcG,GAEfF,EAAeD,EAAY,EAG/B,EA4D8DkB,SAAC,+BAGrDN,EAAQe,KAAI,SAACoB,EAAElB,GAAC,OACdb,EAAAA,EAAAA,KAAC4B,EAAAA,EAAWI,KAAI,CAAA9B,UACdF,EAAAA,EAAAA,KAAA,KAAG8B,KAAK,IAAId,UAAU,YAC1BC,QAAS,WAzDjBhC,EAyDiC8C,EAAE,EAAC7B,SAAE6B,KACV,KAGpB/B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAWK,KAAI,CAAA/B,UAChBF,EAAAA,EAAAA,KAAA,KAAG8B,KAAK,IAAId,UAAU,YAAYC,QAtE5C,WACKjC,IAAcE,IACba,EAASb,EACXD,EAAeD,EAAY,GAG/B,EAgE8DkB,SAAC,wCASjE,ECAA,MAxGA,WAEI,IAAAtB,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCsD,EAASpD,EAAA,GAACqD,EAAYrD,EAAA,GAC5BsD,GAAwBvD,EAAAA,EAAAA,UAAS,IAAGwD,GAAAtD,EAAAA,EAAAA,GAAAqD,EAAA,GAA9BE,EAAMD,EAAA,GAACE,EAASF,EAAA,GACtBG,GAA8B3D,EAAAA,EAAAA,UAAS,IAAG4D,GAAA1D,EAAAA,EAAAA,GAAAyD,EAAA,GAApCE,EAASD,EAAA,GAACE,EAAYF,EAAA,GAC5BG,GAA8B/D,EAAAA,EAAAA,UAAS,IAAGgE,GAAA9D,EAAAA,EAAAA,GAAA6D,EAAA,GAApCE,EAASD,EAAA,GAACE,EAAYF,EAAA,GAC5BG,GAA4BnE,EAAAA,EAAAA,WAAS,GAAMoE,GAAAlE,EAAAA,EAAAA,GAAAiE,EAAA,GAArCE,EAAQD,EAAA,GAACvE,EAAWuE,EAAA,GAC1BE,GAA4BtE,EAAAA,EAAAA,UAAS,MAAKuE,GAAArE,EAAAA,EAAAA,GAAAoE,EAAA,GAApCE,EAAQD,EAAA,GAACE,EAAWF,EAAA,GAC1BG,GAAkC1E,EAAAA,EAAAA,WAAS,GAAM2E,GAAAzE,EAAAA,EAAAA,GAAAwE,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,IAC9BG,EAAAA,EAAAA,YAAU,WACNtC,EAAAA,EAAMuC,IAAI,GAADrC,OAAIC,EAAAA,EAAO,oBAAmBC,MAAK,SAACC,GAEzCiB,EAAajB,EAAImC,KACrB,GACJ,GAAE,CAACX,KACHS,EAAAA,EAAAA,YAAU,WACNtC,EAAAA,EAAMuC,IAAI,GAADrC,OAAIC,EAAAA,EAAO,6BAA4BC,MAAK,SAACC,GAClDqB,EAAarB,EAAImC,KACrB,GACJ,GAAE,IAEF,IAaMC,EAAY,WACdzC,EAAAA,EAAM0C,KAAK,GAADxC,OAAIC,EAAAA,EAAO,oBAAmB,CAACZ,SAASsB,EAAUpB,WAAWwB,IACtEb,MAAK,SAACC,GACHS,EAAa,IACbI,EAAU,IACV7D,GAAY,SAACsF,GAAS,OAAIA,CAAS,GACvC,IACAC,MAAM,0BACV,EAuBA,OACI9D,EAAAA,EAAAA,MAAC+D,EAAAA,EAAS,CAAAhE,SAAA,EACNF,EAAAA,EAAAA,KAAA,MAAIgB,UAAU,cAAad,SAAC,6DAC5BF,EAAAA,EAAAA,KAACmE,EAAAA,EAAG,CAACnD,UAAU,kCAAiCd,UAC5CF,EAAAA,EAAAA,KAACoE,EAAAA,EAAG,CAACC,GAAI,EAAGC,GAAI,EAAGtD,UAAU,mBAAkBd,UAC3CC,EAAAA,EAAAA,MAACoE,EAAAA,EAAI,CAACd,UAAWA,EAAUvD,SAAA,EACvBC,EAAAA,EAAAA,MAACoE,EAAAA,EAAKC,MAAK,CAACxD,UAAU,OAAOyD,KAAK,WAAWC,OAAO,UAASxE,SAAA,EACzDF,EAAAA,EAAAA,KAACuE,EAAAA,EAAKI,MAAK,CAAAzE,SAAC,wBACZF,EAAAA,EAAAA,KAACuE,EAAAA,EAAKK,QAAO,CAACC,KAAK,OAAOC,YAAY,qBAAMC,UAAQ,EAACC,MAAO9C,EAAW+C,SAAU,SAACC,GAAC,OAAG/C,EAAa+C,EAAEC,OAAOH,MAAM,QAEtH7E,EAAAA,EAAAA,MAACoE,EAAAA,EAAKC,MAAK,CAACxD,UAAU,OAAOyD,KAAK,aAAaC,OAAO,UAASxE,SAAA,EAC3DF,EAAAA,EAAAA,KAACuE,EAAAA,EAAKI,MAAK,CAAAzE,SAAC,8BACZC,EAAAA,EAAAA,MAACoE,EAAAA,EAAKa,OAAM,CAAE,aAAW,yBAA0BJ,MAAO1C,EAAQ2C,SAAU,SAACC,GAAC,OAAG3C,EAAU2C,EAAEC,OAAOH,MAAM,EAAED,UAAQ,EAAA7E,SAAA,EACpHF,EAAAA,EAAAA,KAAA,UAAsBgF,MAAO,GAAG9E,SAAE,+IAApBoC,GAGdQ,EAAUnC,KAAI,SAAC0E,GAAK,OACpBrF,EAAAA,EAAAA,KAAA,UAA2BgF,MAAOK,EAAMC,OACxCC,SAAUF,EAAMC,OAAOpF,SAAGmF,EAAMG,UADnBH,EAAMC,OAC+B,WAKtDnF,EAAAA,EAAAA,MAAA,OAAKa,UAAU,yBAAwBd,SAAA,EACvCF,EAAAA,EAAAA,KAACyF,EAAAA,EAAM,CAACC,QAAQ,UAAUb,KAAK,SAAS7D,UAAU,cAAcC,QAASoC,EAhC1E,WACfhC,EAAAA,EAAMsE,IAAI,GAADpE,OAAIC,EAAAA,EAAO,uBAAAD,OAAsB8B,GAAW,CAACzC,SAASsB,EAAUpB,WAAWwB,IAASb,MAAK,SAACC,GACnGhD,GAAY,SAACsF,GAAS,OAAIA,CAAS,IACnC7B,EAAa,IACbI,EAAU,IACVe,EAAY,KACZ,GACF,EA3CmB,SAACsC,IAEW,IADhBA,EAAMC,cACVC,iBACPF,EAAMG,iBAERrC,GAAa,GAEG,KAAbxB,GAA4B,KAATI,GAEpBwB,GAGJ,EAwDgI5D,SAAC,6BAErG,KACVF,EAAAA,EAAAA,KAACyF,EAAAA,EAAM,CAACC,QAAQ,UAChBb,KAAK,SAAS7D,UAAU,cAAcC,QAlDxC,WACdkB,EAAa,IACbI,EAAU,IACVe,EAAY,KAChB,EA8C+EpD,SAAC,uCAE5DF,EAAAA,EAAAA,KAAA,MAAAE,UACIF,EAAAA,EAAAA,KAACgG,EAAQ,CAACvH,UAAWiE,EAAWhE,YAAaA,EAAaC,WA/CjE,SAACyC,EAAG6E,EAAKX,GAEtBnD,EAAa8D,GACb1D,EAAU+C,GACVhC,EAAYlC,EAEd,eAgDN,C,uDC5GO,IAAMI,EAAQ,qD","sources":["components/ListCity.js","AddCityName.js","utils/constant.js"],"sourcesContent":["import React,{Fragment,useState} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Table,Pagination } from \"react-bootstrap\";\nimport {BiEditAlt} from \"react-icons/bi\"\nimport {BsTrash} from \"react-icons/bs\"\nimport axios from 'axios'\nimport {baseURL} from \"../utils/constant\";\n\nconst ListCity=({citynames,setUpdateUI,updateMode})=>{\nconst[currentPage,setCurrentPage]=useState(1);\nconst recordsPerPage=5;\nconst lastIndex=currentPage*recordsPerPage;\nconst firstIndex=lastIndex-recordsPerPage;\nconst records=citynames.slice(firstIndex,lastIndex);\nconst nPage=Math.ceil(Object.keys(citynames).length/recordsPerPage);\nconst numbers=[...Array(nPage+1).keys()].slice(1);\nvar serialno=0;\n\nserialno=(currentPage-1) * recordsPerPage;\nconst removeCity=(id)=>{\n    axios.delete(`${baseURL}/delete/${id}`).then((res)=>{\n        setUpdateUI((preveState)=>!preveState)\n      })\n}\nfunction prevPage(){\n    if(currentPage!==firstIndex)\n    {\n      setCurrentPage(currentPage-1)\n    }\n    \n  }\n  function nextPage(){\n    if(currentPage!==lastIndex){\n        serialno=lastIndex;\n      setCurrentPage(currentPage+1);\n    }\n\n  }\n  function changeCPage(id){\n    setCurrentPage(id)\n  }\n  return(\n    <Fragment>\n      <div style={{margin:\"5rem\"}}>\n        <Table striped bordered hover size=\"sm\"  >\n          <thead>\n            <tr>\n              <th>\n              எண்\n              </th>\n              <th>\n              பெயர்\n              </th>\n              <th>\n                லைன்\n              </th>\n              <th>\n                செயல்\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              records && records.length>0\n              ?\n              (records.map((cityname,i)=>{\n                serialno=serialno+1;\n                return(\n                  <tr>\n                    <td>{serialno}</td>\n                    <td>{cityname.cityname}</td>\n                    <td>Line{cityname.citylineno}</td>\n                    <td>\n                    <BiEditAlt  className='icons' onClick={()=>updateMode(cityname._id,cityname.cityname,cityname.citylineno)} />\n                    <BsTrash className='icons' onClick={()=>removeCity(cityname._id)} />\n                    </td>\n                  </tr>\n                  \n                )\n              })\n              )\n              :\n              \"தரவு இல்லை\"\n            }\n          </tbody>\n        </Table>\n        <nav>\n        \n          <Pagination>\n            <Pagination.Prev >\n            <a href=\"#\" className='page-link' onClick={prevPage}>முன்</a>\n            </Pagination.Prev>\n            {\n            numbers.map((n,i)=>(\n              <Pagination.Item>\n                <a href=\"#\" className='page-link'\n            onClick={()=>changeCPage(n)}>{n}</a>\n              </Pagination.Item>\n            ))\n          }\n            <Pagination.Next>\n            <a href=\"#\" className='page-link' onClick={nextPage}>பின்</a>\n            </Pagination.Next>\n          </Pagination>\n        </nav>\n\n      </div>\n    </Fragment>\n  )\n\n}\nexport default ListCity;\n","import React ,{useEffect, useState} from \"react\";\nimport {Button,Container,Form,Row,Col} from 'react-bootstrap';\nimport axios from \"axios\";\nimport {baseURL} from \"./utils/constant\";\nimport ListCity from \"./components/ListCity\"\n//var maxCitycode=0;\nfunction AddCityName(){\n\n    const[inputCity,setInputCity]=useState(\"\");\n    const[lineNo,setLineNo]=useState(\"\");\n    const[cityNames,setCityNames]=useState([]);\n    const[lineNames,setLineNames]=useState([]);\n    const[updateUI,setUpdateUI]=useState(false);\n    const[updateId,setUpdateId]=useState(null);\n    const [validated, setValidated] = useState(false);\n    useEffect(()=>{\n        axios.get(`${baseURL}/citycreate/get`).then((res)=>{\n            //console.log(res.data)\n            setCityNames(res.data)\n        })\n    },[updateUI]);\n    useEffect(()=>{\n        axios.get(`${baseURL}/linemancreate/get/lines`).then((res)=>{\n            setLineNames(res.data);\n        }) \n    },[])\n    \n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n          event.preventDefault();\n        }\n        setValidated(true);\n    \n        if(inputCity !==\"\" && lineNo!==\"\")\n        {\n          addCityName();\n        }\n        \n      };\n    const addCityName=()=>{\n        axios.post(`${baseURL}/citycreate/save`,{cityname:inputCity,citylineno:lineNo})\n        .then((res)=>{\n            setInputCity(\"\");\n            setLineNo(\"\");\n            setUpdateUI((prevState)=>!prevState);\n        })\n        alert(\"City Saved Successfully\");\n    }\n    const clearFields=()=>{\n        setInputCity(\"\");\n        setLineNo(\"\"); \n        setUpdateId(null);  \n    }\n    \n    const updateMode=(id,text,lineno)=>{\n        //console.log(mobilenum);\n        setInputCity(text);\n        setLineNo(lineno)\n        setUpdateId(id);\n        \n      }\n    \n      const updateCity=()=>{\n        axios.put(`${baseURL}/citycreate/update/${updateId}`,{cityname:inputCity,citylineno:lineNo}).then((res)=>{\n        setUpdateUI((prevState)=>!prevState)\n        setInputCity(\"\");\n        setLineNo(\"\");\n        setUpdateId(null);\n        })\n      }\n    return(\n        <Container>\n            <h2 className=\"text-center\">ஊர் விபரம்</h2>\n            <Row className=\"justify-content-md-center mt-5 \">\n                <Col xs={6} lg={6} className=\"rounded bg-white\">\n                    <Form validated={validated}>\n                        <Form.Group className=\"mb-3\" name=\"cityname\" border=\"primary\" >\n                            <Form.Label>ஊர்</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"ஊர்\" required value={inputCity} onChange={(e)=>setInputCity(e.target.value)} />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3\" name=\"linenumber\" border=\"primary\" >\n                            <Form.Label>லைன்</Form.Label>\n                            <Form.Select  aria-label=\"Default select example\"  value={lineNo} onChange={(e)=>setLineNo(e.target.value)} required>\n                            <option  key={lineNo} value={\"\"} >மெனுவை தேர்ந்தெடுக்கவும்</option>\n\n                            {\n                            lineNames.map((lines) => (\n                            <option key={lines.lineno} value={lines.lineno}  \n                            selected={lines.lineno} >{lines.linename}</option>\n                            ))}\n\n                            </Form.Select>\n                        </Form.Group>\n                        <div className=\"col-md-12 text-center \" >\n                        <Button variant=\"primary\" type=\"button\" className=\"text-center\" onClick={updateId ? updateCity : handleSubmit}>\n                        சேமி\n                        </Button>{' '}\n                        <Button variant=\"primary\"  \n                        type=\"button\" className=\"text-center\" onClick={clearFields}>புதிய</Button>\n                        </div> \n                        <ul>\n                            <ListCity citynames={cityNames} setUpdateUI={setUpdateUI} updateMode={updateMode}/>\n                        </ul>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    ) \n}\nexport default AddCityName;","//export const baseURL=\"http://localhost:1300\"\nexport const baseURL=\"https://loan-app-backend-77d2e30338cf.herokuapp.com\""],"names":["_ref","citynames","setUpdateUI","updateMode","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","lastIndex","firstIndex","records","slice","nPage","Math","ceil","Object","keys","length","numbers","_toConsumableArray","Array","serialno","_jsx","Fragment","children","_jsxs","style","margin","Table","striped","bordered","hover","size","map","cityname","i","citylineno","BiEditAlt","className","onClick","_id","BsTrash","id","axios","delete","concat","baseURL","then","res","preveState","Pagination","Prev","href","n","Item","Next","inputCity","setInputCity","_useState3","_useState4","lineNo","setLineNo","_useState5","_useState6","cityNames","setCityNames","_useState7","_useState8","lineNames","setLineNames","_useState9","_useState10","updateUI","_useState11","_useState12","updateId","setUpdateId","_useState13","_useState14","validated","setValidated","useEffect","get","data","addCityName","post","prevState","alert","Container","Row","Col","xs","lg","Form","Group","name","border","Label","Control","type","placeholder","required","value","onChange","e","target","Select","lines","lineno","selected","linename","Button","variant","put","event","currentTarget","checkValidity","preventDefault","ListCity","text"],"sourceRoot":""}